<span title="LineNr "class="LineNr first-LineNr">1</span>  <span title="erlangComment "class="erlangComment">%% </span><span title="erlangCommentAnnotation "class="erlangCommentAnnotation">@doc</span><span title="erlangComment "class="erlangComment"> A binary tree implementation in Erlang.
</span><span title="LineNr "class="LineNr">2</span>  <span title="erlangComment "class="erlangComment">%%      A binary tree stores keys and values.
</span><span title="LineNr "class="LineNr">3</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">4</span>  <span title="erlangAttribute "class="erlangAttribute">-module</span><span title="Normal "class="Normal">(</span><span title="erlangAtom "class="erlangAtom">binary_tree</span><span title="Normal "class="Normal">).
</span><span title="LineNr "class="LineNr">5</span>  <span title="erlangAttribute "class="erlangAttribute">-export</span><span title="Normal "class="Normal">(</span><span title="erlangBracket "class="erlangBracket">[</span><span title="erlangLocalFuncRef "class="erlangLocalFuncRef">init</span><span title="erlangOperator "class="erlangOperator">/</span><span title="erlangNumberInteger "class="erlangNumberInteger">0</span><span title="Normal "class="Normal">, </span><span title="erlangLocalFuncRef "class="erlangLocalFuncRef">init</span><span title="erlangOperator "class="erlangOperator">/</span><span title="erlangNumberInteger "class="erlangNumberInteger">1</span><span title="Normal "class="Normal">, </span><span title="erlangLocalFuncRef "class="erlangLocalFuncRef">insert</span><span title="erlangOperator "class="erlangOperator">/</span><span title="erlangNumberInteger "class="erlangNumberInteger">3</span><span title="Normal "class="Normal">, </span><span title="erlangLocalFuncRef "class="erlangLocalFuncRef">lookup</span><span title="erlangOperator "class="erlangOperator">/</span><span title="erlangNumberInteger "class="erlangNumberInteger">2</span><span title="erlangBracket "class="erlangBracket">]</span><span title="Normal "class="Normal">).
</span><span title="LineNr "class="LineNr">6</span>  <span title="erlangDefine "class="erlangDefine">-define</span><span title="Normal "class="Normal">(</span><span title="erlangMacro "class="erlangMacro">EMPTY_NODE</span><span title="Normal "class="Normal">, </span><span title="erlangBracket "class="erlangBracket">{</span><span title="erlangAtom "class="erlangAtom">node</span><span title="Normal "class="Normal">, </span><span title="erlangQuotedAtom "class="erlangQuotedAtom">&#39;empty&#39;</span><span title="erlangBracket "class="erlangBracket">}</span><span title="Normal "class="Normal">).
</span><span title="LineNr "class="LineNr">7</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">8</span>  <span title="erlangComment "class="erlangComment">%% </span><span title="erlangCommentAnnotation "class="erlangCommentAnnotation">@doc</span><span title="erlangComment "class="erlangComment"> Initialize an empty binary tree node.
</span><span title="LineNr "class="LineNr">9</span>  <span title="erlangComment "class="erlangComment">%%      This is how the root of the tree should be established.
</span><span title="LineNr "class="LineNr">10</span>  <span title="erlangComment "class="erlangComment">%%
</span><span title="LineNr "class="LineNr">11</span>  <span title="erlangComment "class="erlangComment">%% </span><span title="erlangCommentAnnotation "class="erlangCommentAnnotation">@spec</span><span title="erlangComment "class="erlangComment"> init() -&gt; tree().
</span><span title="LineNr "class="LineNr">12</span>  <span title="erlangLocalFuncCall "class="erlangLocalFuncCall">init</span><span title="Normal "class="Normal">() </span><span title="erlangRightArrow "class="erlangRightArrow">-&gt;
</span><span title="LineNr "class="LineNr">13</span>  <span title="Normal "class="Normal">  </span><span title="erlangMacro "class="erlangMacro">?EMPTY_NODE</span><span title="Normal "class="Normal">.
</span><span title="LineNr "class="LineNr">14</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">15</span>  <span title="erlangComment "class="erlangComment">%% </span><span title="erlangCommentAnnotation "class="erlangCommentAnnotation">@doc</span><span title="erlangComment "class="erlangComment"> Initialize a binary tree with the given list of Keys and Values.
</span><span title="LineNr "class="LineNr">16</span>  <span title="erlangComment "class="erlangComment">%%      Each Key-Value pair is given as a Pair in a List.
</span><span title="LineNr "class="LineNr">17</span>  <span title="erlangComment "class="erlangComment">%%
</span><span title="LineNr "class="LineNr">18</span>  <span title="erlangComment "class="erlangComment">%% </span><span title="erlangCommentAnnotation "class="erlangCommentAnnotation">@spec</span><span title="erlangComment "class="erlangComment"> init([pair(), pair(), ...]) -&gt; tree().
</span><span title="LineNr "class="LineNr">19</span>  <span title="erlangLocalFuncCall "class="erlangLocalFuncCall">init</span><span title="Normal "class="Normal">(</span><span title="erlangVariable "class="erlangVariable">Pairs</span><span title="Normal "class="Normal">) </span><span title="erlangRightArrow "class="erlangRightArrow">-&gt;
</span><span title="LineNr "class="LineNr">20</span>  <span title="Normal "class="Normal">  </span><span title="erlangLocalFuncCall "class="erlangLocalFuncCall">insert</span><span title="Normal "class="Normal">(</span><span title="erlangVariable "class="erlangVariable">Pairs</span><span title="Normal "class="Normal">, </span><span title="erlangLocalFuncCall "class="erlangLocalFuncCall">init</span><span title="Normal "class="Normal">()).
</span><span title="LineNr "class="LineNr">21</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">22</span>  <span title="erlangComment "class="erlangComment">%% </span><span title="erlangCommentAnnotation "class="erlangCommentAnnotation">@doc</span><span title="erlangComment "class="erlangComment"> Find an existing value by its Key.
</span><span title="LineNr "class="LineNr">23</span>  <span title="erlangComment "class="erlangComment">%%      If the Key does not exist, {none, &#39;undefined&#39;} is returned.
</span><span title="LineNr "class="LineNr">24</span>  <span title="erlangComment "class="erlangComment">%%
</span><span title="LineNr "class="LineNr">25</span>  <span title="erlangComment "class="erlangComment">%% </span><span title="erlangCommentAnnotation "class="erlangCommentAnnotation">@spec</span><span title="erlangComment "class="erlangComment"> lookup(integer(), tree()) -&gt; {ok, term()} | {none, &#39;undefined&#39;}.
</span><span title="LineNr "class="LineNr">26</span>  <span title="erlangLocalFuncCall "class="erlangLocalFuncCall">lookup</span><span title="Normal "class="Normal">(</span><span title="erlangVariable "class="erlangVariable">_K</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">_Tree</span><span title="Normal "class="Normal"> </span><span title="erlangOperator "class="erlangOperator">&#61;</span><span title="Normal "class="Normal"> </span><span title="erlangMacro "class="erlangMacro">?EMPTY_NODE</span><span title="Normal "class="Normal">) </span><span title="erlangRightArrow "class="erlangRightArrow">-&gt;
</span><span title="LineNr "class="LineNr">27</span>  <span title="Normal "class="Normal">  </span><span title="erlangBracket "class="erlangBracket">{</span><span title="erlangAtom "class="erlangAtom">none</span><span title="Normal "class="Normal">, </span><span title="erlangQuotedAtom "class="erlangQuotedAtom">&#39;undefined&#39;</span><span title="erlangBracket "class="erlangBracket">}</span><span title="Normal "class="Normal">;
</span><span title="LineNr "class="LineNr">28</span>  <span title="erlangLocalFuncCall "class="erlangLocalFuncCall">lookup</span><span title="Normal "class="Normal">(</span><span title="erlangVariable "class="erlangVariable">K</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">_Tree</span><span title="Normal "class="Normal"> </span><span title="erlangOperator "class="erlangOperator">&#61;</span><span title="Normal "class="Normal"> </span><span title="erlangBracket "class="erlangBracket">{</span><span title="erlangAtom "class="erlangAtom">node</span><span title="Normal "class="Normal">, </span><span title="erlangBracket "class="erlangBracket">{</span><span title="erlangVariable "class="erlangVariable">NodeK</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">V</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">Left</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">Right</span><span title="erlangBracket "class="erlangBracket">}}</span><span title="Normal "class="Normal">) </span><span title="erlangRightArrow "class="erlangRightArrow">-&gt;
</span><span title="LineNr "class="LineNr">29</span>  <span title="Normal "class="Normal">  </span><span title="erlangKeyword "class="erlangKeyword">if</span><span title="Normal "class="Normal"> </span><span title="erlangVariable "class="erlangVariable">K</span><span title="Normal "class="Normal"> </span><span title="erlangOperator "class="erlangOperator">&#61;&#61;</span><span title="Normal "class="Normal"> </span><span title="erlangVariable "class="erlangVariable">NodeK</span><span title="Normal "class="Normal"> </span><span title="erlangRightArrow "class="erlangRightArrow">-&gt;</span><span title="Normal "class="Normal"> </span><span title="erlangBracket "class="erlangBracket">{</span><span title="erlangAtom "class="erlangAtom">ok</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">V</span><span title="erlangBracket "class="erlangBracket">}
</span><span title="LineNr "class="LineNr">30</span>  <span title="Normal "class="Normal">   ; </span><span title="erlangVariable "class="erlangVariable">K</span><span title="Normal "class="Normal"> </span><span title="erlangOperator "class="erlangOperator">&lt;</span><span title="Normal "class="Normal">  </span><span title="erlangVariable "class="erlangVariable">NodeK</span><span title="Normal "class="Normal"> </span><span title="erlangRightArrow "class="erlangRightArrow">-&gt;</span><span title="Normal "class="Normal"> </span><span title="erlangLocalFuncCall "class="erlangLocalFuncCall">lookup</span><span title="Normal "class="Normal">(</span><span title="erlangVariable "class="erlangVariable">K</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">Left</span><span title="Normal "class="Normal">)
</span><span title="LineNr "class="LineNr">31</span>  <span title="Normal "class="Normal">   ; </span><span title="erlangVariable "class="erlangVariable">K</span><span title="Normal "class="Normal"> </span><span title="erlangOperator "class="erlangOperator">&gt;</span><span title="Normal "class="Normal">  </span><span title="erlangVariable "class="erlangVariable">NodeK</span><span title="Normal "class="Normal"> </span><span title="erlangRightArrow "class="erlangRightArrow">-&gt;</span><span title="Normal "class="Normal"> </span><span title="erlangLocalFuncCall "class="erlangLocalFuncCall">lookup</span><span title="Normal "class="Normal">(</span><span title="erlangVariable "class="erlangVariable">K</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">Right</span><span title="Normal "class="Normal">)
</span><span title="LineNr "class="LineNr">32</span>  <span title="Normal "class="Normal">  </span><span title="erlangKeyword "class="erlangKeyword">end</span><span title="Normal "class="Normal">.
</span><span title="LineNr "class="LineNr">33</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">34</span>  <span title="erlangComment "class="erlangComment">%% </span><span title="erlangCommentAnnotation "class="erlangCommentAnnotation">@doc</span><span title="erlangComment "class="erlangComment"> Insert a new Key into the Tree.
</span><span title="LineNr "class="LineNr">35</span>  <span title="erlangComment "class="erlangComment">%%      If the Key already exists, it will be replaced.
</span><span title="LineNr "class="LineNr">36</span>  <span title="erlangComment "class="erlangComment">%%
</span><span title="LineNr "class="LineNr">37</span>  <span title="erlangComment "class="erlangComment">%% </span><span title="erlangCommentAnnotation "class="erlangCommentAnnotation">@spec</span><span title="erlangComment "class="erlangComment"> insert(integer(), term(), tree()) -&gt; tree().
</span><span title="LineNr "class="LineNr">38</span>  <span title="erlangLocalFuncCall "class="erlangLocalFuncCall">insert</span><span title="Normal "class="Normal">(</span><span title="erlangVariable "class="erlangVariable">K</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">V</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">_Tree</span><span title="Normal "class="Normal"> </span><span title="erlangOperator "class="erlangOperator">&#61;</span><span title="Normal "class="Normal"> </span><span title="erlangMacro "class="erlangMacro">?EMPTY_NODE</span><span title="Normal "class="Normal">) </span><span title="erlangRightArrow "class="erlangRightArrow">-&gt;
</span><span title="LineNr "class="LineNr">39</span>  <span title="Normal "class="Normal">  </span><span title="erlangBracket "class="erlangBracket">{</span><span title="erlangAtom "class="erlangAtom">node</span><span title="Normal "class="Normal">, </span><span title="erlangBracket "class="erlangBracket">{</span><span title="erlangVariable "class="erlangVariable">K</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">V</span><span title="Normal "class="Normal">, </span><span title="erlangLocalFuncCall "class="erlangLocalFuncCall">init</span><span title="Normal "class="Normal">(), </span><span title="erlangLocalFuncCall "class="erlangLocalFuncCall">init</span><span title="Normal "class="Normal">()</span><span title="erlangBracket "class="erlangBracket">}}</span><span title="Normal "class="Normal">;
</span><span title="LineNr "class="LineNr">40</span>  <span title="erlangLocalFuncCall "class="erlangLocalFuncCall">insert</span><span title="Normal "class="Normal">(</span><span title="erlangVariable "class="erlangVariable">K</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">V</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">_Tree</span><span title="Normal "class="Normal"> </span><span title="erlangOperator "class="erlangOperator">&#61;</span><span title="Normal "class="Normal"> </span><span title="erlangBracket "class="erlangBracket">{</span><span title="erlangAtom "class="erlangAtom">node</span><span title="Normal "class="Normal">, </span><span title="erlangBracket "class="erlangBracket">{</span><span title="erlangVariable "class="erlangVariable">NodeK</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">NodeV</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">Left</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">Right</span><span title="erlangBracket "class="erlangBracket">}}</span><span title="Normal "class="Normal">) </span><span title="erlangRightArrow "class="erlangRightArrow">-&gt;
</span><span title="LineNr "class="LineNr">41</span>  <span title="Normal "class="Normal">  </span><span title="erlangKeyword "class="erlangKeyword">if</span><span title="Normal "class="Normal"> </span><span title="erlangVariable "class="erlangVariable">K</span><span title="Normal "class="Normal"> </span><span title="erlangOperator "class="erlangOperator">&#61;&#61;</span><span title="Normal "class="Normal"> </span><span title="erlangVariable "class="erlangVariable">NodeK</span><span title="Normal "class="Normal"> </span><span title="erlangRightArrow "class="erlangRightArrow">-&gt;</span><span title="Normal "class="Normal"> </span><span title="erlangComment "class="erlangComment">% replace
</span><span title="LineNr "class="LineNr">42</span>  <span title="Normal "class="Normal">      </span><span title="erlangBracket "class="erlangBracket">{</span><span title="erlangAtom "class="erlangAtom">node</span><span title="Normal "class="Normal">, </span><span title="erlangBracket "class="erlangBracket">{</span><span title="erlangVariable "class="erlangVariable">K</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">V</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">Left</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">Right</span><span title="erlangBracket "class="erlangBracket">}}
</span><span title="LineNr "class="LineNr">43</span>  <span title="Normal "class="Normal">   ; </span><span title="erlangVariable "class="erlangVariable">K</span><span title="Normal "class="Normal">  </span><span title="erlangOperator "class="erlangOperator">&lt;</span><span title="Normal "class="Normal"> </span><span title="erlangVariable "class="erlangVariable">NodeK</span><span title="Normal "class="Normal"> </span><span title="erlangRightArrow "class="erlangRightArrow">-&gt;
</span><span title="LineNr "class="LineNr">44</span>  <span title="Normal "class="Normal">      </span><span title="erlangBracket "class="erlangBracket">{</span><span title="erlangAtom "class="erlangAtom">node</span><span title="Normal "class="Normal">, </span><span title="erlangBracket "class="erlangBracket">{</span><span title="erlangVariable "class="erlangVariable">NodeK</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">NodeV</span><span title="Normal "class="Normal">, </span><span title="erlangLocalFuncCall "class="erlangLocalFuncCall">insert</span><span title="Normal "class="Normal">(</span><span title="erlangVariable "class="erlangVariable">K</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">V</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">Left</span><span title="Normal "class="Normal">), </span><span title="erlangVariable "class="erlangVariable">Right</span><span title="erlangBracket "class="erlangBracket">}}
</span><span title="LineNr "class="LineNr">45</span>  <span title="Normal "class="Normal">   ; </span><span title="erlangVariable "class="erlangVariable">K</span><span title="Normal "class="Normal">  </span><span title="erlangOperator "class="erlangOperator">&gt;</span><span title="Normal "class="Normal"> </span><span title="erlangVariable "class="erlangVariable">NodeK</span><span title="Normal "class="Normal"> </span><span title="erlangRightArrow "class="erlangRightArrow">-&gt;
</span><span title="LineNr "class="LineNr">46</span>  <span title="Normal "class="Normal">      </span><span title="erlangBracket "class="erlangBracket">{</span><span title="erlangAtom "class="erlangAtom">node</span><span title="Normal "class="Normal">, </span><span title="erlangBracket "class="erlangBracket">{</span><span title="erlangVariable "class="erlangVariable">NodeK</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">NodeV</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">Left</span><span title="Normal "class="Normal">, </span><span title="erlangLocalFuncCall "class="erlangLocalFuncCall">insert</span><span title="Normal "class="Normal">(</span><span title="erlangVariable "class="erlangVariable">K</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">V</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">Right</span><span title="Normal "class="Normal">)</span><span title="erlangBracket "class="erlangBracket">}}
</span><span title="LineNr "class="LineNr">47</span>  <span title="Normal "class="Normal">  </span><span title="erlangKeyword "class="erlangKeyword">end</span><span title="Normal "class="Normal">.
</span><span title="LineNr "class="LineNr">48</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">49</span>  <span title="erlangComment "class="erlangComment">%% </span><span title="erlangCommentAnnotation "class="erlangCommentAnnotation">@private
</span><span title="LineNr "class="LineNr">50</span>  <span title="erlangLocalFuncCall "class="erlangLocalFuncCall">insert</span><span title="Normal "class="Normal">(</span><span title="erlangBracket "class="erlangBracket">[]</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">Tree</span><span title="Normal "class="Normal">) </span><span title="erlangRightArrow "class="erlangRightArrow">-&gt;</span><span title="Normal "class="Normal"> </span><span title="erlangVariable "class="erlangVariable">Tree</span><span title="Normal "class="Normal">;
</span><span title="LineNr "class="LineNr">51</span>  <span title="erlangLocalFuncCall "class="erlangLocalFuncCall">insert</span><span title="Normal "class="Normal">(</span><span title="erlangBracket "class="erlangBracket">[{</span><span title="erlangVariable "class="erlangVariable">K</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">V</span><span title="erlangBracket "class="erlangBracket">}</span><span title="erlangPipe "class="erlangPipe">|</span><span title="erlangVariable "class="erlangVariable">Rest</span><span title="erlangBracket "class="erlangBracket">]</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">Tree</span><span title="Normal "class="Normal">) </span><span title="erlangRightArrow "class="erlangRightArrow">-&gt;
</span><span title="LineNr "class="LineNr last-LineNr">52</span>  <span title="Normal "class="Normal">  </span><span title="erlangLocalFuncCall "class="erlangLocalFuncCall">insert</span><span title="Normal "class="Normal">(</span><span title="erlangVariable "class="erlangVariable">Rest</span><span title="Normal "class="Normal">, </span><span title="erlangLocalFuncCall "class="erlangLocalFuncCall">insert</span><span title="Normal "class="Normal">(</span><span title="erlangVariable "class="erlangVariable">K</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">V</span><span title="Normal "class="Normal">, </span><span title="erlangVariable "class="erlangVariable">Tree</span><span title="Normal "class="Normal">)).</span>