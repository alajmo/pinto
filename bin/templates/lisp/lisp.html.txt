<span title="LineNr "class="LineNr first-LineNr">1</span>  <span title="lispComment "class="lispComment">;;;
</span><span title="LineNr "class="LineNr">2</span>  <span title="lispComment "class="lispComment">;;; Now the main command, one of
</span><span title="LineNr "class="LineNr">3</span>  <span title="lispComment "class="lispComment">;;;
</span><span title="LineNr "class="LineNr">4</span>  <span title="lispComment "class="lispComment">;;;  - LOAD FROM some files
</span><span title="LineNr "class="LineNr">5</span>  <span title="lispComment "class="lispComment">;;;  - LOAD DATABASE FROM a MySQL remote database
</span><span title="LineNr "class="LineNr">6</span>  <span title="lispComment "class="lispComment">;;;  - LOAD MESSAGES FROM a syslog daemon receiver we&#39;re going to start here
</span><span title="LineNr "class="LineNr">7</span>  <span title="lispComment "class="lispComment">;;;
</span><span title="LineNr "class="LineNr">8</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">9</span>  <span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">in-package</span><span title="lispList "class="lispList"> </span><span title="lispEscapeSpecial "class="lispEscapeSpecial">#:pgloader.parser</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">10</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">11</span>  <span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">defrule</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">end-of-command</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">and</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">ignore-whitespace</span><span title="lispList "class="lispList"> </span><span title="lispEscapeSpecial "class="lispEscapeSpecial">#\;</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">ignore-whitespace</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">12</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">:constant</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">:eoc</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">13</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">14</span>  <span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">defrule</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">command</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">and</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">or</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">load-archive
</span><span title="LineNr "class="LineNr">15</span>  <span title="lispLeadWhite "class="lispLeadWhite">			  </span><span title="lispSymbol "class="lispSymbol">load-csv-file
</span><span title="LineNr "class="LineNr">16</span>  <span title="lispLeadWhite "class="lispLeadWhite">			  </span><span title="lispSymbol "class="lispSymbol">load-fixed-cols-file
</span><span title="LineNr "class="LineNr">17</span>  <span title="lispLeadWhite "class="lispLeadWhite">                          </span><span title="lispSymbol "class="lispSymbol">load-copy-file
</span><span title="LineNr "class="LineNr">18</span>  <span title="lispLeadWhite "class="lispLeadWhite">			  </span><span title="lispSymbol "class="lispSymbol">load-dbf-file
</span><span title="LineNr "class="LineNr">19</span>  <span title="lispLeadWhite "class="lispLeadWhite">                          </span><span title="lispSymbol "class="lispSymbol">load-ixf-file
</span><span title="LineNr "class="LineNr">20</span>  <span title="lispLeadWhite "class="lispLeadWhite">                          </span><span title="lispSymbol "class="lispSymbol">load-pgsql-database
</span><span title="LineNr "class="LineNr">21</span>  <span title="lispLeadWhite "class="lispLeadWhite">			  </span><span title="lispSymbol "class="lispSymbol">load-mysql-database
</span><span title="LineNr "class="LineNr">22</span>  <span title="lispLeadWhite "class="lispLeadWhite">                          </span><span title="lispSymbol "class="lispSymbol">load-mssql-database
</span><span title="LineNr "class="LineNr">23</span>  <span title="lispLeadWhite "class="lispLeadWhite">			  </span><span title="lispSymbol "class="lispSymbol">load-sqlite-database
</span><span title="LineNr "class="LineNr">24</span>  <span title="lispLeadWhite "class="lispLeadWhite">			  </span><span title="lispComment "class="lispComment">;; load-syslog-messages
</span><span title="LineNr "class="LineNr">25</span>  <span title="lispLeadWhite "class="lispLeadWhite">                          </span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">26</span>  <span title="lispLeadWhite "class="lispLeadWhite">		      </span><span title="lispSymbol "class="lispSymbol">end-of-command</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">27</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">:lambda</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">cmd</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">28</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">bind</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(((</span><span title="lispSymbol "class="lispSymbol">command</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">_</span><span title="lispParen "class="lispParen">)</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">cmd</span><span title="lispParen "class="lispParen">))</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">command</span><span title="lispParen "class="lispParen">)))
</span><span title="LineNr "class="LineNr">29</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">30</span>  <span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">defrule</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">commands</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">+</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">command</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">31</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">32</span>  <span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">defun</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">parse-commands</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">commands-template</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">&amp;key</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">start</span><span title="lispList "class="lispList"> </span><span title="lispNumber "class="lispNumber">0</span><span title="lispParen "class="lispParen">)</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">end</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">junk-allowed</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">33</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispString "class="lispString">&quot;Parse a command and return a LAMBDA form that takes no parameter.&quot;
</span><span title="LineNr "class="LineNr">34</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">let</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">((</span><span title="lispSymbol "class="lispSymbol">commands</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">apply-template</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">subseq</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">commands-template</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">start</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">end</span><span title="lispParen "class="lispParen">))))
</span><span title="LineNr "class="LineNr">35</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">unless</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">junk-allowed
</span><span title="LineNr "class="LineNr">36</span>  <span title="lispLeadWhite "class="lispLeadWhite">      </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">log-message</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">:info</span><span title="lispList "class="lispList"> </span><span title="lispString "class="lispString">&quot;Parsed command:~%~a~%&quot;</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">commands</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">37</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">parse</span><span title="lispList "class="lispList"> </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">commands
</span><span title="LineNr "class="LineNr">38</span>  <span title="lispLeadWhite "class="lispLeadWhite">           </span><span title="lispSymbol "class="lispSymbol">commands
</span><span title="LineNr "class="LineNr">39</span>  <span title="lispLeadWhite "class="lispLeadWhite">           </span><span title="lispKey "class="lispKey">:start</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">start
</span><span title="LineNr "class="LineNr">40</span>  <span title="lispLeadWhite "class="lispLeadWhite">           </span><span title="lispKey "class="lispKey">:end</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">end
</span><span title="LineNr "class="LineNr">41</span>  <span title="lispLeadWhite "class="lispLeadWhite">           </span><span title="lispKey "class="lispKey">:junk-allowed</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">junk-allowed</span><span title="lispParen "class="lispParen">)))
</span><span title="LineNr "class="LineNr">42</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">43</span>  <span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">defun</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">inject-inline-data-position</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">command</span><span title="lispList "class="lispList"> </span><span title="lispFunc "class="lispFunc">position</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">44</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispString "class="lispString">&quot;We have &#39;(:inline nil) somewhere in command, have &#39;(:inline position) instead.&quot;
</span><span title="LineNr "class="LineNr">45</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">loop
</span><span title="LineNr "class="LineNr">46</span>  <span title="lispLeadWhite "class="lispLeadWhite">     </span><span title="lispKey "class="lispKey">:for</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">:in</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">command
</span><span title="LineNr "class="LineNr">47</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">48</span>  <span title="lispLeadWhite "class="lispLeadWhite">     </span><span title="lispKey "class="lispKey">:when</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">and</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">typep</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispList "class="lispList"> </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">md-connection</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">49</span>  <span title="lispLeadWhite "class="lispLeadWhite">                </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">slot-boundp</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispList "class="lispList"> </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">pgloader.sources::spec</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">50</span>  <span title="lispLeadWhite "class="lispLeadWhite">                </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">eq</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">:inline</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">first</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">md-spec</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispParen "class="lispParen">))))
</span><span title="LineNr "class="LineNr">51</span>  <span title="lispLeadWhite "class="lispLeadWhite">     </span><span title="lispKey "class="lispKey">:do</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">setf</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">second</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">md-spec</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispParen "class="lispParen">))</span><span title="lispList "class="lispList"> </span><span title="lispFunc "class="lispFunc">position</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">52</span>  <span title="lispLeadWhite "class="lispLeadWhite">     </span><span title="lispKey "class="lispKey">:and</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">:collect</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp
</span><span title="LineNr "class="LineNr">53</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">54</span>  <span title="lispLeadWhite "class="lispLeadWhite">     </span><span title="lispKey "class="lispKey">:else</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">:collect</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">if</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">and</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">consp</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispParen "class="lispParen">)</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">listp</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">cdr</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispParen "class="lispParen">)))
</span><span title="LineNr "class="LineNr">55</span>  <span title="lispLeadWhite "class="lispLeadWhite">                        </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">inject-inline-data-position</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispList "class="lispList"> </span><span title="lispFunc "class="lispFunc">position</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">56</span>  <span title="lispLeadWhite "class="lispLeadWhite">                        </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispParen "class="lispParen">)))
</span><span title="LineNr "class="LineNr">57</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">58</span>  <span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">defun</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">process-relative-pathnames</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">filename</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">command</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">59</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispString "class="lispString">&quot;Walk the COMMAND to replace relative pathname with absolute ones, merging
</span><span title="LineNr "class="LineNr">60</span>  <span title="lispString "class="lispString">   them within the directory where we found the command FILENAME.&quot;
</span><span title="LineNr "class="LineNr">61</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">loop
</span><span title="LineNr "class="LineNr">62</span>  <span title="lispLeadWhite "class="lispLeadWhite">     </span><span title="lispKey "class="lispKey">:for</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">:in</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">command
</span><span title="LineNr "class="LineNr">63</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">64</span>  <span title="lispLeadWhite "class="lispLeadWhite">     </span><span title="lispKey "class="lispKey">:collect</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">cond</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">((</span><span title="lispFunc "class="lispFunc">pathnamep</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">65</span>  <span title="lispLeadWhite "class="lispLeadWhite">                     </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">if</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">uiop:relative-pathname-p</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">66</span>  <span title="lispLeadWhite "class="lispLeadWhite">                         </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">uiop:merge-pathnames*</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">filename</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">67</span>  <span title="lispLeadWhite "class="lispLeadWhite">                         </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">68</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">69</span>  <span title="lispLeadWhite "class="lispLeadWhite">                    </span><span title="lispParen "class="lispParen">((</span><span title="lispFunc "class="lispFunc">and</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">typep</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispList "class="lispList"> </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">fd-connection</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">70</span>  <span title="lispLeadWhite "class="lispLeadWhite">                          </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">slot-boundp</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispList "class="lispList"> </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">pgloader.connection::path</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">71</span>  <span title="lispLeadWhite "class="lispLeadWhite">                     </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">when</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">uiop:relative-pathname-p</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">fd-path</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">72</span>  <span title="lispLeadWhite "class="lispLeadWhite">                       </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">setf</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">fd-path</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">73</span>  <span title="lispLeadWhite "class="lispLeadWhite">                             </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">uiop:merge-pathnames*</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">fd-path</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">74</span>  <span title="lispLeadWhite "class="lispLeadWhite">                                                    </span><span title="lispSymbol "class="lispSymbol">filename</span><span title="lispParen "class="lispParen">)))
</span><span title="LineNr "class="LineNr">75</span>  <span title="lispLeadWhite "class="lispLeadWhite">                     </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">76</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">77</span>  <span title="lispLeadWhite "class="lispLeadWhite">                    </span><span title="lispParen "class="lispParen">((</span><span title="lispFunc "class="lispFunc">and</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">typep</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispList "class="lispList"> </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">md-connection</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">78</span>  <span title="lispLeadWhite "class="lispLeadWhite">                          </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">slot-boundp</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispList "class="lispList"> </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">pgloader.sources::spec</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">79</span>  <span title="lispLeadWhite "class="lispLeadWhite">                          </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">eq</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">:filename</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">car</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">md-spec</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispParen "class="lispParen">))))
</span><span title="LineNr "class="LineNr">80</span>  <span title="lispLeadWhite "class="lispLeadWhite">                     </span><span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">let</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">((</span><span title="lispSymbol "class="lispSymbol">path</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">second</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">md-spec</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispParen "class="lispParen">))))
</span><span title="LineNr "class="LineNr">81</span>  <span title="lispLeadWhite "class="lispLeadWhite">                       </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">if</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">uiop:relative-pathname-p</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">path</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">82</span>  <span title="lispLeadWhite "class="lispLeadWhite">                           </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">progn</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">setf</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">md-spec</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">83</span>  <span title="lispLeadWhite "class="lispLeadWhite">                                        </span><span title="PreProc "class="PreProc">`(</span><span title="lispSymbol "class="lispSymbol">:filename
</span><span title="LineNr "class="LineNr">84</span>  <span title="lispLeadWhite "class="lispLeadWhite">                                          </span><span title="lispBQList "class="lispBQList">,</span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">uiop:merge-pathnames*</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">path
</span><span title="LineNr "class="LineNr">85</span>  <span title="lispLeadWhite "class="lispLeadWhite">                                                                  </span><span title="lispSymbol "class="lispSymbol">filename</span><span title="lispParen "class="lispParen">)</span><span title="PreProc "class="PreProc">)</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">86</span>  <span title="lispLeadWhite "class="lispLeadWhite">                                  </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">87</span>  <span title="lispLeadWhite "class="lispLeadWhite">                           </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispParen "class="lispParen">)))
</span><span title="LineNr "class="LineNr">88</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">89</span>  <span title="lispLeadWhite "class="lispLeadWhite">                    </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">t
</span><span title="LineNr "class="LineNr">90</span>  <span title="lispLeadWhite "class="lispLeadWhite">                     </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">if</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">and</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">consp</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispParen "class="lispParen">)</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">listp</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">cdr</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispParen "class="lispParen">)))
</span><span title="LineNr "class="LineNr">91</span>  <span title="lispLeadWhite "class="lispLeadWhite">                         </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">process-relative-pathnames</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">filename</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">92</span>  <span title="lispLeadWhite "class="lispLeadWhite">                         </span><span title="lispSymbol "class="lispSymbol">s-exp</span><span title="lispParen "class="lispParen">)))))
</span><span title="LineNr "class="LineNr">93</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">94</span>  <span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">defun</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">parse-commands-from-file</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">maybe-relative-filename
</span><span title="LineNr "class="LineNr">95</span>  <span title="lispLeadWhite "class="lispLeadWhite">                                 </span><span title="lispKey "class="lispKey">&amp;aux</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">filename
</span><span title="LineNr "class="LineNr">96</span>  <span title="lispLeadWhite "class="lispLeadWhite">                                       </span><span title="lispComment "class="lispComment">;; we want a truename here
</span><span title="LineNr "class="LineNr">97</span>  <span title="lispLeadWhite "class="lispLeadWhite">                                       </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">probe-file</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">maybe-relative-filename</span><span title="lispParen "class="lispParen">)))
</span><span title="LineNr "class="LineNr">98</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispString "class="lispString">&quot;The command could be using from :inline, in which case we want to parse
</span><span title="LineNr "class="LineNr">99</span>  <span title="lispString "class="lispString">   as much as possible then use the command against an already opened stream
</span><span title="LineNr "class="LineNr">100</span>  <span title="lispString "class="lispString">   where we moved at the beginning of the data.&quot;
</span><span title="LineNr "class="LineNr">101</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">if</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">filename
</span><span title="LineNr "class="LineNr">102</span>  <span title="lispLeadWhite "class="lispLeadWhite">      </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">log-message</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">:log</span><span title="lispList "class="lispList"> </span><span title="lispString "class="lispString">&quot;Parsing commands from file ~s~%&quot;</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">filename</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">103</span>  <span title="lispLeadWhite "class="lispLeadWhite">      </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">error</span><span title="lispList "class="lispList"> </span><span title="lispString "class="lispString">&quot;Can not find file: ~s&quot;</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">maybe-relative-filename</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">104</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">105</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">process-relative-pathnames
</span><span title="LineNr "class="LineNr">106</span>  <span title="lispLeadWhite "class="lispLeadWhite">   </span><span title="lispSymbol "class="lispSymbol">filename
</span><span title="LineNr "class="LineNr">107</span>  <span title="lispLeadWhite "class="lispLeadWhite">   </span><span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">let</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">((</span><span title="lispEscapeSpecial "class="lispEscapeSpecial">*cwd*</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">make-pathname</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">:defaults</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">filename</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">:name</span><span title="lispList "class="lispList"> </span><span title="lispFunc "class="lispFunc">nil</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">:type</span><span title="lispList "class="lispList"> </span><span title="lispFunc "class="lispFunc">nil</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">108</span>  <span title="lispLeadWhite "class="lispLeadWhite">         </span><span title="lispParen "class="lispParen">(</span><span title="lispEscapeSpecial "class="lispEscapeSpecial">*data-expected-inline*</span><span title="lispList "class="lispList"> </span><span title="lispFunc "class="lispFunc">nil</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">109</span>  <span title="lispLeadWhite "class="lispLeadWhite">	 </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">content</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">read-file-into-string</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">filename</span><span title="lispParen "class="lispParen">)))
</span><span title="LineNr "class="LineNr">110</span>  <span title="lispLeadWhite "class="lispLeadWhite">     </span><span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">multiple-value-bind</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">commands</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">end-commands-position</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">111</span>  <span title="lispLeadWhite "class="lispLeadWhite">	 </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">parse-commands</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">content</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">:junk-allowed</span><span title="lispList "class="lispList"> </span><span title="lispFunc "class="lispFunc">t</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">112</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">113</span>  <span title="lispLeadWhite "class="lispLeadWhite">       </span><span title="lispComment "class="lispComment">;; INLINE is only allowed where we have a single command in the file
</span><span title="LineNr "class="LineNr">114</span>  <span title="lispLeadWhite "class="lispLeadWhite">       </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">if</span><span title="lispList "class="lispList"> </span><span title="lispEscapeSpecial "class="lispEscapeSpecial">*data-expected-inline*
</span><span title="LineNr "class="LineNr">115</span>  <span title="lispLeadWhite "class="lispLeadWhite">	   </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">progn
</span><span title="LineNr "class="LineNr">116</span>  <span title="lispLeadWhite "class="lispLeadWhite">	     </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">when</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">&#61;</span><span title="lispList "class="lispList"> </span><span title="lispNumber "class="lispNumber">0</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">end-commands-position</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">117</span>  <span title="lispLeadWhite "class="lispLeadWhite">	       </span><span title="lispComment "class="lispComment">;; didn&#39;t find any command, leave error reporting to esrap
</span><span title="LineNr "class="LineNr">118</span>  <span title="lispLeadWhite "class="lispLeadWhite">	       </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">parse-commands</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">content</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">119</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">120</span>  <span title="lispLeadWhite "class="lispLeadWhite">	     </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">when</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">and</span><span title="lispList "class="lispList"> </span><span title="lispEscapeSpecial "class="lispEscapeSpecial">*data-expected-inline*
</span><span title="LineNr "class="LineNr">121</span>  <span title="lispLeadWhite "class="lispLeadWhite">			</span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">null</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">end-commands-position</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">122</span>  <span title="lispLeadWhite "class="lispLeadWhite">	       </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">error</span><span title="lispList "class="lispList"> </span><span title="lispString "class="lispString">&quot;Inline data not found in &#39;~a&#39;.&quot;</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">filename</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">123</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">124</span>  <span title="lispLeadWhite "class="lispLeadWhite">	     </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">when</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">and</span><span title="lispList "class="lispList"> </span><span title="lispEscapeSpecial "class="lispEscapeSpecial">*data-expected-inline*</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">not</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">&#61;</span><span title="lispList "class="lispList"> </span><span title="lispNumber "class="lispNumber">1</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">length</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">commands</span><span title="lispParen "class="lispParen">))))
</span><span title="LineNr "class="LineNr">125</span>  <span title="lispLeadWhite "class="lispLeadWhite">	       </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">error</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">concatenate</span><span title="lispList "class="lispList"> </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">string
</span><span title="LineNr "class="LineNr">126</span>  <span title="lispLeadWhite "class="lispLeadWhite">				   </span><span title="lispString "class="lispString">&quot;Too many commands found in &#39;~a&#39;.~%&quot;
</span><span title="LineNr "class="LineNr">127</span>  <span title="lispLeadWhite "class="lispLeadWhite">				   </span><span title="lispString "class="lispString">&quot;To use inline data, use a single command.&quot;</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">128</span>  <span title="lispLeadWhite "class="lispLeadWhite">		      </span><span title="lispSymbol "class="lispSymbol">filename</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">129</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">130</span>  <span title="lispLeadWhite "class="lispLeadWhite">	     </span><span title="lispComment "class="lispComment">;; now we should have a single command and inline data after that
</span><span title="LineNr "class="LineNr">131</span>  <span title="lispLeadWhite "class="lispLeadWhite">	     </span><span title="lispComment "class="lispComment">;; replace the (:inline nil) found in the first (and only) command
</span><span title="LineNr "class="LineNr">132</span>  <span title="lispLeadWhite "class="lispLeadWhite">	     </span><span title="lispComment "class="lispComment">;; with a (:inline position) instead
</span><span title="LineNr "class="LineNr">133</span>  <span title="lispLeadWhite "class="lispLeadWhite">             </span><span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">let</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">((</span><span title="lispSymbol "class="lispSymbol">command
</span><span title="LineNr "class="LineNr">134</span>  <span title="lispLeadWhite "class="lispLeadWhite">                    </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">parse-commands</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">content</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">:end</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">end-commands-position</span><span title="lispParen "class="lispParen">)))
</span><span title="LineNr "class="LineNr">135</span>  <span title="lispLeadWhite "class="lispLeadWhite">               </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">list
</span><span title="LineNr "class="LineNr">136</span>  <span title="lispLeadWhite "class="lispLeadWhite">	      </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">inject-inline-data-position</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">first</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">command</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">137</span>  <span title="lispLeadWhite "class="lispLeadWhite">                                           </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">cons</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">filename
</span><span title="LineNr "class="LineNr">138</span>  <span title="lispLeadWhite "class="lispLeadWhite">                                                 </span><span title="lispSymbol "class="lispSymbol">end-commands-position</span><span title="lispParen "class="lispParen">)))))
</span><span title="LineNr "class="LineNr">139</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">140</span>  <span title="lispLeadWhite "class="lispLeadWhite">	   </span><span title="lispComment "class="lispComment">;; There was no INLINE magic found in the file, reparse it so that
</span><span title="LineNr "class="LineNr">141</span>  <span title="lispLeadWhite "class="lispLeadWhite">	   </span><span title="lispComment "class="lispComment">;; normal error processing happen
</span><span title="LineNr "class="LineNr">142</span>  <span title="lispLeadWhite "class="lispLeadWhite">	   </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">parse-commands</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">content</span><span title="lispParen "class="lispParen">))))))
</span><span title="LineNr "class="LineNr">143</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">144</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">145</span>  <span title="lispComment "class="lispComment">;;;
</span><span title="LineNr "class="LineNr">146</span>  <span title="lispComment "class="lispComment">;;; Parse an URI without knowing before hand what kind of uri it is.
</span><span title="LineNr "class="LineNr">147</span>  <span title="lispComment "class="lispComment">;;;
</span><span title="LineNr "class="LineNr">148</span>  <span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">defvar</span><span title="lispList "class="lispList"> </span><span title="lispEscapeSpecial "class="lispEscapeSpecial">*data-source-filename-extensions*
</span><span title="LineNr "class="LineNr">149</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="Special "class="Special">((</span><span title="lispAtomList "class="lispAtomList">:csv     . </span><span title="Special "class="Special">(</span><span title="lispString "class="lispString">&quot;csv&quot;</span><span title="lispAtomList "class="lispAtomList"> </span><span title="lispString "class="lispString">&quot;tsv&quot;</span><span title="lispAtomList "class="lispAtomList"> </span><span title="lispString "class="lispString">&quot;txt&quot;</span><span title="lispAtomList "class="lispAtomList"> </span><span title="lispString "class="lispString">&quot;text&quot;</span><span title="Special "class="Special">))
</span><span title="LineNr "class="LineNr">150</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="Special "class="Special">(</span><span title="lispAtomList "class="lispAtomList">:copy    . </span><span title="Special "class="Special">(</span><span title="lispString "class="lispString">&quot;copy&quot;</span><span title="lispAtomList "class="lispAtomList"> </span><span title="lispString "class="lispString">&quot;dat&quot;</span><span title="Special "class="Special">))</span><span title="lispAtomList "class="lispAtomList">         </span><span title="lispComment "class="lispComment">; reject data files are .dat
</span><span title="LineNr "class="LineNr">151</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="Special "class="Special">(</span><span title="lispAtomList "class="lispAtomList">:sqlite  . </span><span title="Special "class="Special">(</span><span title="lispString "class="lispString">&quot;sqlite&quot;</span><span title="lispAtomList "class="lispAtomList"> </span><span title="lispString "class="lispString">&quot;db&quot;</span><span title="lispAtomList "class="lispAtomList"> </span><span title="lispString "class="lispString">&quot;sqlite3&quot;</span><span title="Special "class="Special">))
</span><span title="LineNr "class="LineNr">152</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="Special "class="Special">(</span><span title="lispAtomList "class="lispAtomList">:dbf     . </span><span title="Special "class="Special">(</span><span title="lispString "class="lispString">&quot;db3&quot;</span><span title="lispAtomList "class="lispAtomList"> </span><span title="lispString "class="lispString">&quot;dbf&quot;</span><span title="Special "class="Special">))
</span><span title="LineNr "class="LineNr">153</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="Special "class="Special">(</span><span title="lispAtomList "class="lispAtomList">:ixf     . </span><span title="Special "class="Special">(</span><span title="lispString "class="lispString">&quot;ixf&quot;</span><span title="Special "class="Special">)))</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">154</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">155</span>  <span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">defun</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">parse-filename-for-source-type</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">filename</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">156</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispString "class="lispString">&quot;Given just an existing filename, decide what data source might be found
</span><span title="LineNr "class="LineNr">157</span>  <span title="lispString "class="lispString">   inside...&quot;
</span><span title="LineNr "class="LineNr">158</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">multiple-value-bind</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">abs</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">paths</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">filename</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">no-path-p</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">159</span>  <span title="lispLeadWhite "class="lispLeadWhite">      </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">uiop:split-unix-namestring-directory-components
</span><span title="LineNr "class="LineNr">160</span>  <span title="lispLeadWhite "class="lispLeadWhite">       </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">uiop:native-namestring</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">filename</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">161</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">declare</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">ignore</span><span title="lispList "class="lispList"> </span><span title="lispFunc "class="lispFunc">abs</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">paths</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">no-path-p</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">162</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">let</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">((</span><span title="lispSymbol "class="lispSymbol">dotted-parts</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">reverse</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">sq:split-sequence</span><span title="lispList "class="lispList"> </span><span title="lispEscapeSpecial "class="lispEscapeSpecial">#\.</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">filename</span><span title="lispParen "class="lispParen">))))
</span><span title="LineNr "class="LineNr">163</span>  <span title="lispLeadWhite "class="lispLeadWhite">      </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">when</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">&lt;&#61;</span><span title="lispList "class="lispList"> </span><span title="lispNumber "class="lispNumber">2</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">length</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">dotted-parts</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">164</span>  <span title="lispLeadWhite "class="lispLeadWhite">        </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">destructuring-bind</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">ext</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">name-or-ext</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">&amp;rest</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">parts</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">165</span>  <span title="lispLeadWhite "class="lispLeadWhite">            </span><span title="lispSymbol "class="lispSymbol">dotted-parts
</span><span title="LineNr "class="LineNr">166</span>  <span title="lispLeadWhite "class="lispLeadWhite">          </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">declare</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">ignore</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">parts</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">167</span>  <span title="lispLeadWhite "class="lispLeadWhite">          </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">if</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">string-equal</span><span title="lispList "class="lispList"> </span><span title="lispString "class="lispString">&quot;tar&quot;</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">name-or-ext</span><span title="lispParen "class="lispParen">)</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">:archive
</span><span title="LineNr "class="LineNr">168</span>  <span title="lispLeadWhite "class="lispLeadWhite">              </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">loop</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">:for</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">type</span><span title="lispConcat "class="lispConcat"> . </span><span title="lispSymbol "class="lispSymbol">extensions</span><span title="lispParen "class="lispParen">)</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">:in</span><span title="lispList "class="lispList"> </span><span title="lispEscapeSpecial "class="lispEscapeSpecial">*data-source-filename-extensions*
</span><span title="LineNr "class="LineNr">169</span>  <span title="lispLeadWhite "class="lispLeadWhite">                 </span><span title="lispKey "class="lispKey">:when</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">member</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">ext</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">extensions</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">:test</span><span title="lispList "class="lispList"> </span><span title="lispEscapeSpecial "class="lispEscapeSpecial">#&#39;string-equal</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">170</span>  <span title="lispLeadWhite "class="lispLeadWhite">                 </span><span title="lispSymbol "class="lispSymbol">:return</span><span title="lispList "class="lispList"> </span><span title="lispFunc "class="lispFunc">type</span><span title="lispParen "class="lispParen">)))))))
</span><span title="LineNr "class="LineNr">171</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">172</span>  <span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">defvar</span><span title="lispList "class="lispList"> </span><span title="lispEscapeSpecial "class="lispEscapeSpecial">*parse-rule-for-source-types*
</span><span title="LineNr "class="LineNr">173</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="Special "class="Special">(</span><span title="lispAtomList "class="lispAtomList">:csv     csv-file-source
</span><span title="LineNr "class="LineNr">174</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="lispAtomList "class="lispAtomList">:fixed   fixed-file-source
</span><span title="LineNr "class="LineNr">175</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="lispAtomList "class="lispAtomList">:copy    copy-file-source
</span><span title="LineNr "class="LineNr">176</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="lispAtomList "class="lispAtomList">:dbf     dbf-file-source
</span><span title="LineNr "class="LineNr">177</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="lispAtomList "class="lispAtomList">:ixf     ixf-file-source
</span><span title="LineNr "class="LineNr">178</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="lispAtomList "class="lispAtomList">:sqlite  sqlite-uri
</span><span title="LineNr "class="LineNr">179</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="lispAtomList "class="lispAtomList">:pgsql   pgsql-uri
</span><span title="LineNr "class="LineNr">180</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="lispAtomList "class="lispAtomList">:mysql   mysql-uri
</span><span title="LineNr "class="LineNr">181</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="lispAtomList "class="lispAtomList">:mssql   mssql-uri</span><span title="Special "class="Special">)
</span><span title="LineNr "class="LineNr">182</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispString "class="lispString">&quot;A plist to associate source type and its source parsing rule.&quot;</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">183</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">184</span>  <span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">defun</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">parse-source-string-for-type</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">type</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">source-string</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">185</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispString "class="lispString">&quot;use the parse rules as per xxx-source rules&quot;
</span><span title="LineNr "class="LineNr">186</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">parse</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">getf</span><span title="lispList "class="lispList"> </span><span title="lispEscapeSpecial "class="lispEscapeSpecial">*parse-rule-for-source-types*</span><span title="lispList "class="lispList"> </span><span title="lispFunc "class="lispFunc">type</span><span title="lispParen "class="lispParen">)</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">source-string</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">187</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">188</span>  <span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">defrule</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">source-uri</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">or</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">csv-uri
</span><span title="LineNr "class="LineNr">189</span>  <span title="lispLeadWhite "class="lispLeadWhite">                        </span><span title="lispSymbol "class="lispSymbol">fixed-uri
</span><span title="LineNr "class="LineNr">190</span>  <span title="lispLeadWhite "class="lispLeadWhite">                        </span><span title="lispSymbol "class="lispSymbol">copy-uri
</span><span title="LineNr "class="LineNr">191</span>  <span title="lispLeadWhite "class="lispLeadWhite">                        </span><span title="lispSymbol "class="lispSymbol">dbf-uri
</span><span title="LineNr "class="LineNr">192</span>  <span title="lispLeadWhite "class="lispLeadWhite">                        </span><span title="lispSymbol "class="lispSymbol">ixf-uri
</span><span title="LineNr "class="LineNr">193</span>  <span title="lispLeadWhite "class="lispLeadWhite">                        </span><span title="lispSymbol "class="lispSymbol">sqlite-db-uri
</span><span title="LineNr "class="LineNr">194</span>  <span title="lispLeadWhite "class="lispLeadWhite">                        </span><span title="lispSymbol "class="lispSymbol">pgsql-uri
</span><span title="LineNr "class="LineNr">195</span>  <span title="lispLeadWhite "class="lispLeadWhite">                        </span><span title="lispSymbol "class="lispSymbol">mysql-uri
</span><span title="LineNr "class="LineNr">196</span>  <span title="lispLeadWhite "class="lispLeadWhite">                        </span><span title="lispSymbol "class="lispSymbol">mssql-uri
</span><span title="LineNr "class="LineNr">197</span>  <span title="lispLeadWhite "class="lispLeadWhite">                        </span><span title="lispSymbol "class="lispSymbol">filename-or-http-uri</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">198</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">199</span>  <span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">defun</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">parse-source-string</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">source-string</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">200</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">let</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">((</span><span title="lispSymbol "class="lispSymbol">source</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">parse</span><span title="lispList "class="lispList"> </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">source-uri</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">source-string</span><span title="lispParen "class="lispParen">)))
</span><span title="LineNr "class="LineNr">201</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">cond</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">((</span><span title="lispFunc "class="lispFunc">typep</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">source</span><span title="lispList "class="lispList"> </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">connection</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">202</span>  <span title="lispLeadWhite "class="lispLeadWhite">           </span><span title="lispSymbol "class="lispSymbol">source</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">203</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">204</span>  <span title="lispLeadWhite "class="lispLeadWhite">          </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">t
</span><span title="LineNr "class="LineNr">205</span>  <span title="lispLeadWhite "class="lispLeadWhite">           </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">destructuring-bind</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">kind</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">url</span><span title="lispParen "class="lispParen">)</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">source
</span><span title="LineNr "class="LineNr">206</span>  <span title="lispLeadWhite "class="lispLeadWhite">             </span><span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">let</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">((</span><span title="lispFunc "class="lispFunc">type
</span><span title="LineNr "class="LineNr">207</span>  <span title="lispLeadWhite "class="lispLeadWhite">                    </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">case</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">kind
</span><span title="LineNr "class="LineNr">208</span>  <span title="lispLeadWhite "class="lispLeadWhite">                      </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">:filename</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">parse-filename-for-source-type</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">url</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">209</span>  <span title="lispLeadWhite "class="lispLeadWhite">                      </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">:http</span><span title="lispList "class="lispList">     </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">parse-filename-for-source-type
</span><span title="LineNr "class="LineNr">210</span>  <span title="lispLeadWhite "class="lispLeadWhite">                                  </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">puri:uri-path</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">puri:parse-uri</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">url</span><span title="lispParen "class="lispParen">)))))))
</span><span title="LineNr "class="LineNr">211</span>  <span title="lispLeadWhite "class="lispLeadWhite">               </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">when</span><span title="lispList "class="lispList"> </span><span title="lispFunc "class="lispFunc">type
</span><span title="LineNr "class="LineNr">212</span>  <span title="lispLeadWhite "class="lispLeadWhite">                 </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">parse-source-string-for-type</span><span title="lispList "class="lispList"> </span><span title="lispFunc "class="lispFunc">type</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">source-string</span><span title="lispParen "class="lispParen">))))))))
</span><span title="LineNr "class="LineNr">213</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">214</span>  <span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">defun</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">parse-target-string</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">target-string</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">215</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">parse</span><span title="lispList "class="lispList"> </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">pgsql-uri</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">target-string</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">216</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">217</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">218</span>  <span title="lispComment "class="lispComment">;;;
</span><span title="LineNr "class="LineNr">219</span>  <span title="lispComment "class="lispComment">;;; Command line accumulative options parser
</span><span title="LineNr "class="LineNr">220</span>  <span title="lispComment "class="lispComment">;;;
</span><span title="LineNr "class="LineNr">221</span>  <span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">defun</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">parse-cli-gucs</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">gucs</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">222</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispString "class="lispString">&quot;Parse PostgreSQL GUCs as per the SET clause when we get them from the CLI.&quot;
</span><span title="LineNr "class="LineNr">223</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">loop</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">:for</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">guc</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">:in</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">gucs
</span><span title="LineNr "class="LineNr">224</span>  <span title="lispLeadWhite "class="lispLeadWhite">     </span><span title="lispKey "class="lispKey">:collect</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">parse</span><span title="lispList "class="lispList"> </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">generic-option</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">guc</span><span title="lispParen "class="lispParen">)))
</span><span title="LineNr "class="LineNr">225</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">226</span>  <span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">defrule</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">dbf-type-name</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">or</span><span title="lispList "class="lispList"> </span><span title="lispString "class="lispString">&quot;dbf&quot;</span><span title="lispList "class="lispList"> </span><span title="lispString "class="lispString">&quot;db3&quot;</span><span title="lispParen "class="lispParen">)</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">:constant</span><span title="lispList "class="lispList"> </span><span title="lispString "class="lispString">&quot;dbf&quot;</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">227</span>  <span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">defrule</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">sqlite-type-name</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">or</span><span title="lispList "class="lispList"> </span><span title="lispString "class="lispString">&quot;sqlite3&quot;</span><span title="lispList "class="lispList"> </span><span title="lispString "class="lispString">&quot;sqlite&quot;</span><span title="lispParen "class="lispParen">)</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">:constant</span><span title="lispList "class="lispList"> </span><span title="lispString "class="lispString">&quot;sqlite&quot;</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">228</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">229</span>  <span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">defrule</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">cli-type</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">or</span><span title="lispList "class="lispList"> </span><span title="lispString "class="lispString">&quot;csv&quot;
</span><span title="LineNr "class="LineNr">230</span>  <span title="lispLeadWhite "class="lispLeadWhite">                      </span><span title="lispString "class="lispString">&quot;fixed&quot;
</span><span title="LineNr "class="LineNr">231</span>  <span title="lispLeadWhite "class="lispLeadWhite">                      </span><span title="lispString "class="lispString">&quot;copy&quot;
</span><span title="LineNr "class="LineNr">232</span>  <span title="lispLeadWhite "class="lispLeadWhite">                      </span><span title="lispSymbol "class="lispSymbol">dbf-type-name
</span><span title="LineNr "class="LineNr">233</span>  <span title="lispLeadWhite "class="lispLeadWhite">                      </span><span title="lispSymbol "class="lispSymbol">sqlite-type-name
</span><span title="LineNr "class="LineNr">234</span>  <span title="lispLeadWhite "class="lispLeadWhite">                      </span><span title="lispString "class="lispString">&quot;ixf&quot;
</span><span title="LineNr "class="LineNr">235</span>  <span title="lispLeadWhite "class="lispLeadWhite">                      </span><span title="lispString "class="lispString">&quot;mysql&quot;
</span><span title="LineNr "class="LineNr">236</span>  <span title="lispLeadWhite "class="lispLeadWhite">                      </span><span title="lispString "class="lispString">&quot;mssql&quot;</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">237</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">:text</span><span title="lispList "class="lispList"> </span><span title="lispFunc "class="lispFunc">t</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">238</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">239</span>  <span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">defun</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">parse-cli-type</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">type</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">240</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispString "class="lispString">&quot;Parse the --type option&quot;
</span><span title="LineNr "class="LineNr">241</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">when</span><span title="lispList "class="lispList"> </span><span title="lispFunc "class="lispFunc">type
</span><span title="LineNr "class="LineNr">242</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">intern</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">string-upcase</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">parse</span><span title="lispList "class="lispList"> </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">cli-type</span><span title="lispList "class="lispList"> </span><span title="lispFunc "class="lispFunc">type</span><span title="lispParen "class="lispParen">))</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">find-package</span><span title="lispList "class="lispList"> </span><span title="lispString "class="lispString">&quot;KEYWORD&quot;</span><span title="lispParen "class="lispParen">))))
</span><span title="LineNr "class="LineNr">243</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">244</span>  <span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">defun</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">parse-cli-encoding</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">encoding</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">245</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispString "class="lispString">&quot;Parse the --encoding option&quot;
</span><span title="LineNr "class="LineNr">246</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">if</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">encoding
</span><span title="LineNr "class="LineNr">247</span>  <span title="lispLeadWhite "class="lispLeadWhite">      </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">make-external-format</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">find-encoding-by-name-or-alias</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">encoding</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">248</span>  <span title="lispLeadWhite "class="lispLeadWhite">      </span><span title="lispSymbol "class="lispSymbol">:utf-8</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">249</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">250</span>  <span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">defun</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">parse-cli-fields</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">type</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">fields</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">251</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispString "class="lispString">&quot;Parse the --fields option.&quot;
</span><span title="LineNr "class="LineNr">252</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">loop</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">:for</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">field</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">:in</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">fields
</span><span title="LineNr "class="LineNr">253</span>  <span title="lispLeadWhite "class="lispLeadWhite">     </span><span title="lispKey "class="lispKey">:append</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">parse</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">case</span><span title="lispList "class="lispList"> </span><span title="lispFunc "class="lispFunc">type
</span><span title="LineNr "class="LineNr">254</span>  <span title="lispLeadWhite "class="lispLeadWhite">                      </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">:csv</span><span title="lispList "class="lispList">   </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">csv-source-fields</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">255</span>  <span title="lispLeadWhite "class="lispLeadWhite">                      </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">:fixed</span><span title="lispList "class="lispList"> </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">fixed-source-fields</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">256</span>  <span title="lispLeadWhite "class="lispLeadWhite">                      </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">:copy</span><span title="lispList "class="lispList">  </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">copy-source-fields</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">257</span>  <span title="lispLeadWhite "class="lispLeadWhite">                    </span><span title="lispSymbol "class="lispSymbol">field</span><span title="lispParen "class="lispParen">)))
</span><span title="LineNr "class="LineNr">258</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">259</span>  <span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">defun</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">parse-cli-options</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">type</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">options</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">260</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispString "class="lispString">&quot;Parse options as per the WITH clause when we get them from the CLI.&quot;
</span><span title="LineNr "class="LineNr">261</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">alexandria:alist-plist
</span><span title="LineNr "class="LineNr">262</span>  <span title="lispLeadWhite "class="lispLeadWhite">   </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">loop</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">:for</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">option</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">:in</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">options
</span><span title="LineNr "class="LineNr">263</span>  <span title="lispLeadWhite "class="lispLeadWhite">      </span><span title="lispKey "class="lispKey">:collect</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">parse</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">ecase</span><span title="lispList "class="lispList"> </span><span title="lispFunc "class="lispFunc">type
</span><span title="LineNr "class="LineNr">264</span>  <span title="lispLeadWhite "class="lispLeadWhite">                        </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">:csv</span><span title="lispList "class="lispList">    </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">csv-option</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">265</span>  <span title="lispLeadWhite "class="lispLeadWhite">                        </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">:fixed</span><span title="lispList "class="lispList">  </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">fixed-option</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">266</span>  <span title="lispLeadWhite "class="lispLeadWhite">                        </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">:copy</span><span title="lispList "class="lispList">   </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">copy-option</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">267</span>  <span title="lispLeadWhite "class="lispLeadWhite">                        </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">:dbf</span><span title="lispList "class="lispList">    </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">dbf-option</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">268</span>  <span title="lispLeadWhite "class="lispLeadWhite">                        </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">:ixf</span><span title="lispList "class="lispList">    </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">ixf-option</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">269</span>  <span title="lispLeadWhite "class="lispLeadWhite">                        </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">:sqlite</span><span title="lispList "class="lispList"> </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">sqlite-option</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">270</span>  <span title="lispLeadWhite "class="lispLeadWhite">                        </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">:pgsql</span><span title="lispList "class="lispList">  </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">pgsql-option</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">271</span>  <span title="lispLeadWhite "class="lispLeadWhite">                        </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">:mysql</span><span title="lispList "class="lispList">  </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">mysql-option</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">272</span>  <span title="lispLeadWhite "class="lispLeadWhite">                        </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">:mssql</span><span title="lispList "class="lispList">  </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">mssql-option</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">273</span>  <span title="lispLeadWhite "class="lispLeadWhite">                      </span><span title="lispSymbol "class="lispSymbol">option</span><span title="lispParen "class="lispParen">))))
</span><span title="LineNr "class="LineNr">274</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">275</span>  <span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">defun</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">parse-cli-casts</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">casts</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">276</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispString "class="lispString">&quot;Parse additional CAST rules when we get them from the CLI.&quot;
</span><span title="LineNr "class="LineNr">277</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">loop</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">:for</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">cast</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">:in</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">casts
</span><span title="LineNr "class="LineNr">278</span>  <span title="lispLeadWhite "class="lispLeadWhite">     </span><span title="lispKey "class="lispKey">:collect</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">parse</span><span title="lispList "class="lispList"> </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">cast-rule</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">cast</span><span title="lispParen "class="lispParen">)))
</span><span title="LineNr "class="LineNr">279</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">280</span>  <span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">defun</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">parse-sql-file</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">filename</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">281</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispString "class="lispString">&quot;Parse FILENAME for SQL statements&quot;
</span><span title="LineNr "class="LineNr">282</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">when</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">filename
</span><span title="LineNr "class="LineNr">283</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">log-message</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">:notice</span><span title="lispList "class="lispList"> </span><span title="lispString "class="lispString">&quot;reading SQL queries from ~s&quot;</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">filename</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">284</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">pgloader.sql:read-queries</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">probe-file</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">filename</span><span title="lispParen "class="lispParen">))))
</span><span title="LineNr "class="LineNr">285</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">286</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">287</span>  <span title="lispComment "class="lispComment">;;;
</span><span title="LineNr "class="LineNr">288</span>  <span title="lispComment "class="lispComment">;;; Helper for regression testing
</span><span title="LineNr "class="LineNr">289</span>  <span title="lispComment "class="lispComment">;;;
</span><span title="LineNr "class="LineNr">290</span>  <span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">defrule</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">pg-db-uri-from-command</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">or</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">pg-db-uri-from-files
</span><span title="LineNr "class="LineNr">291</span>  <span title="lispLeadWhite "class="lispLeadWhite">                                    </span><span title="lispSymbol "class="lispSymbol">pg-db-uri-from-source-target
</span><span title="LineNr "class="LineNr">292</span>  <span title="lispLeadWhite "class="lispLeadWhite">                                    </span><span title="lispSymbol "class="lispSymbol">pg-db-uri-from-source-table-target
</span><span title="LineNr "class="LineNr">293</span>  <span title="lispLeadWhite "class="lispLeadWhite">                                    </span><span title="lispSymbol "class="lispSymbol">pg-db-uri-from-source-and-encoding</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">294</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">295</span>  <span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">defrule</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">pg-db-uri-from-files</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">or</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">load-csv-file-command
</span><span title="LineNr "class="LineNr">296</span>  <span title="lispLeadWhite "class="lispLeadWhite">                                  </span><span title="lispSymbol "class="lispSymbol">load-copy-file-command
</span><span title="LineNr "class="LineNr">297</span>  <span title="lispLeadWhite "class="lispLeadWhite">                                  </span><span title="lispSymbol "class="lispSymbol">load-fixed-cols-file-command</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">298</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">:lambda</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">command</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">299</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">destructuring-bind</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">source</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">encoding</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">fields</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">pg-db-uri</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">table-name</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">columns
</span><span title="LineNr "class="LineNr">300</span>  <span title="lispLeadWhite "class="lispLeadWhite">                                </span><span title="lispKey "class="lispKey">&amp;key</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">gucs</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">&amp;allow-other-keys</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">301</span>  <span title="lispLeadWhite "class="lispLeadWhite">        </span><span title="lispSymbol "class="lispSymbol">command
</span><span title="LineNr "class="LineNr">302</span>  <span title="lispLeadWhite "class="lispLeadWhite">      </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">declare</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">ignore</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">source</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">encoding</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">fields</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">columns</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">303</span>  <span title="lispLeadWhite "class="lispLeadWhite">      </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">list</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">pg-db-uri</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">table-name</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">gucs</span><span title="lispParen "class="lispParen">))))
</span><span title="LineNr "class="LineNr">304</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">305</span>  <span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">defrule</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">pg-db-uri-from-source-target</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">or</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">load-sqlite-command
</span><span title="LineNr "class="LineNr">306</span>  <span title="lispLeadWhite "class="lispLeadWhite">                                          </span><span title="lispSymbol "class="lispSymbol">load-mysql-command
</span><span title="LineNr "class="LineNr">307</span>  <span title="lispLeadWhite "class="lispLeadWhite">                                          </span><span title="lispSymbol "class="lispSymbol">load-mssql-command</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">308</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">:lambda</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">command</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">309</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">destructuring-bind</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">source</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">pg-db-uri</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">&amp;key</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">gucs</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">&amp;allow-other-keys</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">310</span>  <span title="lispLeadWhite "class="lispLeadWhite">        </span><span title="lispSymbol "class="lispSymbol">command
</span><span title="LineNr "class="LineNr">311</span>  <span title="lispLeadWhite "class="lispLeadWhite">      </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">declare</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">ignore</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">source</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">312</span>  <span title="lispLeadWhite "class="lispLeadWhite">      </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">list</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">pg-db-uri</span><span title="lispList "class="lispList"> </span><span title="lispFunc "class="lispFunc">nil</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">gucs</span><span title="lispParen "class="lispParen">))))
</span><span title="LineNr "class="LineNr">313</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">314</span>  <span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">defrule</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">pg-db-uri-from-source-table-target</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">or</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">load-ixf-command</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">315</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">:lambda</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">command</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">316</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">destructuring-bind</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">source</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">pg-db-uri</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">table-name</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">&amp;key</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">gucs</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">&amp;allow-other-keys</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">317</span>  <span title="lispLeadWhite "class="lispLeadWhite">        </span><span title="lispSymbol "class="lispSymbol">command
</span><span title="LineNr "class="LineNr">318</span>  <span title="lispLeadWhite "class="lispLeadWhite">      </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">declare</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">ignore</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">source</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">319</span>  <span title="lispLeadWhite "class="lispLeadWhite">      </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">list</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">pg-db-uri</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">table-name</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">gucs</span><span title="lispParen "class="lispParen">))))
</span><span title="LineNr "class="LineNr">320</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">321</span>  <span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">defrule</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">pg-db-uri-from-source-and-encoding</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">or</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">load-dbf-command</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">322</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">:lambda</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">command</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">323</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">destructuring-bind</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">source</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">encoding</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">pg-db-uri</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">table-name
</span><span title="LineNr "class="LineNr">324</span>  <span title="lispLeadWhite "class="lispLeadWhite">                                </span><span title="lispKey "class="lispKey">&amp;key</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">gucs</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">&amp;allow-other-keys</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">325</span>  <span title="lispLeadWhite "class="lispLeadWhite">        </span><span title="lispSymbol "class="lispSymbol">command
</span><span title="LineNr "class="LineNr">326</span>  <span title="lispLeadWhite "class="lispLeadWhite">      </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">declare</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">ignore</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">source</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">encoding</span><span title="lispParen "class="lispParen">))
</span><span title="LineNr "class="LineNr">327</span>  <span title="lispLeadWhite "class="lispLeadWhite">      </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">list</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">pg-db-uri</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">table-name</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">gucs</span><span title="lispParen "class="lispParen">))))
</span><span title="LineNr "class="LineNr">328</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">329</span>  <span title="lispParen "class="lispParen">(</span><span title="lispDecl "class="lispDecl">defun</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">parse-target-pg-db-uri</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">command-file</span><span title="lispParen "class="lispParen">)
</span><span title="LineNr "class="LineNr">330</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispString "class="lispString">&quot;Partially parse COMMAND-FILE and return its target connection string.&quot;
</span><span title="LineNr "class="LineNr">331</span>  <span title="lispLeadWhite "class="lispLeadWhite">  </span><span title="lispParen "class="lispParen">(</span><span title="lispFunc "class="lispFunc">let*</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">((</span><span title="lispSymbol "class="lispSymbol">content</span><span title="lispList "class="lispList"> </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">read-file-into-string</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">command-file</span><span title="lispParen "class="lispParen">)))
</span><span title="LineNr "class="LineNr">332</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr last-LineNr">333</span>  <span title="lispLeadWhite "class="lispLeadWhite">    </span><span title="lispParen "class="lispParen">(</span><span title="lispSymbol "class="lispSymbol">parse</span><span title="lispList "class="lispList"> </span><span title="lispAtomMark "class="lispAtomMark">&#39;</span><span title="lispAtom "class="lispAtom">pg-db-uri-from-command</span><span title="lispList "class="lispList"> </span><span title="lispSymbol "class="lispSymbol">content</span><span title="lispList "class="lispList"> </span><span title="lispKey "class="lispKey">:junk-allowed</span><span title="lispList "class="lispList"> </span><span title="lispFunc "class="lispFunc">t</span><span title="lispParen "class="lispParen">)))</span>