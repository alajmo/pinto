<span title="LineNr "class="LineNr first-LineNr">1</span>  <span title="shComment "class="shComment">#!/usr/bin/env bash
</span><span title="LineNr "class="LineNr">2</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">3</span>  <span title="shStatement "class="shStatement">trap</span><span title="Normal "class="Normal"> </span><span title="shQuote "class="shQuote">&#39;</span><span title="shSingleQuote "class="shSingleQuote">echo &quot;Aborting due to errexit on line $LINENO. Exit code: $?&quot; &gt;&amp;2</span><span title="shQuote "class="shQuote">&#39;</span><span title="Normal "class="Normal"> ERR
</span><span title="LineNr "class="LineNr">4</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">5</span>  <span title="shSet "class="shSet">set</span><span title="shSetList "class="shSetList"> </span><span title="shSetOption "class="shSetOption">-eEu
</span><span title="LineNr "class="LineNr">6</span>  <span title="shSet "class="shSet">set</span><span title="shSetList "class="shSetList"> </span><span title="shSetOption "class="shSetOption">-o</span><span title="shSetList "class="shSetList"> pipefail
</span><span title="LineNr "class="LineNr">7</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">8</span>  <span title="shVariable "class="shVariable">SAFER_IFS</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">$&#39;</span><span title="shSpecial "class="shSpecial">\n\t</span><span title="shQuote "class="shQuote">&#39;
</span><span title="LineNr "class="LineNr">9</span>  <span title="shVariable "class="shVariable">IFS</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">SAFER_IFS</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">10</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">11</span>  <span title="shVariable "class="shVariable">_ME</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shCmdSubRegion "class="shCmdSubRegion">$(</span><span title="shCommandSub "class="shCommandSub">basename </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">${0}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCmdSubRegion "class="shCmdSubRegion">)
</span><span title="LineNr "class="LineNr">12</span>  <span title="shVariable "class="shVariable">_VERSION</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDoubleQuote "class="shDoubleQuote">0.10.2</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">13</span>  <span title="shVariable "class="shVariable">_USE_DEBUG</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">0
</span><span title="LineNr "class="LineNr">14</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">15</span>  <span title="shComment "class="shComment"># _debug()
</span><span title="LineNr "class="LineNr">16</span>  <span title="shComment "class="shComment">#
</span><span title="LineNr "class="LineNr">17</span>  <span title="shComment "class="shComment"># Usage:
</span><span title="LineNr "class="LineNr">18</span>  <span title="shComment "class="shComment">#   _debug printf &quot;Debug info. Variable: %s\n&quot; &quot;$0&quot;
</span><span title="LineNr "class="LineNr">19</span>  <span title="shComment "class="shComment">#
</span><span title="LineNr "class="LineNr">20</span>  <span title="shComment "class="shComment"># A simple function for executing a specified command if the `$_USE_DEBUG`
</span><span title="LineNr "class="LineNr">21</span>  <span title="shComment "class="shComment"># variable has been set. The command is expected to print a message and
</span><span title="LineNr "class="LineNr">22</span>  <span title="shComment "class="shComment"># should typically be either `echo`, `printf`, or `cat`.
</span><span title="LineNr "class="LineNr">23</span>  <span title="shVariable "class="shVariable">__DEBUG_COUNTER</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">0
</span><span title="LineNr "class="LineNr">24</span>  <span title="shFunction "class="shFunction">_debug() {
</span><span title="LineNr "class="LineNr">25</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">if </span><span title="Delimiter "class="Delimiter">[[</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">_USE_DEBUG</span><span title="shDerefOp "class="shDerefOp">:-</span><span title="shDerefDelim "class="shDerefDelim">&quot;</span><span title="shDerefString "class="shDerefString">0</span><span title="shDerefDelim "class="shDerefDelim">&quot;</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestOpr "class="shTestOpr">-eq</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shNumber "class="shNumber">1</span><span title="shDblBrace "class="shDblBrace"> </span><span title="Delimiter "class="Delimiter">]]
</span><span title="LineNr "class="LineNr">26</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">27</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shVariable "class="shVariable">__DEBUG_COUNTER</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shArithRegion "class="shArithRegion">$((</span><span title="shArithmetic "class="shArithmetic">__DEBUG_COUNTER+</span><span title="shNumber "class="shNumber">1</span><span title="shArithRegion "class="shArithRegion">))
</span><span title="LineNr "class="LineNr">28</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shComment "class="shComment"># Prefix debug message with &quot;bug (U+1F41B)&quot;
</span><span title="LineNr "class="LineNr">29</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shStatement "class="shStatement">printf</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDoubleQuote "class="shDoubleQuote">🐛  %s </span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__DEBUG_COUNTER</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">30</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefSpecial "class="shDerefSpecial">@</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">31</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shStatement "class="shStatement">printf</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDoubleQuote "class="shDoubleQuote">――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――</span><span title="shSpecial "class="shSpecial">\n</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">32</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">fi
</span><span title="LineNr "class="LineNr">33</span>  <span title="shFunction "class="shFunction">}
</span><span title="LineNr "class="LineNr">34</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">35</span>  <span title="shFunction "class="shFunction">debug() {
</span><span title="LineNr "class="LineNr">36</span>  <span title="shFunctionOne "class="shFunctionOne">  _debug </span><span title="shStatement "class="shStatement">echo</span><span title="shEcho "class="shEcho"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefSpecial "class="shDerefSpecial">@</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">37</span>  <span title="shFunction "class="shFunction">}
</span><span title="LineNr "class="LineNr">38</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">39</span>  <span title="shComment "class="shComment"># _die()
</span><span title="LineNr "class="LineNr">40</span>  <span title="shComment "class="shComment">#
</span><span title="LineNr "class="LineNr">41</span>  <span title="shComment "class="shComment"># Usage:
</span><span title="LineNr "class="LineNr">42</span>  <span title="shComment "class="shComment">#   _die printf &quot;Error message. Variable: %s\n&quot; &quot;$0&quot;
</span><span title="LineNr "class="LineNr">43</span>  <span title="shComment "class="shComment">#
</span><span title="LineNr "class="LineNr">44</span>  <span title="shComment "class="shComment"># A simple function for exiting with an error after executing the specified
</span><span title="LineNr "class="LineNr">45</span>  <span title="shComment "class="shComment"># command. The command is expected to print a message and should typically
</span><span title="LineNr "class="LineNr">46</span>  <span title="shComment "class="shComment"># be either `echo`, `printf`, or `cat`.
</span><span title="LineNr "class="LineNr">47</span>  <span title="shFunction "class="shFunction">_die() {
</span><span title="LineNr "class="LineNr">48</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shComment "class="shComment"># Prefix die message with &quot;cross mark (U+274C)&quot;, often displayed as a red x.
</span><span title="LineNr "class="LineNr">49</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shStatement "class="shStatement">printf</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDoubleQuote "class="shDoubleQuote">❌  </span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">50</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefSpecial "class="shDerefSpecial">@</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shNumber "class="shNumber">1</span><span title="shRedir "class="shRedir">&gt;&amp;2
</span><span title="LineNr "class="LineNr">51</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shStatement "class="shStatement">exit</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shNumber "class="shNumber">1
</span><span title="LineNr "class="LineNr">52</span>  <span title="shFunction "class="shFunction">}
</span><span title="LineNr "class="LineNr">53</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">54</span>  <span title="shComment "class="shComment"># die()
</span><span title="LineNr "class="LineNr">55</span>  <span title="shComment "class="shComment">#
</span><span title="LineNr "class="LineNr">56</span>  <span title="shComment "class="shComment"># Usage:
</span><span title="LineNr "class="LineNr">57</span>  <span title="shComment "class="shComment">#   die &quot;Error message. Variable: $0&quot;
</span><span title="LineNr "class="LineNr">58</span>  <span title="shComment "class="shComment">#
</span><span title="LineNr "class="LineNr">59</span>  <span title="shComment "class="shComment"># Exit with an error and print the specified message.
</span><span title="LineNr "class="LineNr">60</span>  <span title="shComment "class="shComment">#
</span><span title="LineNr "class="LineNr">61</span>  <span title="shComment "class="shComment"># This is a shortcut for the _die() function that simply echos the message.
</span><span title="LineNr "class="LineNr">62</span>  <span title="shFunction "class="shFunction">die() {
</span><span title="LineNr "class="LineNr">63</span>  <span title="shFunctionOne "class="shFunctionOne">  _die </span><span title="shStatement "class="shStatement">echo</span><span title="shEcho "class="shEcho"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefSpecial "class="shDerefSpecial">@</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">64</span>  <span title="shFunction "class="shFunction">}
</span><span title="LineNr "class="LineNr">65</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">66</span>  <span title="shComment "class="shComment"># _print_help()
</span><span title="LineNr "class="LineNr">67</span>  <span title="shComment "class="shComment">#
</span><span title="LineNr "class="LineNr">68</span>  <span title="shComment "class="shComment"># Usage:
</span><span title="LineNr "class="LineNr">69</span>  <span title="shComment "class="shComment">#   _print_help
</span><span title="LineNr "class="LineNr">70</span>  <span title="shComment "class="shComment">#
</span><span title="LineNr "class="LineNr">71</span>  <span title="shComment "class="shComment"># Print the program help information.
</span><span title="LineNr "class="LineNr">72</span>  <span title="shFunction "class="shFunction">_print_help() {
</span><span title="LineNr "class="LineNr">73</span>  <span title="shFunctionOne "class="shFunctionOne">  cat </span><span title="shHereDoc01 "class="shHereDoc01">&lt;&lt;HEREDOC
</span><span title="LineNr "class="LineNr">74</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">75</span>  <span title="shHereDoc "class="shHereDoc">template-generator - Template generator CLI
</span><span title="LineNr "class="LineNr">76</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">77</span>  <span title="shHereDoc "class="shHereDoc">Usage: </span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">_ME</span><span title="PreProc "class="PreProc">}</span><span title="shHereDoc "class="shHereDoc"> [command] [arguments]
</span><span title="LineNr "class="LineNr">78</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">79</span>  <span title="shHereDoc "class="shHereDoc">Options:
</span><span title="LineNr "class="LineNr">80</span>  <span title="shHereDoc "class="shHereDoc">  -h, --help                       Print this help
</span><span title="LineNr "class="LineNr">81</span>  <span title="shHereDoc "class="shHereDoc">  -v, --version                    Print script version
</span><span title="LineNr "class="LineNr">82</span>  <span title="shHereDoc "class="shHereDoc">  -L, --level                      Max display depth of the directory tree
</span><span title="LineNr "class="LineNr">83</span>  <span title="shHereDoc "class="shHereDoc">  -b, --boilerplate-path &lt;path&gt;    Specify boilerplate path
</span><span title="LineNr "class="LineNr">84</span>  <span title="shHereDoc "class="shHereDoc">  -f, --format &lt;tree|line&gt;         List format [default: tree]
</span><span title="LineNr "class="LineNr">85</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">86</span>  <span title="shHereDoc "class="shHereDoc">Commands:
</span><span title="LineNr "class="LineNr">87</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">88</span>  <span title="shHereDoc "class="shHereDoc">  list|ls|l [subdirectory]         List boilerplates.
</span><span title="LineNr "class="LineNr">89</span>  <span title="shHereDoc "class="shHereDoc">  generate|g [boilerplate] [dest]  Generate boilerplate.
</span><span title="LineNr "class="LineNr">90</span>  <span title="shHereDoc "class="shHereDoc">  preview|p [boilerplate]          Preview boilerplate.
</span><span title="LineNr "class="LineNr">91</span>  <span title="shHereDoc "class="shHereDoc">  edit|e [boilerplate]             Edit boilerplate in editor.
</span><span title="LineNr "class="LineNr">92</span>  <span title="shHereDoc "class="shHereDoc">  remove|rm|r [boilerplate]        Remove a boilerplate.
</span><span title="LineNr "class="LineNr">93</span>  <span title="shHereDoc "class="shHereDoc">  new|n [file] [dest]              Add a new boilerplate.
</span><span title="LineNr "class="LineNr">94</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">95</span>  <span title="shHereDoc "class="shHereDoc">Examples:
</span><span title="LineNr "class="LineNr">96</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">97</span>  <span title="shHereDoc "class="shHereDoc">  # Show first depth level of boilerplates path.
</span><span title="LineNr "class="LineNr">98</span>  <span title="shHereDoc "class="shHereDoc">  $ </span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">_ME</span><span title="PreProc "class="PreProc">}</span><span title="shHereDoc "class="shHereDoc"> list -L 1
</span><span title="LineNr "class="LineNr">99</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">100</span>  <span title="shHereDoc "class="shHereDoc">  # Copy boilerplate file.txt to current directory with filename new-file.txt
</span><span title="LineNr "class="LineNr">101</span>  <span title="shHereDoc "class="shHereDoc">  $ </span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">_ME</span><span title="PreProc "class="PreProc">}</span><span title="shHereDoc "class="shHereDoc"> generate files/file.txt new-file.txt
</span><span title="LineNr "class="LineNr">102</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">103</span>  <span title="shHereDoc "class="shHereDoc">Boilerplate Path:
</span><span title="LineNr "class="LineNr">104</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">105</span>  <span title="shHereDoc "class="shHereDoc">  The order of precedence (highest to lowest) is:
</span><span title="LineNr "class="LineNr">106</span>  <span title="shHereDoc "class="shHereDoc">    1. Path specified in options
</span><span title="LineNr "class="LineNr">107</span>  <span title="shHereDoc "class="shHereDoc">    2. Environment variable BOILERPLATES_PATH
</span><span title="LineNr "class="LineNr">108</span>  <span title="shHereDoc "class="shHereDoc">    3. </span><span title="shSpecialDQ "class="shSpecialDQ">\$</span><span title="shHereDoc "class="shHereDoc">PWD/.boilerplates/
</span><span title="LineNr "class="LineNr">109</span>  <span title="shHereDoc "class="shHereDoc">    4. </span><span title="shSpecialDQ "class="shSpecialDQ">\$</span><span title="shHereDoc "class="shHereDoc">PWD/boilerplates/
</span><span title="LineNr "class="LineNr">110</span>  <span title="shHereDoc "class="shHereDoc">    5. ~/.boilerplates/
</span><span title="LineNr "class="LineNr">111</span>  <span title="shHereDoc "class="shHereDoc">    6. ~/boilerplates/
</span><span title="LineNr "class="LineNr">112</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">113</span>  <span title="shHereDoc01 "class="shHereDoc01">HEREDOC
</span><span title="LineNr "class="LineNr">114</span>  <span title="shFunction "class="shFunction">}
</span><span title="LineNr "class="LineNr">115</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">116</span>  <span title="shFunction "class="shFunction">_print_version() {
</span><span title="LineNr "class="LineNr">117</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shStatement "class="shStatement">printf</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDoubleQuote "class="shDoubleQuote">v%s </span><span title="shSpecial "class="shSpecial">\n</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$_VERSION</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">118</span>  <span title="shFunction "class="shFunction">}
</span><span title="LineNr "class="LineNr">119</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">120</span>  <span title="shVariable "class="shVariable">optstring</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shVar "class="shVar">xo</span><span title="Normal "class="Normal">:h
</span><span title="LineNr "class="LineNr">121</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">122</span>  <span title="shSet "class="shSet">unset</span><span title="shSetList "class="shSetList"> options
</span><span title="LineNr "class="LineNr">123</span>  <span title="shLoop "class="shLoop">while </span><span title="Delimiter "class="Delimiter">((</span><span title="PreProc "class="PreProc">${#}</span><span title="Delimiter "class="Delimiter">))
</span><span title="LineNr "class="LineNr">124</span>  <span title="shConditional "class="shConditional">do
</span><span title="LineNr "class="LineNr">125</span>  <span title="Normal "class="Normal">  </span><span title="shConditional "class="shConditional">case</span><span title="shCaseEsac "class="shCaseEsac"> </span><span title="shDerefSimple "class="shDerefSimple">${1}</span><span title="shCaseEsac "class="shCaseEsac"> </span><span title="shCaseIn "class="shCaseIn">in
</span><span title="LineNr "class="LineNr">126</span>  <span title="shCaseEsac "class="shCaseEsac">    </span><span title="shCaseLabel "class="shCaseLabel">-</span><span title="Delimiter "class="Delimiter">[</span><span title="shCaseRange "class="shCaseRange">!-</span><span title="Delimiter "class="Delimiter">]</span><span title="shCaseEsac "class="shCaseEsac">?</span><span title="shCaseLabel "class="shCaseLabel">*</span><span title="shSnglCase "class="shSnglCase">)
</span><span title="LineNr "class="LineNr">127</span>  <span title="shCase "class="shCase">      </span><span title="shLoop "class="shLoop">for ((</span><span title="shForPP "class="shForPP">i</span><span title="shTestOpr "class="shTestOpr">&#61;</span><span title="shTestPattern "class="shTestPattern">1</span><span title="shForPP "class="shForPP">; i</span><span title="shTestOpr "class="shTestOpr">&lt;</span><span title="PreProc "class="PreProc">${#</span><span title="shDerefVar "class="shDerefVar">1</span><span title="PreProc "class="PreProc">}</span><span title="shForPP "class="shForPP">; i++</span><span title="shLoop "class="shLoop">))
</span><span title="LineNr "class="LineNr">128</span>  <span title="shCase "class="shCase">      </span><span title="shConditional "class="shConditional">do
</span><span title="LineNr "class="LineNr">129</span>  <span title="shCase "class="shCase">        </span><span title="shVariable "class="shVariable">c</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">1</span><span title="shDerefOff "class="shDerefOff">:i</span><span title="shDerefLen "class="shDerefLen">:1</span><span title="PreProc "class="PreProc">}
</span><span title="LineNr "class="LineNr">130</span>  <span title="shCase "class="shCase">        </span><span title="shVariable "class="shVariable">options+</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shCmdSubRegion "class="shCmdSubRegion">(</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDoubleQuote "class="shDoubleQuote">-</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">c</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCmdSubRegion "class="shCmdSubRegion">)
</span><span title="LineNr "class="LineNr">131</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">132</span>  <span title="shCase "class="shCase">        </span><span title="shConditional "class="shConditional">if </span><span title="Delimiter "class="Delimiter">[[</span><span title="shDblBrace "class="shDblBrace"> </span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">optstring</span><span title="PreProc "class="PreProc">}</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestOpr "class="shTestOpr">&#61;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shAstQuote "class="shAstQuote">*</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">c</span><span title="PreProc "class="PreProc">}</span><span title="shDoubleQuote "class="shDoubleQuote">:</span><span title="shQuote "class="shQuote">&quot;</span><span title="shNoQuote "class="shNoQuote">*</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shNoQuote "class="shNoQuote">&amp;&amp;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">1</span><span title="shDerefOff "class="shDerefOff">:i+1</span><span title="PreProc "class="PreProc">}</span><span title="shDblBrace "class="shDblBrace"> </span><span title="Delimiter "class="Delimiter">]]
</span><span title="LineNr "class="LineNr">133</span>  <span title="shCase "class="shCase">        </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">134</span>  <span title="shCase "class="shCase">          </span><span title="shVariable "class="shVariable">options+</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shCmdSubRegion "class="shCmdSubRegion">(</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">1</span><span title="shDerefOff "class="shDerefOff">:i+1</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCmdSubRegion "class="shCmdSubRegion">)
</span><span title="LineNr "class="LineNr">135</span>  <span title="shCase "class="shCase">          </span><span title="shStatement "class="shStatement">break
</span><span title="LineNr "class="LineNr">136</span>  <span title="shCase "class="shCase">        </span><span title="shConditional "class="shConditional">fi
</span><span title="LineNr "class="LineNr">137</span>  <span title="shCase "class="shCase">      </span><span title="shConditional "class="shConditional">done
</span><span title="LineNr "class="LineNr">138</span>  <span title="shCase "class="shCase">      </span><span title="shSnglCase "class="shSnglCase">;;
</span><span title="LineNr "class="LineNr">139</span>  <span title="shCaseEsac "class="shCaseEsac">    </span><span title="shCaseLabel "class="shCaseLabel">--</span><span title="shCaseEsac "class="shCaseEsac">?</span><span title="shCaseLabel "class="shCaseLabel">*</span><span title="shCaseEsac "class="shCaseEsac">&#61;</span><span title="shCaseLabel "class="shCaseLabel">*</span><span title="shSnglCase "class="shSnglCase">)
</span><span title="LineNr "class="LineNr">140</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">options+</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shCmdSubRegion "class="shCmdSubRegion">(</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">1</span><span title="shDerefOp "class="shDerefOp">%%</span><span title="shDerefPattern "class="shDerefPattern">&#61;*</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCmdParenRegion "class="shCmdParenRegion"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">1</span><span title="shDerefOp "class="shDerefOp">#</span><span title="shDerefPattern "class="shDerefPattern">*&#61;</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCmdSubRegion "class="shCmdSubRegion">)
</span><span title="LineNr "class="LineNr">141</span>  <span title="shCase "class="shCase">      </span><span title="shSnglCase "class="shSnglCase">;;
</span><span title="LineNr "class="LineNr">142</span>  <span title="shCaseEsac "class="shCaseEsac">    </span><span title="shCaseLabel "class="shCaseLabel">--</span><span title="shSnglCase "class="shSnglCase">)
</span><span title="LineNr "class="LineNr">143</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">options+</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shCmdSubRegion "class="shCmdSubRegion">(</span><span title="shCmdParenRegion "class="shCmdParenRegion">--endopts</span><span title="shCmdSubRegion "class="shCmdSubRegion">)
</span><span title="LineNr "class="LineNr">144</span>  <span title="shCase "class="shCase">      </span><span title="shStatement "class="shStatement">shift
</span><span title="LineNr "class="LineNr">145</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">options+</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shCmdSubRegion "class="shCmdSubRegion">(</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefSpecial "class="shDerefSpecial">@</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCmdSubRegion "class="shCmdSubRegion">)
</span><span title="LineNr "class="LineNr">146</span>  <span title="shCase "class="shCase">      </span><span title="shStatement "class="shStatement">break
</span><span title="LineNr "class="LineNr">147</span>  <span title="shCase "class="shCase">      </span><span title="shSnglCase "class="shSnglCase">;;
</span><span title="LineNr "class="LineNr">148</span>  <span title="shCaseEsac "class="shCaseEsac">    </span><span title="shCaseLabel "class="shCaseLabel">*</span><span title="shSnglCase "class="shSnglCase">)
</span><span title="LineNr "class="LineNr">149</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">options+</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shCmdSubRegion "class="shCmdSubRegion">(</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">${1}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCmdSubRegion "class="shCmdSubRegion">)
</span><span title="LineNr "class="LineNr">150</span>  <span title="shCase "class="shCase">      </span><span title="shSnglCase "class="shSnglCase">;;
</span><span title="LineNr "class="LineNr">151</span>  <span title="shCaseEsac "class="shCaseEsac">  </span><span title="shConditional "class="shConditional">esac
</span><span title="LineNr "class="LineNr">152</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">153</span>  <span title="Normal "class="Normal">  </span><span title="shStatement "class="shStatement">shift
</span><span title="LineNr "class="LineNr">154</span>  <span title="shConditional "class="shConditional">done
</span><span title="LineNr "class="LineNr">155</span>  <span title="shSet "class="shSet">set</span><span title="shSetList "class="shSetList"> -- </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">options</span><span title="shDeref "class="shDeref">[</span><span title="shDerefVarArray "class="shDerefVarArray">@</span><span title="shDeref "class="shDeref">]</span><span title="shDerefOp "class="shDerefOp">:-</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">156</span>  <span title="shSet "class="shSet">unset</span><span title="shSetList "class="shSetList"> options
</span><span title="LineNr "class="LineNr">157</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">158</span>  <span title="shFunction "class="shFunction">_get_boilerplates_path() {
</span><span title="LineNr "class="LineNr">159</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> boilerplatePathConfig</span><span title="shOperator "class="shOperator">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$1</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">160</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> env_path</span><span title="shOperator "class="shOperator">&#61;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">BOILERPLATES_PATH</span><span title="shDerefOp "class="shDerefOp">:-</span><span title="shDerefDelim "class="shDerefDelim">&quot;&quot;</span><span title="PreProc "class="PreProc">}
</span><span title="LineNr "class="LineNr">161</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">162</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> path
</span><span title="LineNr "class="LineNr">163</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">if </span><span title="Delimiter "class="Delimiter">[[</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestOpr "class="shTestOpr">-n</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$boilerplatePathConfig</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="Delimiter "class="Delimiter">]]</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">164</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shVariable "class="shVariable">path</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$boilerplatePathConfig</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">165</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">elif</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="Delimiter "class="Delimiter">[[</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestOpr "class="shTestOpr">-n</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$env_path</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="Delimiter "class="Delimiter">]]</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">166</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shVariable "class="shVariable">path</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$env_path</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">167</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">elif</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="Delimiter "class="Delimiter">[[</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestOpr "class="shTestOpr">-d</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$PWD</span><span title="shDoubleQuote "class="shDoubleQuote">/.boilerplates/</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="Delimiter "class="Delimiter">]]</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">168</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shVariable "class="shVariable">path</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$PWD</span><span title="shDoubleQuote "class="shDoubleQuote">/.boilerplates/</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">169</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">elif</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="Delimiter "class="Delimiter">[[</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestOpr "class="shTestOpr">-d</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$PWD</span><span title="shDoubleQuote "class="shDoubleQuote">/boilerplates/</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="Delimiter "class="Delimiter">]]</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">170</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shVariable "class="shVariable">path</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$PWD</span><span title="shDoubleQuote "class="shDoubleQuote">/boilerplates/</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">171</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">elif</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="Delimiter "class="Delimiter">[[</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestOpr "class="shTestOpr">-d</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$HOME</span><span title="shDoubleQuote "class="shDoubleQuote">/.boilerplates/</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="Delimiter "class="Delimiter">]]</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">172</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shVariable "class="shVariable">path</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$HOME</span><span title="shDoubleQuote "class="shDoubleQuote">/.boilerplates/</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">173</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">elif</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="Delimiter "class="Delimiter">[[</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestOpr "class="shTestOpr">-d</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$HOME</span><span title="shDoubleQuote "class="shDoubleQuote">/boilerplates/</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="Delimiter "class="Delimiter">]]</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">174</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shVariable "class="shVariable">path</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$HOME</span><span title="shDoubleQuote "class="shDoubleQuote">/boilerplates/</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">175</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">fi
</span><span title="LineNr "class="LineNr">176</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">177</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shStatement "class="shStatement">echo</span><span title="shEcho "class="shEcho"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$path</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">178</span>  <span title="shFunction "class="shFunction">}
</span><span title="LineNr "class="LineNr">179</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">180</span>  <span title="shComment "class="shComment"># Add dest to list
</span><span title="LineNr "class="LineNr">181</span>  <span title="shComment "class="shComment"># @param {String} Boilerplates path
</span><span title="LineNr "class="LineNr">182</span>  <span title="shComment "class="shComment"># @param {String} Sub directory
</span><span title="LineNr "class="LineNr">183</span>  <span title="shComment "class="shComment"># @param {String} List format
</span><span title="LineNr "class="LineNr">184</span>  <span title="shComment "class="shComment"># @param {String} Tree level
</span><span title="LineNr "class="LineNr">185</span>  <span title="shComment "class="shComment"># _list_boilerplates &quot;$boilerplates_path&quot; &quot;&quot; &quot;$_LIST_ARG&quot; &quot;$_LIST_OPTION&quot;
</span><span title="LineNr "class="LineNr">186</span>  <span title="shFunction "class="shFunction">_list_boilerplates() {
</span><span title="LineNr "class="LineNr">187</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> root_boilerplates_path</span><span title="shOperator "class="shOperator">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$1</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">188</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> directory</span><span title="shOperator "class="shOperator">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">2</span><span title="shDerefOp "class="shDerefOp">:-</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">189</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> list_format</span><span title="shOperator "class="shOperator">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">3</span><span title="shDerefOp "class="shDerefOp">:-</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">190</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> tree_level</span><span title="shOperator "class="shOperator">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">4</span><span title="shDerefOp "class="shDerefOp">:-</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">191</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> path</span><span title="shOperator "class="shOperator">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCmdSubRegion "class="shCmdSubRegion">$(</span><span title="shCommandSub "class="shCommandSub">realpath </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$root_boilerplates_path</span><span title="shDoubleQuote "class="shDoubleQuote">/</span><span title="shDerefSimple "class="shDerefSimple">$directory</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCmdSubRegion "class="shCmdSubRegion">)</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">192</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">193</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="Delimiter "class="Delimiter">[[</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestOpr "class="shTestOpr">-z</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shDerefSimple "class="shDerefSimple">$list_format</span><span title="shDblBrace "class="shDblBrace"> </span><span title="Delimiter "class="Delimiter">]]</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shOperator "class="shOperator">&amp;&amp;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shVariable "class="shVariable">list_format</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDoubleQuote "class="shDoubleQuote">tree</span><span title="shQuote "class="shQuote">&quot;</span><span title="shOperator "class="shOperator">;
</span><span title="LineNr "class="LineNr">194</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="Delimiter "class="Delimiter">[[</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestOpr "class="shTestOpr">-z</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shDerefSimple "class="shDerefSimple">$tree_level</span><span title="shDblBrace "class="shDblBrace"> </span><span title="Delimiter "class="Delimiter">]]</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shOperator "class="shOperator">&amp;&amp;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shVariable "class="shVariable">tree_level</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">9999</span><span title="shOperator "class="shOperator">;
</span><span title="LineNr "class="LineNr">195</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">196</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">if </span><span title="Delimiter "class="Delimiter">[[</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shDerefSimple "class="shDerefSimple">$list_format</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestOpr "class="shTestOpr">&#61;&#61;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDoubleQuote "class="shDoubleQuote">line</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="Delimiter "class="Delimiter">]]</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">197</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="bashStatement "class="bashStatement">find</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shDerefSimple "class="shDerefSimple">$path
</span><span title="LineNr "class="LineNr">198</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">else
</span><span title="LineNr "class="LineNr">199</span>  <span title="shFunctionOne "class="shFunctionOne">    tree </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$path</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shTestOpr "class="shTestOpr">-L</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$tree_level</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shTestOpr "class="shTestOpr">-a</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shTestOpr "class="shTestOpr">-I</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDoubleQuote "class="shDoubleQuote">*.git*</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">200</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">fi
</span><span title="LineNr "class="LineNr">201</span>  <span title="shFunction "class="shFunction">}
</span><span title="LineNr "class="LineNr">202</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">203</span>  <span title="shComment "class="shComment"># Trim spaces
</span><span title="LineNr "class="LineNr">204</span>  <span title="shComment "class="shComment"># @param {String} string
</span><span title="LineNr "class="LineNr">205</span>  <span title="shFunction "class="shFunction">trim_string() {
</span><span title="LineNr "class="LineNr">206</span>  <span title="shFunctionOne "class="shFunctionOne">    : </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">1</span><span title="shDerefOp "class="shDerefOp">#</span><span title="shDerefDelim "class="shDerefDelim">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">1</span><span title="shDerefOp "class="shDerefOp">%%</span><span title="shDerefPattern "class="shDerefPattern">[![:space:]]*</span><span title="PreProc "class="PreProc">}</span><span title="shDerefDelim "class="shDerefDelim">&quot;</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">207</span>  <span title="shFunctionOne "class="shFunctionOne">    : </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">_</span><span title="shDerefOp "class="shDerefOp">%</span><span title="shDerefDelim "class="shDerefDelim">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">_</span><span title="shDerefOp "class="shDerefOp">##</span><span title="shDerefPattern "class="shDerefPattern">*[![:space:]]</span><span title="PreProc "class="PreProc">}</span><span title="shDerefDelim "class="shDerefDelim">&quot;</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">208</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shStatement "class="shStatement">printf</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&#39;</span><span title="shSingleQuote "class="shSingleQuote">%s\n</span><span title="shQuote "class="shQuote">&#39;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$_</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">209</span>  <span title="shFunction "class="shFunction">}
</span><span title="LineNr "class="LineNr">210</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">211</span>  <span title="shComment "class="shComment"># Adds a new boilerplate
</span><span title="LineNr "class="LineNr">212</span>  <span title="shComment "class="shComment"># @param boilerplates_path
</span><span title="LineNr "class="LineNr">213</span>  <span title="shComment "class="shComment"># @param {String} Boilerplates path
</span><span title="LineNr "class="LineNr">214</span>  <span title="shComment "class="shComment"># @param {String} src
</span><span title="LineNr "class="LineNr">215</span>  <span title="shComment "class="shComment"># @param {String} dest
</span><span title="LineNr "class="LineNr">216</span>  <span title="shFunction "class="shFunction">_new_boilerplate() {
</span><span title="LineNr "class="LineNr">217</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shComment "class="shComment"># 1. Normalize paths
</span><span title="LineNr "class="LineNr">218</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> boilerplates_path</span><span title="shOperator "class="shOperator">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$1</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">219</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> src</span><span title="shOperator "class="shOperator">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$2</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">220</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> dest</span><span title="shOperator "class="shOperator">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$3</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">221</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">222</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">if </span><span title="Delimiter "class="Delimiter">[[</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestOpr "class="shTestOpr">-n</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$src</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shNoQuote "class="shNoQuote">&amp;&amp;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestOpr "class="shTestOpr">-n</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$dest</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="Delimiter "class="Delimiter">]]</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">223</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shVariable "class="shVariable">dest</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shCmdSubRegion "class="shCmdSubRegion">$(</span><span title="shCommandSub "class="shCommandSub">realpath </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$boilerplates_path$dest</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCmdSubRegion "class="shCmdSubRegion">)
</span><span title="LineNr "class="LineNr">224</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">225</span>  <span title="shFunctionOne "class="shFunctionOne">    cp </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$src</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$dest</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shOption "class="shOption">-irL
</span><span title="LineNr "class="LineNr">226</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">227</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shComment "class="shComment"># Open in editor
</span><span title="LineNr "class="LineNr">228</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shConditional "class="shConditional">if </span><span title="Delimiter "class="Delimiter">[[</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestOpr "class="shTestOpr">-n</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shCmdSubRegion "class="shCmdSubRegion">$(</span><span title="bashStatement "class="bashStatement">command</span><span title="shCommandSub "class="shCommandSub"> </span><span title="shOption "class="shOption">-v</span><span title="shCommandSub "class="shCommandSub"> vifm</span><span title="shCmdSubRegion "class="shCmdSubRegion">)</span><span title="shDblBrace "class="shDblBrace"> </span><span title="Delimiter "class="Delimiter">]]</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">229</span>  <span title="shFunctionOne "class="shFunctionOne">      vifm </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$dest</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">230</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shConditional "class="shConditional">else
</span><span title="LineNr "class="LineNr">231</span>  <span title="shFunctionOne "class="shFunctionOne">      </span><span title="shDerefSimple "class="shDerefSimple">$EDITOR</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$dest</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">232</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shConditional "class="shConditional">fi
</span><span title="LineNr "class="LineNr">233</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">else
</span><span title="LineNr "class="LineNr">234</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shConditional "class="shConditional">if </span><span title="Delimiter "class="Delimiter">[[</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestOpr "class="shTestOpr">-n</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shCmdSubRegion "class="shCmdSubRegion">$(</span><span title="bashStatement "class="bashStatement">command</span><span title="shCommandSub "class="shCommandSub"> </span><span title="shOption "class="shOption">-v</span><span title="shCommandSub "class="shCommandSub"> vifm</span><span title="shCmdSubRegion "class="shCmdSubRegion">)</span><span title="shDblBrace "class="shDblBrace"> </span><span title="Delimiter "class="Delimiter">]]</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">235</span>  <span title="shFunctionOne "class="shFunctionOne">      vifm </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$boilerplates_path</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">236</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shConditional "class="shConditional">else
</span><span title="LineNr "class="LineNr">237</span>  <span title="shFunctionOne "class="shFunctionOne">      </span><span title="shDerefSimple "class="shDerefSimple">$EDITOR</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$boilerplates_path</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">238</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shConditional "class="shConditional">fi
</span><span title="LineNr "class="LineNr">239</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">fi
</span><span title="LineNr "class="LineNr">240</span>  <span title="shFunction "class="shFunction">}
</span><span title="LineNr "class="LineNr">241</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">242</span>  <span title="shComment "class="shComment"># Removes a boilerplate
</span><span title="LineNr "class="LineNr">243</span>  <span title="shComment "class="shComment"># @param boilerplates_path
</span><span title="LineNr "class="LineNr">244</span>  <span title="shComment "class="shComment"># @param {String} src
</span><span title="LineNr "class="LineNr">245</span>  <span title="shFunction "class="shFunction">_remove_boilerplate() {
</span><span title="LineNr "class="LineNr">246</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shComment "class="shComment"># 1. Normalize paths
</span><span title="LineNr "class="LineNr">247</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> boilerplates_path</span><span title="shOperator "class="shOperator">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$1</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">248</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> src</span><span title="shOperator "class="shOperator">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$2</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">249</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shVariable "class="shVariable">src</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shCmdSubRegion "class="shCmdSubRegion">$(</span><span title="shCommandSub "class="shCommandSub">realpath </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$boilerplates_path$src</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCmdSubRegion "class="shCmdSubRegion">)
</span><span title="LineNr "class="LineNr">250</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">251</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="bashStatement "class="bashStatement">rm</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$src</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shOption "class="shOption">-ir
</span><span title="LineNr "class="LineNr">252</span>  <span title="shFunction "class="shFunction">}
</span><span title="LineNr "class="LineNr">253</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">254</span>  <span title="shFunction "class="shFunction">find_in_array() {
</span><span title="LineNr "class="LineNr">255</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> word</span><span title="shOperator "class="shOperator">&#61;</span><span title="shDerefSimple "class="shDerefSimple">$1
</span><span title="LineNr "class="LineNr">256</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shStatement "class="shStatement">shift
</span><span title="LineNr "class="LineNr">257</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shLoop "class="shLoop">for</span><span title="shFor "class="shFor"> e </span><span title="shLoop "class="shLoop">in</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$@</span><span title="shQuote "class="shQuote">&quot;</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shConditional "class="shConditional">do</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="Delimiter "class="Delimiter">[[</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$e</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestOpr "class="shTestOpr">&#61;&#61;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$word</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="Delimiter "class="Delimiter">]]</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shOperator "class="shOperator">&amp;&amp;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shStatement "class="shStatement">return</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shNumber "class="shNumber">0</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shConditional "class="shConditional">done
</span><span title="LineNr "class="LineNr">258</span>  <span title="shFunction "class="shFunction">}
</span><span title="LineNr "class="LineNr">259</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">260</span>  <span title="shComment "class="shComment"># Replace placeholder in files with their variable
</span><span title="LineNr "class="LineNr">261</span>  <span title="shComment "class="shComment"># @param {String} files
</span><span title="LineNr "class="LineNr">262</span>  <span title="shComment "class="shComment"># @param {String} directory
</span><span title="LineNr "class="LineNr">263</span>  <span title="shFunction "class="shFunction">template_engine() {
</span><span title="LineNr "class="LineNr">264</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shComment "class="shComment"># 1. Find placeholders
</span><span title="LineNr "class="LineNr">265</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> filesArr</span><span title="shOperator "class="shOperator">&#61;</span><span title="shSetList "class="shSetList">(</span><span title="shDerefSimple "class="shDerefSimple">$1</span><span title="shFunctionOne "class="shFunctionOne">)
</span><span title="LineNr "class="LineNr">266</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> content</span><span title="shOperator "class="shOperator">&#61;</span><span title="shQuote "class="shQuote">&quot;&quot;
</span><span title="LineNr "class="LineNr">267</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">268</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> find_pattern</span><span title="shOperator "class="shOperator">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDoubleQuote "class="shDoubleQuote">(?&lt;&#61;{%)(</span><span title="shEscape "class="shEscape">\s</span><span title="shDoubleQuote "class="shDoubleQuote">*[</span><span title="shEscape "class="shEscape">\w\d\.\_\-</span><span title="shDoubleQuote "class="shDoubleQuote">]*</span><span title="shEscape "class="shEscape">\s</span><span title="shDoubleQuote "class="shDoubleQuote">*)(?&#61;%})</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">269</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shComment "class="shComment"># Find unique entries
</span><span title="LineNr "class="LineNr">270</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> variables</span><span title="shOperator "class="shOperator">&#61;</span><span title="shSetList "class="shSetList">(</span><span title="shCmdSubRegion "class="shCmdSubRegion">$(</span><span title="shCommandSub "class="shCommandSub">cat </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">filesArr</span><span title="shDeref "class="shDeref">[</span><span title="shDerefVarArray "class="shDerefVarArray">@</span><span title="shDeref "class="shDeref">]</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCommandSub "class="shCommandSub"> </span><span title="shOperator "class="shOperator">|</span><span title="shCommandSub "class="shCommandSub"> </span><span title="bashStatement "class="bashStatement">grep</span><span title="shCommandSub "class="shCommandSub"> </span><span title="shOption "class="shOption">-oP</span><span title="shCommandSub "class="shCommandSub"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$find_pattern</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCommandSub "class="shCommandSub"> </span><span title="shOperator "class="shOperator">||</span><span title="shCommandSub "class="shCommandSub"> </span><span title="shStatement "class="shStatement">true</span><span title="shCmdSubRegion "class="shCmdSubRegion">)</span><span title="shFunctionOne "class="shFunctionOne">)
</span><span title="LineNr "class="LineNr">271</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">272</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shComment "class="shComment"># 2. Set values for all placeholders
</span><span title="LineNr "class="LineNr">273</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shStatement "class="shStatement">declare</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shOption "class="shOption">-A</span><span title="shFunctionOne "class="shFunctionOne"> arr
</span><span title="LineNr "class="LineNr">274</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shLoop "class="shLoop">for</span><span title="shFor "class="shFor"> key </span><span title="shLoop "class="shLoop">in</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">variables</span><span title="shDeref "class="shDeref">[</span><span title="shDerefVarArray "class="shDerefVarArray">@</span><span title="shDeref "class="shDeref">]</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shConditional "class="shConditional">do
</span><span title="LineNr "class="LineNr">275</span>  <span title="shFunctionOne "class="shFunctionOne">        </span><span title="shVariable "class="shVariable">key</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shCmdSubRegion "class="shCmdSubRegion">$(</span><span title="shCommandSub "class="shCommandSub">trim_string </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$key</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCmdSubRegion "class="shCmdSubRegion">)
</span><span title="LineNr "class="LineNr">276</span>  <span title="shFunctionOne "class="shFunctionOne">        </span><span title="shRange "class="shRange">[</span><span title="shExpr "class="shExpr"> </span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">arr</span><span title="shDeref "class="shDeref">[</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$key</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDeref "class="shDeref">]</span><span title="shDerefOp "class="shDerefOp">+</span><span title="shDerefPattern "class="shDerefPattern">abc</span><span title="PreProc "class="PreProc">}</span><span title="shExpr "class="shExpr"> </span><span title="shRange "class="shRange">]</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shOperator "class="shOperator">||</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shStatement "class="shStatement">read</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shOption "class="shOption">-rp</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">key</span><span title="PreProc "class="PreProc">}</span><span title="shDoubleQuote "class="shDoubleQuote">: </span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> arr</span><span title="shRange "class="shRange">[</span><span title="shDerefSimple "class="shDerefSimple">$key</span><span title="shRange "class="shRange">]</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shTestOpr "class="shTestOpr">&lt;</span><span title="shFunctionOne "class="shFunctionOne">/dev/tty
</span><span title="LineNr "class="LineNr">277</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shConditional "class="shConditional">done
</span><span title="LineNr "class="LineNr">278</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">279</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shComment "class="shComment"># 3. Replace placeholders with user values
</span><span title="LineNr "class="LineNr">280</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shLoop "class="shLoop">while </span><span title="shStatement "class="shStatement">read</span><span title="shRepeat "class="shRepeat"> </span><span title="shTestOpr "class="shTestOpr">-r</span><span title="shRepeat "class="shRepeat"> file</span><span title="shOperator "class="shOperator">;</span><span title="shRepeat "class="shRepeat"> </span><span title="shConditional "class="shConditional">do
</span><span title="LineNr "class="LineNr">281</span>  <span title="shFunctionOne "class="shFunctionOne">        </span><span title="shLoop "class="shLoop">for</span><span title="shFor "class="shFor"> key </span><span title="shLoop "class="shLoop">in</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${!</span><span title="shDerefSpecial "class="shDerefSpecial">arr</span><span title="shDeref "class="shDeref">[</span><span title="shDerefVarArray "class="shDerefVarArray">@</span><span title="shDeref "class="shDeref">]</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shConditional "class="shConditional">do
</span><span title="LineNr "class="LineNr">282</span>  <span title="shFunctionOne "class="shFunctionOne">            </span><span title="shComment "class="shComment"># echo &quot;$file&quot;
</span><span title="LineNr "class="LineNr">283</span>  <span title="shFunctionOne "class="shFunctionOne">            </span><span title="shComment "class="shComment"># echo &quot;$key: ${arr[$key]}&quot;
</span><span title="LineNr "class="LineNr">284</span>  <span title="shFunctionOne "class="shFunctionOne">            </span><span title="bashStatement "class="bashStatement">sed</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shOption "class="shOption">-ri</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDoubleQuote "class="shDoubleQuote">s/</span><span title="shEscape "class="shEscape">\{\%</span><span title="shDoubleQuote "class="shDoubleQuote"> </span><span title="shDerefSimple "class="shDerefSimple">$key</span><span title="shDoubleQuote "class="shDoubleQuote"> </span><span title="shEscape "class="shEscape">\%\}</span><span title="shDoubleQuote "class="shDoubleQuote">/</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">arr</span><span title="shDeref "class="shDeref">[</span><span title="shDerefSimple "class="shDerefSimple">$key</span><span title="shDeref "class="shDeref">]</span><span title="PreProc "class="PreProc">}</span><span title="shDoubleQuote "class="shDoubleQuote">/g</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$file</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">285</span>  <span title="shFunctionOne "class="shFunctionOne">        </span><span title="shConditional "class="shConditional">done
</span><span title="LineNr "class="LineNr">286</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shConditional "class="shConditional">done</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shHereString "class="shHereString">&lt;&lt;&lt;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$files</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">287</span>  <span title="shFunction "class="shFunction">}
</span><span title="LineNr "class="LineNr">288</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">289</span>  <span title="shComment "class="shComment"># Generates boilerplates, takes single file or directory as input parameter
</span><span title="LineNr "class="LineNr">290</span>  <span title="shComment "class="shComment"># @param boilerplates_path
</span><span title="LineNr "class="LineNr">291</span>  <span title="shComment "class="shComment"># @param boilerplate
</span><span title="LineNr "class="LineNr">292</span>  <span title="shComment "class="shComment"># @param dest
</span><span title="LineNr "class="LineNr">293</span>  <span title="shFunction "class="shFunction">_generate_boilerplate() {
</span><span title="LineNr "class="LineNr">294</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shComment "class="shComment"># 1. Normalize paths
</span><span title="LineNr "class="LineNr">295</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> boilerplates_path</span><span title="shOperator "class="shOperator">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$1</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">296</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> boilerplate</span><span title="shOperator "class="shOperator">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$2</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">297</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> dest</span><span title="shOperator "class="shOperator">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$3</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">298</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> src</span><span title="shOperator "class="shOperator">&#61;</span><span title="shCmdSubRegion "class="shCmdSubRegion">$(</span><span title="shCommandSub "class="shCommandSub">realpath </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$boilerplates_path$boilerplate</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCmdSubRegion "class="shCmdSubRegion">)
</span><span title="LineNr "class="LineNr">299</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">300</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shComment "class="shComment"># 2. Copy files
</span><span title="LineNr "class="LineNr">301</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">if </span><span title="Delimiter "class="Delimiter">[[</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestOpr "class="shTestOpr">-z</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$dest</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shNoQuote "class="shNoQuote">||</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$dest</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestOpr "class="shTestOpr">&#61;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestDoubleQuote "class="shTestDoubleQuote">&quot;.&quot;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shNoQuote "class="shNoQuote">||</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$dest</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestOpr "class="shTestOpr">&#61;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestDoubleQuote "class="shTestDoubleQuote">&quot;./&quot;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="Delimiter "class="Delimiter">]]</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">302</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shVariable "class="shVariable">dest</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shCmdSubRegion "class="shCmdSubRegion">$(</span><span title="shCommandSub "class="shCommandSub">realpath </span><span title="shCmdSubRegion "class="shCmdSubRegion">$(</span><span title="shCommandSub "class="shCommandSub">basename </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$src</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCmdSubRegion "class="shCmdSubRegion">))
</span><span title="LineNr "class="LineNr">303</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">else
</span><span title="LineNr "class="LineNr">304</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shVariable "class="shVariable">dest</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shCmdSubRegion "class="shCmdSubRegion">$(</span><span title="shCommandSub "class="shCommandSub">realpath </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$dest</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCmdSubRegion "class="shCmdSubRegion">)
</span><span title="LineNr "class="LineNr">305</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">fi
</span><span title="LineNr "class="LineNr">306</span>  <span title="shFunctionOne "class="shFunctionOne">  cp </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$src</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$dest</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shOption "class="shOption">-irL
</span><span title="LineNr "class="LineNr">307</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">308</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shComment "class="shComment"># 3. Replace variables
</span><span title="LineNr "class="LineNr">309</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> files</span><span title="shOperator "class="shOperator">&#61;</span><span title="shCmdSubRegion "class="shCmdSubRegion">$(</span><span title="bashStatement "class="bashStatement">find</span><span title="shCommandSub "class="shCommandSub"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$dest</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCommandSub "class="shCommandSub"> </span><span title="shOption "class="shOption">-type</span><span title="shCommandSub "class="shCommandSub"> f</span><span title="shCmdSubRegion "class="shCmdSubRegion">)
</span><span title="LineNr "class="LineNr">310</span>  <span title="shFunctionOne "class="shFunctionOne">  template_engine </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$files</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">311</span>  <span title="shFunction "class="shFunction">}
</span><span title="LineNr "class="LineNr">312</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">313</span>  <span title="shFunction "class="shFunction">_edit_boilerplate() {
</span><span title="LineNr "class="LineNr">314</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> path</span><span title="shOperator "class="shOperator">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$1$2</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">315</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">if </span><span title="Delimiter "class="Delimiter">[[</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestOpr "class="shTestOpr">-d</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$path</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="Delimiter "class="Delimiter">]]</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">316</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shConditional "class="shConditional">if </span><span title="Delimiter "class="Delimiter">[[</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestOpr "class="shTestOpr">-n</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shCmdSubRegion "class="shCmdSubRegion">$(</span><span title="bashStatement "class="bashStatement">command</span><span title="shCommandSub "class="shCommandSub"> </span><span title="shOption "class="shOption">-v</span><span title="shCommandSub "class="shCommandSub"> vifm</span><span title="shCmdSubRegion "class="shCmdSubRegion">)</span><span title="shDblBrace "class="shDblBrace"> </span><span title="Delimiter "class="Delimiter">]]</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">317</span>  <span title="shFunctionOne "class="shFunctionOne">      vifm </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$path</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">318</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shConditional "class="shConditional">else
</span><span title="LineNr "class="LineNr">319</span>  <span title="shFunctionOne "class="shFunctionOne">      </span><span title="shDerefSimple "class="shDerefSimple">$EDITOR</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$path</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">320</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shConditional "class="shConditional">fi
</span><span title="LineNr "class="LineNr">321</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">else
</span><span title="LineNr "class="LineNr">322</span>  <span title="shFunctionOne "class="shFunctionOne">    </span><span title="shDerefSimple "class="shDerefSimple">$EDITOR</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$path</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">323</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">fi
</span><span title="LineNr "class="LineNr">324</span>  <span title="shFunction "class="shFunction">}
</span><span title="LineNr "class="LineNr">325</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">326</span>  <span title="shFunction "class="shFunction">_preview_boilerplate() {
</span><span title="LineNr "class="LineNr">327</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> path</span><span title="shOperator "class="shOperator">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCmdSubRegion "class="shCmdSubRegion">$(</span><span title="shCommandSub "class="shCommandSub">realpath </span><span title="shDerefSimple "class="shDerefSimple">$1$2</span><span title="shCmdSubRegion "class="shCmdSubRegion">)</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">328</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">329</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> files</span><span title="shOperator "class="shOperator">&#61;</span><span title="shSetList "class="shSetList">(</span><span title="shCmdSubRegion "class="shCmdSubRegion">$(</span><span title="bashStatement "class="bashStatement">find</span><span title="shCommandSub "class="shCommandSub"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$path</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCommandSub "class="shCommandSub"> </span><span title="shOption "class="shOption">-type</span><span title="shCommandSub "class="shCommandSub"> f</span><span title="shCmdSubRegion "class="shCmdSubRegion">)</span><span title="shFunctionOne "class="shFunctionOne">)
</span><span title="LineNr "class="LineNr">330</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">331</span>  <span title="shFunctionOne "class="shFunctionOne">  cat </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$files</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">332</span>  <span title="shFunction "class="shFunction">}
</span><span title="LineNr "class="LineNr">333</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">334</span>  <span title="shComment "class="shComment"># Program option parameters.
</span><span title="LineNr "class="LineNr">335</span>  <span title="shVariable "class="shVariable">_PRINT_OPTION</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">0
</span><span title="LineNr "class="LineNr">336</span>  <span title="shVariable "class="shVariable">_USE_DEBUG</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">0
</span><span title="LineNr "class="LineNr">337</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">338</span>  <span title="shComment "class="shComment"># Options
</span><span title="LineNr "class="LineNr">339</span>  <span title="shVariable "class="shVariable">_VERSION_OPTION</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">0
</span><span title="LineNr "class="LineNr">340</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">341</span>  <span title="shComment "class="shComment"># Boilerplate
</span><span title="LineNr "class="LineNr">342</span>  <span title="shVariable "class="shVariable">_BOILERPLATE_PATH_OPTION</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">0
</span><span title="LineNr "class="LineNr">343</span>  <span title="shVariable "class="shVariable">_BOILERPLATE_PATH_ARG</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;&quot;
</span><span title="LineNr "class="LineNr">344</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">345</span>  <span title="shComment "class="shComment"># List
</span><span title="LineNr "class="LineNr">346</span>  <span title="shVariable "class="shVariable">_LIST_OPTION</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">0
</span><span title="LineNr "class="LineNr">347</span>  <span title="shVariable "class="shVariable">_LIST_ARG</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;&quot;
</span><span title="LineNr "class="LineNr">348</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">349</span>  <span title="shVariable "class="shVariable">_LIST_FORMAT_OPTION</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">0
</span><span title="LineNr "class="LineNr">350</span>  <span title="shVariable "class="shVariable">_LIST_FORMAT_ARG</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDoubleQuote "class="shDoubleQuote">tree</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">351</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">352</span>  <span title="shVariable "class="shVariable">_TREE_LEVEL_OPTION</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">0
</span><span title="LineNr "class="LineNr">353</span>  <span title="shVariable "class="shVariable">_TREE_LEVEL_ARG</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">9999
</span><span title="LineNr "class="LineNr">354</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">355</span>  <span title="shComment "class="shComment"># Generate
</span><span title="LineNr "class="LineNr">356</span>  <span title="shVariable "class="shVariable">_GENERATE_OPTION</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">0
</span><span title="LineNr "class="LineNr">357</span>  <span title="shVariable "class="shVariable">_GENERATE_ARG</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;&quot;
</span><span title="LineNr "class="LineNr">358</span>  <span title="shVariable "class="shVariable">_GENERATE_ARG2</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;&quot;
</span><span title="LineNr "class="LineNr">359</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">360</span>  <span title="shComment "class="shComment"># New
</span><span title="LineNr "class="LineNr">361</span>  <span title="shVariable "class="shVariable">_NEW_OPTION</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">0
</span><span title="LineNr "class="LineNr">362</span>  <span title="shVariable "class="shVariable">_NEW_ARG</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;&quot;
</span><span title="LineNr "class="LineNr">363</span>  <span title="shVariable "class="shVariable">_NEW_ARG2</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;&quot;
</span><span title="LineNr "class="LineNr">364</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">365</span>  <span title="shComment "class="shComment"># Remove
</span><span title="LineNr "class="LineNr">366</span>  <span title="shVariable "class="shVariable">_REMOVE_OPTION</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">0
</span><span title="LineNr "class="LineNr">367</span>  <span title="shVariable "class="shVariable">_REMOVE_ARG</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;&quot;
</span><span title="LineNr "class="LineNr">368</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">369</span>  <span title="shComment "class="shComment"># Edit
</span><span title="LineNr "class="LineNr">370</span>  <span title="shVariable "class="shVariable">_EDIT_OPTION</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">0
</span><span title="LineNr "class="LineNr">371</span>  <span title="shVariable "class="shVariable">_EDIT_ARG</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;&quot;
</span><span title="LineNr "class="LineNr">372</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">373</span>  <span title="shComment "class="shComment"># Preview
</span><span title="LineNr "class="LineNr">374</span>  <span title="shVariable "class="shVariable">_PREVIEW_OPTION</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">0
</span><span title="LineNr "class="LineNr">375</span>  <span title="shVariable "class="shVariable">_PREVIEW_ARG</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;&quot;
</span><span title="LineNr "class="LineNr">376</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">377</span>  <span title="shComment "class="shComment"># Usage:
</span><span title="LineNr "class="LineNr">378</span>  <span title="shComment "class="shComment">#   _require_argument &lt;option&gt; &lt;argument&gt;
</span><span title="LineNr "class="LineNr">379</span>  <span title="shComment "class="shComment">#
</span><span title="LineNr "class="LineNr">380</span>  <span title="shComment "class="shComment"># If &lt;argument&gt; is blank or another option, print an error message and exit
</span><span title="LineNr "class="LineNr">381</span>  <span title="shComment "class="shComment"># with status 1.
</span><span title="LineNr "class="LineNr">382</span>  <span title="shFunction "class="shFunction">_require_argument() {
</span><span title="LineNr "class="LineNr">383</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> _option</span><span title="shOperator "class="shOperator">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">1</span><span title="shDerefOp "class="shDerefOp">:-</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">384</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> _argument</span><span title="shOperator "class="shOperator">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">2</span><span title="shDerefOp "class="shDerefOp">:-</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">385</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">386</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">if </span><span title="Delimiter "class="Delimiter">[[</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestOpr "class="shTestOpr">-z</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">_argument</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="Delimiter "class="Delimiter">]]</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shOperator "class="shOperator">||</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="Delimiter "class="Delimiter">[[</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">_argument</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shTestOpr "class="shTestOpr">&#61;~</span><span title="shDblBrace "class="shDblBrace"> </span><span title="shNoQuote "class="shNoQuote">^-</span><span title="shDblBrace "class="shDblBrace"> </span><span title="Delimiter "class="Delimiter">]]
</span><span title="LineNr "class="LineNr">387</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">388</span>  <span title="shFunctionOne "class="shFunctionOne">    _die </span><span title="shStatement "class="shStatement">printf</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDoubleQuote "class="shDoubleQuote">Option requires a argument: %s</span><span title="shSpecial "class="shSpecial">\n</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">_option</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">389</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">fi
</span><span title="LineNr "class="LineNr">390</span>  <span title="shFunction "class="shFunction">}
</span><span title="LineNr "class="LineNr">391</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">392</span>  <span title="shLoop "class="shLoop">while </span><span title="shRange "class="shRange">[</span><span title="shExpr "class="shExpr"> </span><span title="PreProc "class="PreProc">${#}</span><span title="shExpr "class="shExpr"> </span><span title="shTestOpr "class="shTestOpr">-gt</span><span title="shExpr "class="shExpr"> </span><span title="shNumber "class="shNumber">0</span><span title="shExpr "class="shExpr"> </span><span title="shRange "class="shRange">]
</span><span title="LineNr "class="LineNr">393</span>  <span title="shConditional "class="shConditional">do
</span><span title="LineNr "class="LineNr">394</span>  <span title="Normal "class="Normal">  </span><span title="shVariable "class="shVariable">__option</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">1</span><span title="shDerefOp "class="shDerefOp">:-</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">395</span>  <span title="Normal "class="Normal">  </span><span title="shVariable "class="shVariable">__maybe_param</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">2</span><span title="shDerefOp "class="shDerefOp">:-</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">396</span>  <span title="Normal "class="Normal">  </span><span title="shVariable "class="shVariable">__maybe_param2</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">3</span><span title="shDerefOp "class="shDerefOp">:-</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">397</span>  <span title="Normal "class="Normal">  </span><span title="shConditional "class="shConditional">case</span><span title="shCaseEsac "class="shCaseEsac"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__option</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCaseEsac "class="shCaseEsac"> </span><span title="shCaseIn "class="shCaseIn">in
</span><span title="LineNr "class="LineNr">398</span>  <span title="shCaseEsac "class="shCaseEsac">    </span><span title="shCaseLabel "class="shCaseLabel">-h</span><span title="shCaseEsac "class="shCaseEsac">|</span><span title="shCaseLabel "class="shCaseLabel">--help</span><span title="shSnglCase "class="shSnglCase">)
</span><span title="LineNr "class="LineNr">399</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">_PRINT_OPTION</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">1
</span><span title="LineNr "class="LineNr">400</span>  <span title="shCase "class="shCase">      </span><span title="shSnglCase "class="shSnglCase">;;
</span><span title="LineNr "class="LineNr">401</span>  <span title="shCaseEsac "class="shCaseEsac">    </span><span title="shCaseLabel "class="shCaseLabel">-v</span><span title="shCaseEsac "class="shCaseEsac">|</span><span title="shCaseLabel "class="shCaseLabel">--version</span><span title="shSnglCase "class="shSnglCase">)
</span><span title="LineNr "class="LineNr">402</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">_VERSION_OPTION</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">1</span><span title="shOperator "class="shOperator">;
</span><span title="LineNr "class="LineNr">403</span>  <span title="shCase "class="shCase">      </span><span title="shSnglCase "class="shSnglCase">;;
</span><span title="LineNr "class="LineNr">404</span>  <span title="shCaseEsac "class="shCaseEsac">    </span><span title="shCaseLabel "class="shCaseLabel">--debug</span><span title="shSnglCase "class="shSnglCase">)
</span><span title="LineNr "class="LineNr">405</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">_USE_DEBUG</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">1
</span><span title="LineNr "class="LineNr">406</span>  <span title="shCase "class="shCase">      </span><span title="shSnglCase "class="shSnglCase">;;
</span><span title="LineNr "class="LineNr">407</span>  <span title="shCaseEsac "class="shCaseEsac">    </span><span title="shCaseLabel "class="shCaseLabel">l</span><span title="shCaseEsac "class="shCaseEsac">|</span><span title="shCaseLabel "class="shCaseLabel">ls</span><span title="shCaseEsac "class="shCaseEsac">|</span><span title="shCaseLabel "class="shCaseLabel">list</span><span title="shSnglCase "class="shSnglCase">)
</span><span title="LineNr "class="LineNr">408</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">_LIST_OPTION</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">1</span><span title="shOperator "class="shOperator">;
</span><span title="LineNr "class="LineNr">409</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">_LIST_ARG</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__maybe_param</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shOperator "class="shOperator">;
</span><span title="LineNr "class="LineNr">410</span>  <span title="shCase "class="shCase">      </span><span title="shSnglCase "class="shSnglCase">;;
</span><span title="LineNr "class="LineNr">411</span>  <span title="shCaseEsac "class="shCaseEsac">    </span><span title="shCaseLabel "class="shCaseLabel">n</span><span title="shCaseEsac "class="shCaseEsac">|</span><span title="shCaseLabel "class="shCaseLabel">new</span><span title="shSnglCase "class="shSnglCase">)
</span><span title="LineNr "class="LineNr">412</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">_NEW_OPTION</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">1</span><span title="shOperator "class="shOperator">;
</span><span title="LineNr "class="LineNr">413</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">_NEW_ARG</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__maybe_param</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shOperator "class="shOperator">;
</span><span title="LineNr "class="LineNr">414</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">_NEW_ARG2</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__maybe_param2</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shOperator "class="shOperator">;
</span><span title="LineNr "class="LineNr">415</span>  <span title="shCase "class="shCase">      </span><span title="shSnglCase "class="shSnglCase">;;
</span><span title="LineNr "class="LineNr">416</span>  <span title="shCaseEsac "class="shCaseEsac">    </span><span title="shCaseLabel "class="shCaseLabel">r</span><span title="shCaseEsac "class="shCaseEsac">|</span><span title="shCaseLabel "class="shCaseLabel">rm</span><span title="shCaseEsac "class="shCaseEsac">|</span><span title="shCaseLabel "class="shCaseLabel">remove</span><span title="shSnglCase "class="shSnglCase">)
</span><span title="LineNr "class="LineNr">417</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">_REMOVE_OPTION</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">1</span><span title="shOperator "class="shOperator">;
</span><span title="LineNr "class="LineNr">418</span>  <span title="shCase "class="shCase">      _require_argument </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__option</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCase "class="shCase"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__maybe_param</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">419</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">_REMOVE_ARG</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__maybe_param</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shOperator "class="shOperator">;
</span><span title="LineNr "class="LineNr">420</span>  <span title="shCase "class="shCase">      </span><span title="shSnglCase "class="shSnglCase">;;
</span><span title="LineNr "class="LineNr">421</span>  <span title="shCaseEsac "class="shCaseEsac">    </span><span title="shCaseLabel "class="shCaseLabel">g</span><span title="shCaseEsac "class="shCaseEsac">|</span><span title="shCaseLabel "class="shCaseLabel">generate</span><span title="shSnglCase "class="shSnglCase">)
</span><span title="LineNr "class="LineNr">422</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">_GENERATE_OPTION</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">1</span><span title="shOperator "class="shOperator">;
</span><span title="LineNr "class="LineNr">423</span>  <span title="shCase "class="shCase">      _require_argument </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__option</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCase "class="shCase"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__maybe_param</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">424</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">_GENERATE_ARG</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__maybe_param</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shOperator "class="shOperator">;
</span><span title="LineNr "class="LineNr">425</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">_GENERATE_ARG2</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__maybe_param2</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shOperator "class="shOperator">;
</span><span title="LineNr "class="LineNr">426</span>  <span title="shCase "class="shCase">      </span><span title="shSnglCase "class="shSnglCase">;;
</span><span title="LineNr "class="LineNr">427</span>  <span title="shCaseEsac "class="shCaseEsac">    </span><span title="shCaseLabel "class="shCaseLabel">p</span><span title="shCaseEsac "class="shCaseEsac">|</span><span title="shCaseLabel "class="shCaseLabel">preview</span><span title="shSnglCase "class="shSnglCase">)
</span><span title="LineNr "class="LineNr">428</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">_PREVIEW_OPTION</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">1</span><span title="shOperator "class="shOperator">;
</span><span title="LineNr "class="LineNr">429</span>  <span title="shCase "class="shCase">      _require_argument </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__option</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCase "class="shCase"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__maybe_param</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">430</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">_PREVIEW_ARG</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__maybe_param</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shOperator "class="shOperator">;
</span><span title="LineNr "class="LineNr">431</span>  <span title="shCase "class="shCase">      </span><span title="shSnglCase "class="shSnglCase">;;
</span><span title="LineNr "class="LineNr">432</span>  <span title="shCaseEsac "class="shCaseEsac">    </span><span title="shCaseLabel "class="shCaseLabel">e</span><span title="shCaseEsac "class="shCaseEsac">|</span><span title="shCaseLabel "class="shCaseLabel">edit</span><span title="shSnglCase "class="shSnglCase">)
</span><span title="LineNr "class="LineNr">433</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">_EDIT_OPTION</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">1</span><span title="shOperator "class="shOperator">;
</span><span title="LineNr "class="LineNr">434</span>  <span title="shCase "class="shCase">      _require_argument </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__option</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCase "class="shCase"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__maybe_param</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">435</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">_EDIT_ARG</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__maybe_param</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shOperator "class="shOperator">;
</span><span title="LineNr "class="LineNr">436</span>  <span title="shCase "class="shCase">      </span><span title="shSnglCase "class="shSnglCase">;;
</span><span title="LineNr "class="LineNr">437</span>  <span title="shCaseEsac "class="shCaseEsac">    </span><span title="shCaseLabel "class="shCaseLabel">-b</span><span title="shCaseEsac "class="shCaseEsac">|</span><span title="shCaseLabel "class="shCaseLabel">--boilerplate-path</span><span title="shSnglCase "class="shSnglCase">)
</span><span title="LineNr "class="LineNr">438</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">_BOILERPLATE_PATH_OPTION</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">1</span><span title="shOperator "class="shOperator">;
</span><span title="LineNr "class="LineNr">439</span>  <span title="shCase "class="shCase">      _require_argument </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__option</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCase "class="shCase"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__maybe_param</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">440</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">_BOILERPLATE_PATH_ARG</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__maybe_param</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shOperator "class="shOperator">;
</span><span title="LineNr "class="LineNr">441</span>  <span title="shCase "class="shCase">      </span><span title="shSnglCase "class="shSnglCase">;;
</span><span title="LineNr "class="LineNr">442</span>  <span title="shCaseEsac "class="shCaseEsac">    </span><span title="shCaseLabel "class="shCaseLabel">-L</span><span title="shCaseEsac "class="shCaseEsac">|</span><span title="shCaseLabel "class="shCaseLabel">--level</span><span title="shSnglCase "class="shSnglCase">)
</span><span title="LineNr "class="LineNr">443</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">_TREE_LEVEL_OPTION</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">1</span><span title="shOperator "class="shOperator">;
</span><span title="LineNr "class="LineNr">444</span>  <span title="shCase "class="shCase">      _require_argument </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__option</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCase "class="shCase"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__maybe_param</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">445</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">_TREE_LEVEL_ARG</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__maybe_param</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shOperator "class="shOperator">;
</span><span title="LineNr "class="LineNr">446</span>  <span title="shCase "class="shCase">      </span><span title="shSnglCase "class="shSnglCase">;;
</span><span title="LineNr "class="LineNr">447</span>  <span title="shCaseEsac "class="shCaseEsac">    </span><span title="shCaseLabel "class="shCaseLabel">-f</span><span title="shCaseEsac "class="shCaseEsac">|</span><span title="shCaseLabel "class="shCaseLabel">--format</span><span title="shSnglCase "class="shSnglCase">)
</span><span title="LineNr "class="LineNr">448</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">_LIST_FORMAT_OPTION</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shNumber "class="shNumber">1</span><span title="shOperator "class="shOperator">;
</span><span title="LineNr "class="LineNr">449</span>  <span title="shCase "class="shCase">      _require_argument </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__option</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCase "class="shCase"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__maybe_param</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">450</span>  <span title="shCase "class="shCase">      </span><span title="shVariable "class="shVariable">_LIST_FORMAT_ARG</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__maybe_param</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;</span><span title="shOperator "class="shOperator">;
</span><span title="LineNr "class="LineNr">451</span>  <span title="shCase "class="shCase">      </span><span title="shSnglCase "class="shSnglCase">;;
</span><span title="LineNr "class="LineNr">452</span>  <span title="shCaseEsac "class="shCaseEsac">    </span><span title="shCaseLabel "class="shCaseLabel">--endopts</span><span title="shSnglCase "class="shSnglCase">)
</span><span title="LineNr "class="LineNr">453</span>  <span title="shCase "class="shCase">      </span><span title="shStatement "class="shStatement">break
</span><span title="LineNr "class="LineNr">454</span>  <span title="shCase "class="shCase">      </span><span title="shSnglCase "class="shSnglCase">;;
</span><span title="LineNr "class="LineNr">455</span>  <span title="shCaseEsac "class="shCaseEsac">    </span><span title="shCaseLabel "class="shCaseLabel">-*</span><span title="shSnglCase "class="shSnglCase">)
</span><span title="LineNr "class="LineNr">456</span>  <span title="shCase "class="shCase">      _die </span><span title="shStatement "class="shStatement">printf</span><span title="shCase "class="shCase"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDoubleQuote "class="shDoubleQuote">Unexpected option: %s</span><span title="shSpecial "class="shSpecial">\n</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCase "class="shCase"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefVar "class="shDerefVar">__option</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">457</span>  <span title="shCase "class="shCase">      </span><span title="shSnglCase "class="shSnglCase">;;
</span><span title="LineNr "class="LineNr">458</span>  <span title="shCaseEsac "class="shCaseEsac">  </span><span title="shConditional "class="shConditional">esac
</span><span title="LineNr "class="LineNr">459</span>  <span title="Normal "class="Normal">  </span><span title="shStatement "class="shStatement">shift
</span><span title="LineNr "class="LineNr">460</span>  <span title="shConditional "class="shConditional">done
</span><span title="LineNr "class="LineNr">461</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">462</span>  <span title="shFunction "class="shFunction">_main() {
</span><span title="LineNr "class="LineNr">463</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shSet "class="shSet">local</span><span title="shSetList "class="shSetList"> boilerplates_path
</span><span title="LineNr "class="LineNr">464</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shVariable "class="shVariable">boilerplates_path</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shCmdSubRegion "class="shCmdSubRegion">$(</span><span title="shCommandSub "class="shCommandSub">_get_boilerplates_path </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$_BOILERPLATE_PATH_ARG</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCmdSubRegion "class="shCmdSubRegion">)
</span><span title="LineNr "class="LineNr">465</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shVariable "class="shVariable">boilerplates_path</span><span title="shVarAssign "class="shVarAssign">&#61;</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCmdSubRegion "class="shCmdSubRegion">$(</span><span title="shCommandSub "class="shCommandSub">realpath </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$boilerplates_path</span><span title="shQuote "class="shQuote">&quot;</span><span title="shCmdSubRegion "class="shCmdSubRegion">)</span><span title="shDoubleQuote "class="shDoubleQuote">/</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">466</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">467</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">if </span><span title="Delimiter "class="Delimiter">((</span><span title="shDblParen "class="shDblParen">_PRINT_OPTION</span><span title="Delimiter "class="Delimiter">))
</span><span title="LineNr "class="LineNr">468</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">469</span>  <span title="shFunctionOne "class="shFunctionOne">    _print_help
</span><span title="LineNr "class="LineNr">470</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">elif</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="Delimiter "class="Delimiter">((</span><span title="shDblParen "class="shDblParen">_VERSION_OPTION</span><span title="Delimiter "class="Delimiter">))</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">471</span>  <span title="shFunctionOne "class="shFunctionOne">    _print_version
</span><span title="LineNr "class="LineNr">472</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">elif</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="Delimiter "class="Delimiter">((</span><span title="shDblParen "class="shDblParen">_LIST_OPTION</span><span title="Delimiter "class="Delimiter">))</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">473</span>  <span title="shFunctionOne "class="shFunctionOne">    _list_boilerplates </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$boilerplates_path</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$_LIST_ARG</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$_LIST_FORMAT_ARG</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$_TREE_LEVEL_ARG</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">474</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">elif</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="Delimiter "class="Delimiter">((</span><span title="shDblParen "class="shDblParen">_NEW_OPTION</span><span title="Delimiter "class="Delimiter">))</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">475</span>  <span title="shFunctionOne "class="shFunctionOne">    _new_boilerplate </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$boilerplates_path</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$_NEW_ARG</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$_NEW_ARG2</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">476</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">elif</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="Delimiter "class="Delimiter">((</span><span title="shDblParen "class="shDblParen">_REMOVE_OPTION</span><span title="Delimiter "class="Delimiter">))</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">477</span>  <span title="shFunctionOne "class="shFunctionOne">    _remove_boilerplate </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$boilerplates_path</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$_REMOVE_ARG</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">478</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">elif</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="Delimiter "class="Delimiter">((</span><span title="shDblParen "class="shDblParen">_GENERATE_OPTION</span><span title="Delimiter "class="Delimiter">))</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">479</span>  <span title="shFunctionOne "class="shFunctionOne">    _generate_boilerplate </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$boilerplates_path</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$_GENERATE_ARG</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$_GENERATE_ARG2</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">480</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">elif</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="Delimiter "class="Delimiter">((</span><span title="shDblParen "class="shDblParen">_EDIT_OPTION</span><span title="Delimiter "class="Delimiter">))</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">481</span>  <span title="shFunctionOne "class="shFunctionOne">    _edit_boilerplate </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$boilerplates_path</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$_EDIT_ARG</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">482</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">elif</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="Delimiter "class="Delimiter">((</span><span title="shDblParen "class="shDblParen">_PREVIEW_OPTION</span><span title="Delimiter "class="Delimiter">))</span><span title="shOperator "class="shOperator">;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shConditional "class="shConditional">then
</span><span title="LineNr "class="LineNr">483</span>  <span title="shFunctionOne "class="shFunctionOne">    _preview_boilerplate </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$boilerplates_path</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$_PREVIEW_ARG</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">484</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">else
</span><span title="LineNr "class="LineNr">485</span>  <span title="shFunctionOne "class="shFunctionOne">    _list_boilerplates </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$boilerplates_path</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$_LIST_ARG</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$_LIST_FORMAT_ARG</span><span title="shQuote "class="shQuote">&quot;</span><span title="shFunctionOne "class="shFunctionOne"> </span><span title="shQuote "class="shQuote">&quot;</span><span title="shDerefSimple "class="shDerefSimple">$_TREE_LEVEL_ARG</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr">486</span>  <span title="shFunctionOne "class="shFunctionOne">  </span><span title="shConditional "class="shConditional">fi
</span><span title="LineNr "class="LineNr">487</span>  <span title="shFunction "class="shFunction">}
</span><span title="LineNr "class="LineNr">488</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">489</span>  <span title="Normal "class="Normal">_main </span><span title="shQuote "class="shQuote">&quot;</span><span title="PreProc "class="PreProc">${</span><span title="shDerefSpecial "class="shDerefSpecial">@</span><span title="shDerefOp "class="shDerefOp">:-</span><span title="PreProc "class="PreProc">}</span><span title="shQuote "class="shQuote">&quot;
</span><span title="LineNr "class="LineNr last-LineNr">490</span>  <span title="Normal "class="Normal"></span>