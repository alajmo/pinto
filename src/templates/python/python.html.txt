<span title="LineNr "class="LineNr first-LineNr">1</span>  <span title="pythonInclude "class="pythonInclude">import</span><span title="Normal "class="Normal"> os
</span><span title="LineNr "class="LineNr">2</span>  <span title="pythonInclude "class="pythonInclude">import</span><span title="Normal "class="Normal"> re
</span><span title="LineNr "class="LineNr">3</span>  <span title="pythonInclude "class="pythonInclude">import</span><span title="Normal "class="Normal"> click
</span><span title="LineNr "class="LineNr">4</span>  <span title="pythonInclude "class="pythonInclude">from</span><span title="Normal "class="Normal"> prompt_toolkit.shortcuts </span><span title="pythonInclude "class="pythonInclude">import</span><span title="Normal "class="Normal"> print_formatted_text
</span><span title="LineNr "class="LineNr">5</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">6</span>  <span title="Normal "class="Normal">TEMPLATE_DIR &#61; os.path.join(os.path.dirname(__file__), </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">./template</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">)
</span><span title="LineNr "class="LineNr">7</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">8</span>  <span title="pythonStatement "class="pythonStatement">def</span><span title="Normal "class="Normal"> </span><span title="pythonFunction "class="pythonFunction">select_service_and_operation</span><span title="Normal "class="Normal">():
</span><span title="LineNr "class="LineNr">9</span>  <span title="Normal "class="Normal">    service_names &#61; Session().get_available_services()
</span><span title="LineNr "class="LineNr">10</span>  <span title="Normal "class="Normal">    service_completer &#61; WordCompleter(service_names)
</span><span title="LineNr "class="LineNr">11</span>  <span title="Normal "class="Normal">    service_name &#61; prompt(</span><span title="pythonQuotes "class="pythonQuotes">u&#39;</span><span title="pythonString "class="pythonString">Select service: </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">,
</span><span title="LineNr "class="LineNr">12</span>  <span title="Normal "class="Normal">                          completer&#61;service_completer)
</span><span title="LineNr "class="LineNr">13</span>  <span title="Normal "class="Normal">    </span><span title="pythonConditional "class="pythonConditional">if</span><span title="Normal "class="Normal"> service_name </span><span title="pythonOperator "class="pythonOperator">not</span><span title="Normal "class="Normal"> </span><span title="pythonOperator "class="pythonOperator">in</span><span title="Normal "class="Normal"> service_names:
</span><span title="LineNr "class="LineNr">14</span>  <span title="Normal "class="Normal">        click.secho(</span><span title="pythonQuotes "class="pythonQuotes">u&#39;</span><span title="pythonString "class="pythonString">{} is not valid service</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">.format(service_name),
</span><span title="LineNr "class="LineNr">15</span>  <span title="Normal "class="Normal">                    fg&#61;</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">red</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">)
</span><span title="LineNr "class="LineNr">16</span>  <span title="Normal "class="Normal">        </span><span title="pythonException "class="pythonException">raise</span><span title="Normal "class="Normal"> click.Abort()
</span><span title="LineNr "class="LineNr">17</span>  <span title="Normal "class="Normal">    moto_client &#61; get_moto_implementation(service_name)
</span><span title="LineNr "class="LineNr">18</span>  <span title="Normal "class="Normal">    real_client &#61; boto3.client(service_name, region_name&#61;</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">us-east-1</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">)
</span><span title="LineNr "class="LineNr">19</span>  <span title="Normal "class="Normal">    implemented &#61; []
</span><span title="LineNr "class="LineNr">20</span>  <span title="Normal "class="Normal">    not_implemented &#61; []
</span><span title="LineNr "class="LineNr">21</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">22</span>  <span title="Normal "class="Normal">    operation_names &#61; [xform_name(op) </span><span title="pythonRepeat "class="pythonRepeat">for</span><span title="Normal "class="Normal"> op </span><span title="pythonOperator "class="pythonOperator">in
</span><span title="LineNr "class="LineNr">23</span>  <span title="Normal "class="Normal">                       real_client.meta.service_model.operation_names]
</span><span title="LineNr "class="LineNr">24</span>  <span title="Normal "class="Normal">    </span><span title="pythonRepeat "class="pythonRepeat">for</span><span title="Normal "class="Normal"> op </span><span title="pythonOperator "class="pythonOperator">in</span><span title="Normal "class="Normal"> operation_names:
</span><span title="LineNr "class="LineNr">25</span>  <span title="Normal "class="Normal">        </span><span title="pythonConditional "class="pythonConditional">if</span><span title="Normal "class="Normal"> moto_client </span><span title="pythonOperator "class="pythonOperator">and</span><span title="Normal "class="Normal"> op </span><span title="pythonOperator "class="pythonOperator">in</span><span title="Normal "class="Normal"> </span><span title="pythonBuiltin "class="pythonBuiltin">dir</span><span title="Normal "class="Normal">(moto_client):
</span><span title="LineNr "class="LineNr">26</span>  <span title="Normal "class="Normal">            implemented.append(op)
</span><span title="LineNr "class="LineNr">27</span>  <span title="Normal "class="Normal">        </span><span title="pythonConditional "class="pythonConditional">else</span><span title="Normal "class="Normal">:
</span><span title="LineNr "class="LineNr">28</span>  <span title="Normal "class="Normal">            not_implemented.append(op)
</span><span title="LineNr "class="LineNr">29</span>  <span title="Normal "class="Normal">    operation_completer &#61; WordCompleter(operation_names)
</span><span title="LineNr "class="LineNr">30</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">31</span>  <span title="Normal "class="Normal">    click.echo(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">&#61;&#61;Current Implementation Status&#61;&#61;</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">)
</span><span title="LineNr "class="LineNr">32</span>  <span title="Normal "class="Normal">    </span><span title="pythonRepeat "class="pythonRepeat">for</span><span title="Normal "class="Normal"> operation_name </span><span title="pythonOperator "class="pythonOperator">in</span><span title="Normal "class="Normal"> operation_names:
</span><span title="LineNr "class="LineNr">33</span>  <span title="Normal "class="Normal">        check &#61; (</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">X</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal"> </span><span title="pythonConditional "class="pythonConditional">if</span><span title="Normal "class="Normal"> operation_name </span><span title="pythonOperator "class="pythonOperator">in</span><span title="Normal "class="Normal"> implemented </span><span title="pythonConditional "class="pythonConditional">else</span><span title="Normal "class="Normal"> </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString"> </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">)
</span><span title="LineNr "class="LineNr">34</span>  <span title="Normal "class="Normal">        click.secho(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">[{}] {}</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">.format(check, operation_name))
</span><span title="LineNr "class="LineNr">35</span>  <span title="Normal "class="Normal">    click.echo(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">)
</span><span title="LineNr "class="LineNr">36</span>  <span title="Normal "class="Normal">    operation_name &#61; prompt(</span><span title="pythonQuotes "class="pythonQuotes">u&#39;</span><span title="pythonString "class="pythonString">Select Operation: </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">,
</span><span title="LineNr "class="LineNr">37</span>  <span title="Normal "class="Normal">                            completer&#61;operation_completer)
</span><span title="LineNr "class="LineNr">38</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">39</span>  <span title="Normal "class="Normal">    </span><span title="pythonConditional "class="pythonConditional">if</span><span title="Normal "class="Normal"> operation_name </span><span title="pythonOperator "class="pythonOperator">not</span><span title="Normal "class="Normal"> </span><span title="pythonOperator "class="pythonOperator">in</span><span title="Normal "class="Normal"> operation_names:
</span><span title="LineNr "class="LineNr">40</span>  <span title="Normal "class="Normal">        click.secho(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">{} is not valid operation</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">.format(operation_name),
</span><span title="LineNr "class="LineNr">41</span>  <span title="Normal "class="Normal">                    fg&#61;</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">red</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">)
</span><span title="LineNr "class="LineNr">42</span>  <span title="Normal "class="Normal">        </span><span title="pythonException "class="pythonException">raise</span><span title="Normal "class="Normal"> click.Abort()
</span><span title="LineNr "class="LineNr">43</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">44</span>  <span title="Normal "class="Normal">    </span><span title="pythonConditional "class="pythonConditional">if</span><span title="Normal "class="Normal"> operation_name </span><span title="pythonOperator "class="pythonOperator">in</span><span title="Normal "class="Normal"> implemented:
</span><span title="LineNr "class="LineNr">45</span>  <span title="Normal "class="Normal">        click.secho(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">{} is already implemented</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">.format(operation_name),
</span><span title="LineNr "class="LineNr">46</span>  <span title="Normal "class="Normal">                    fg&#61;</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">red</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">)
</span><span title="LineNr "class="LineNr">47</span>  <span title="Normal "class="Normal">        </span><span title="pythonException "class="pythonException">raise</span><span title="Normal "class="Normal"> click.Abort()
</span><span title="LineNr "class="LineNr">48</span>  <span title="Normal "class="Normal">    </span><span title="pythonStatement "class="pythonStatement">return</span><span title="Normal "class="Normal"> (service_name, operation_name)
</span><span title="LineNr "class="LineNr">49</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">50</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">51</span>  <span title="pythonStatement "class="pythonStatement">def</span><span title="Normal "class="Normal"> </span><span title="pythonFunction "class="pythonFunction">append_mock_dict_to_backends_py</span><span title="Normal "class="Normal">(service):
</span><span title="LineNr "class="LineNr">52</span>  <span title="Normal "class="Normal">    path &#61; os.path.join(os.path.dirname(__file__), </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">..</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">, </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">moto</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">,
</span><span title="LineNr "class="LineNr">53</span>  <span title="Normal "class="Normal">                        </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">backends.py</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">)
</span><span title="LineNr "class="LineNr">54</span>  <span title="Normal "class="Normal">    </span><span title="pythonStatement "class="pythonStatement">with</span><span title="Normal "class="Normal"> </span><span title="pythonBuiltin "class="pythonBuiltin">open</span><span title="Normal "class="Normal">(path) </span><span title="pythonStatement "class="pythonStatement">as</span><span title="Normal "class="Normal"> f:
</span><span title="LineNr "class="LineNr">55</span>  <span title="Normal "class="Normal">        lines &#61; [_.replace(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonEscape "class="pythonEscape">\n</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">, </span><span title="pythonQuotes "class="pythonQuotes">&#39;&#39;</span><span title="Normal "class="Normal">) </span><span title="pythonRepeat "class="pythonRepeat">for</span><span title="Normal "class="Normal"> _ </span><span title="pythonOperator "class="pythonOperator">in</span><span title="Normal "class="Normal"> f.readlines()]
</span><span title="LineNr "class="LineNr">56</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">57</span>  <span title="Normal "class="Normal">    </span><span title="pythonConditional "class="pythonConditional">if</span><span title="Normal "class="Normal"> </span><span title="pythonBuiltin "class="pythonBuiltin">any</span><span title="Normal "class="Normal">(_ </span><span title="pythonRepeat "class="pythonRepeat">for</span><span title="Normal "class="Normal"> _ </span><span title="pythonOperator "class="pythonOperator">in</span><span title="Normal "class="Normal"> lines
</span><span title="LineNr "class="LineNr">58</span>  <span title="Normal "class="Normal">           </span><span title="pythonConditional "class="pythonConditional">if</span><span title="Normal "class="Normal"> re.match(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">.*&quot;{}&quot;: {}_backends.*</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">.format(service,
</span><span title="LineNr "class="LineNr">59</span>  <span title="Normal "class="Normal">           service), _)):
</span><span title="LineNr "class="LineNr">60</span>  <span title="Normal "class="Normal">        </span><span title="pythonStatement "class="pythonStatement">return
</span><span title="LineNr "class="LineNr">61</span>  <span title="Normal "class="Normal">    filtered_lines &#61; [_ </span><span title="pythonRepeat "class="pythonRepeat">for</span><span title="Normal "class="Normal"> _ </span><span title="pythonOperator "class="pythonOperator">in</span><span title="Normal "class="Normal"> lines
</span><span title="LineNr "class="LineNr">62</span>  <span title="Normal "class="Normal">                      </span><span title="pythonConditional "class="pythonConditional">if</span><span title="Normal "class="Normal"> re.match(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">.*&quot;.*&quot;:.*_backends.*</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">, _)]
</span><span title="LineNr "class="LineNr">63</span>  <span title="Normal "class="Normal">    last_elem_line_index &#61; lines.index(filtered_lines[-</span><span title="pythonNumber "class="pythonNumber">1</span><span title="Normal "class="Normal">])
</span><span title="LineNr "class="LineNr">64</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">65</span>  <span title="Normal "class="Normal">    new_line &#61; </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">    &quot;{}&quot;: (&quot;{}&quot;, &quot;{}_backends&quot;),</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">.format(service,
</span><span title="LineNr "class="LineNr">66</span>  <span title="Normal "class="Normal">            get_escaped_service(service), get_escaped_service(service))
</span><span title="LineNr "class="LineNr">67</span>  <span title="Normal "class="Normal">    prev_line &#61; lines[last_elem_line_index]
</span><span title="LineNr "class="LineNr">68</span>  <span title="Normal "class="Normal">    </span><span title="pythonConditional "class="pythonConditional">if</span><span title="Normal "class="Normal"> </span><span title="pythonOperator "class="pythonOperator">not</span><span title="Normal "class="Normal"> prev_line.endswith(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">{</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">) </span><span title="pythonOperator "class="pythonOperator">and</span><span title="Normal "class="Normal"> </span><span title="pythonOperator "class="pythonOperator">not</span><span title="Normal "class="Normal"> prev_line.endswith(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">,</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">):
</span><span title="LineNr "class="LineNr">69</span>  <span title="Normal "class="Normal">        lines[last_elem_line_index] +&#61; </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">,</span><span title="pythonQuotes "class="pythonQuotes">&#39;
</span><span title="LineNr "class="LineNr">70</span>  <span title="Normal "class="Normal">    lines.insert(last_elem_line_index + </span><span title="pythonNumber "class="pythonNumber">1</span><span title="Normal "class="Normal">, new_line)
</span><span title="LineNr "class="LineNr">71</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">72</span>  <span title="Normal "class="Normal">    body &#61; </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonEscape "class="pythonEscape">\n</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">.join(lines) + </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonEscape "class="pythonEscape">\n</span><span title="pythonQuotes "class="pythonQuotes">&#39;
</span><span title="LineNr "class="LineNr">73</span>  <span title="Normal "class="Normal">    </span><span title="pythonStatement "class="pythonStatement">with</span><span title="Normal "class="Normal"> </span><span title="pythonBuiltin "class="pythonBuiltin">open</span><span title="Normal "class="Normal">(path, </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">w</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">) </span><span title="pythonStatement "class="pythonStatement">as</span><span title="Normal "class="Normal"> f:
</span><span title="LineNr "class="LineNr">74</span>  <span title="Normal "class="Normal">        f.write(body)
</span><span title="LineNr "class="LineNr">75</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">76</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">77</span>  <span title="pythonStatement "class="pythonStatement">def</span><span title="Normal "class="Normal"> </span><span title="pythonFunction "class="pythonFunction">to_upper_camel_case</span><span title="Normal "class="Normal">(s):
</span><span title="LineNr "class="LineNr">78</span>  <span title="Normal "class="Normal">    </span><span title="pythonStatement "class="pythonStatement">return</span><span title="Normal "class="Normal"> </span><span title="pythonQuotes "class="pythonQuotes">&#39;&#39;</span><span title="Normal "class="Normal">.join([_.title() </span><span title="pythonRepeat "class="pythonRepeat">for</span><span title="Normal "class="Normal"> _ </span><span title="pythonOperator "class="pythonOperator">in</span><span title="Normal "class="Normal"> s.split(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">_</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">)])
</span><span title="LineNr "class="LineNr">79</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">80</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">81</span>  <span title="pythonStatement "class="pythonStatement">def</span><span title="Normal "class="Normal"> </span><span title="pythonFunction "class="pythonFunction">get_operation_name_in_keys</span><span title="Normal "class="Normal">(operation_name, operation_keys):
</span><span title="LineNr "class="LineNr">82</span>  <span title="Normal "class="Normal">    index &#61; [_.lower() </span><span title="pythonRepeat "class="pythonRepeat">for</span><span title="Normal "class="Normal"> _ </span><span title="pythonOperator "class="pythonOperator">in
</span><span title="LineNr "class="LineNr">83</span>  <span title="Normal "class="Normal">             operation_keys].index(operation_name.lower())
</span><span title="LineNr "class="LineNr">84</span>  <span title="Normal "class="Normal">    </span><span title="pythonStatement "class="pythonStatement">return</span><span title="Normal "class="Normal"> operation_keys[index]
</span><span title="LineNr "class="LineNr">85</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">86</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">87</span>  <span title="pythonStatement "class="pythonStatement">def</span><span title="Normal "class="Normal"> </span><span title="pythonFunction "class="pythonFunction">_get_subtree</span><span title="Normal "class="Normal">(
</span><span title="LineNr "class="LineNr">88</span>  <span title="Normal "class="Normal">    name,
</span><span title="LineNr "class="LineNr">89</span>  <span title="Normal "class="Normal">    shape,
</span><span title="LineNr "class="LineNr">90</span>  <span title="Normal "class="Normal">    replace_list,
</span><span title="LineNr "class="LineNr">91</span>  <span title="Normal "class="Normal">    name_prefix&#61;[],
</span><span title="LineNr "class="LineNr">92</span>  <span title="Normal "class="Normal">    ):
</span><span title="LineNr "class="LineNr">93</span>  <span title="Normal "class="Normal">    class_name &#61; shape.__class__.__name__
</span><span title="LineNr "class="LineNr">94</span>  <span title="Normal "class="Normal">    </span><span title="pythonConditional "class="pythonConditional">if</span><span title="Normal "class="Normal"> class_name </span><span title="pythonOperator "class="pythonOperator">in</span><span title="Normal "class="Normal"> (</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">StringShape</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">, </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">Shape</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">):
</span><span title="LineNr "class="LineNr">95</span>  <span title="Normal "class="Normal">        t &#61; etree.Element(name)
</span><span title="LineNr "class="LineNr">96</span>  <span title="Normal "class="Normal">        </span><span title="pythonConditional "class="pythonConditional">if</span><span title="Normal "class="Normal"> name_prefix:
</span><span title="LineNr "class="LineNr">97</span>  <span title="Normal "class="Normal">            t.text &#61; </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">{{ %s.%s }}</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal"> % (name_prefix[-</span><span title="pythonNumber "class="pythonNumber">1</span><span title="Normal "class="Normal">],
</span><span title="LineNr "class="LineNr">98</span>  <span title="Normal "class="Normal">                    to_snake_case(name))
</span><span title="LineNr "class="LineNr">99</span>  <span title="Normal "class="Normal">        </span><span title="pythonConditional "class="pythonConditional">else</span><span title="Normal "class="Normal">:
</span><span title="LineNr "class="LineNr">100</span>  <span title="Normal "class="Normal">            t.text &#61; </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">{{ %s }}</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal"> % to_snake_case(name)
</span><span title="LineNr "class="LineNr">101</span>  <span title="Normal "class="Normal">        </span><span title="pythonStatement "class="pythonStatement">return</span><span title="Normal "class="Normal"> t
</span><span title="LineNr "class="LineNr">102</span>  <span title="Normal "class="Normal">    </span><span title="pythonConditional "class="pythonConditional">elif</span><span title="Normal "class="Normal"> class_name </span><span title="pythonOperator "class="pythonOperator">in</span><span title="Normal "class="Normal"> (</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">ListShape</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">, ):
</span><span title="LineNr "class="LineNr">103</span>  <span title="Normal "class="Normal">        replace_list.append((name, name_prefix))
</span><span title="LineNr "class="LineNr">104</span>  <span title="Normal "class="Normal">        t &#61; etree.Element(name)
</span><span title="LineNr "class="LineNr">105</span>  <span title="Normal "class="Normal">        t_member &#61; etree.Element(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">member</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">)
</span><span title="LineNr "class="LineNr">106</span>  <span title="Normal "class="Normal">        t.append(t_member)
</span><span title="LineNr "class="LineNr">107</span>  <span title="Normal "class="Normal">        </span><span title="pythonRepeat "class="pythonRepeat">for</span><span title="Normal "class="Normal"> (nested_name, nested_shape) </span><span title="pythonOperator "class="pythonOperator">in</span><span title="Normal "class="Normal"> shape.member.members.items():
</span><span title="LineNr "class="LineNr">108</span>  <span title="Normal "class="Normal">            t_member.append(_get_subtree(nested_name, nested_shape,
</span><span title="LineNr "class="LineNr">109</span>  <span title="Normal "class="Normal">                            replace_list, name_prefix
</span><span title="LineNr "class="LineNr">110</span>  <span title="Normal "class="Normal">                            + [singularize(name.lower())]))
</span><span title="LineNr "class="LineNr">111</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">112</span>  <span title="Normal "class="Normal">        </span><span title="pythonStatement "class="pythonStatement">return</span><span title="Normal "class="Normal"> t
</span><span title="LineNr "class="LineNr">113</span>  <span title="Normal "class="Normal">    </span><span title="pythonException "class="pythonException">raise</span><span title="Normal "class="Normal"> </span><span title="pythonExceptions "class="pythonExceptions">ValueError</span><span title="Normal "class="Normal">(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">Not supported Shape</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">)
</span><span title="LineNr "class="LineNr">114</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">115</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">116</span>  <span title="pythonStatement "class="pythonStatement">def</span><span title="Normal "class="Normal"> </span><span title="pythonFunction "class="pythonFunction">get_response_query_template</span><span title="Normal "class="Normal">(service, operation):
</span><span title="LineNr "class="LineNr">117</span>  <span title="Normal "class="Normal">    </span><span title="pythonTripleQuotes "class="pythonTripleQuotes">&quot;&quot;&quot;</span><span title="pythonString "class="pythonString">refers to definition of API in botocore, and autogenerates template
</span><span title="LineNr "class="LineNr">118</span>  <span title="pythonString "class="pythonString">    Assume that response format is xml when protocol is query
</span><span title="LineNr "class="LineNr">119</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">120</span>  <span title="pythonString "class="pythonString">    You can see example of elbv2 from link below.
</span><span title="LineNr "class="LineNr">121</span>  <span title="pythonString "class="pythonString">      https://github.com/boto/botocore/blob/develop/botocore/data/elbv2/2015-12-01/service-2.json
</span><span title="LineNr "class="LineNr">122</span>  <span title="pythonString "class="pythonString">    </span><span title="pythonTripleQuotes "class="pythonTripleQuotes">&quot;&quot;&quot;
</span><span title="LineNr "class="LineNr">123</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">124</span>  <span title="Normal "class="Normal">    client &#61; boto3.client(service)
</span><span title="LineNr "class="LineNr">125</span>  <span title="Normal "class="Normal">    aws_operation_name &#61; </span><span title="pythonEscape "class="pythonEscape">\
</span><span title="LineNr "class="LineNr">126</span>  <span title="Normal "class="Normal">        get_operation_name_in_keys(to_upper_camel_case(operation),
</span><span title="LineNr "class="LineNr">127</span>  <span title="Normal "class="Normal">                                   </span><span title="pythonBuiltin "class="pythonBuiltin">list</span><span title="Normal "class="Normal">(client._service_model._service_description[</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">operations</span><span title="pythonQuotes "class="pythonQuotes">&#39;
</span><span title="LineNr "class="LineNr">128</span>  <span title="Normal "class="Normal">                                   ].keys()))
</span><span title="LineNr "class="LineNr">129</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">130</span>  <span title="Normal "class="Normal">    op_model &#61; client._service_model.operation_model(aws_operation_name)
</span><span title="LineNr "class="LineNr">131</span>  <span title="Normal "class="Normal">    result_wrapper &#61; op_model.output_shape.serialization[</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">resultWrapper</span><span title="pythonQuotes "class="pythonQuotes">&#39;
</span><span title="LineNr "class="LineNr">132</span>  <span title="Normal "class="Normal">            ]
</span><span title="LineNr "class="LineNr">133</span>  <span title="Normal "class="Normal">    response_wrapper &#61; result_wrapper.replace(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">Result</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">, </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">Response</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">)
</span><span title="LineNr "class="LineNr">134</span>  <span title="Normal "class="Normal">    metadata &#61; op_model.metadata
</span><span title="LineNr "class="LineNr">135</span>  <span title="Normal "class="Normal">    xml_namespace &#61; metadata[</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">xmlNamespace</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">]
</span><span title="LineNr "class="LineNr">136</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">137</span>  <span title="Normal "class="Normal">    </span><span title="pythonComment "class="pythonComment"># build xml tree
</span><span title="LineNr "class="LineNr">138</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">139</span>  <span title="Normal "class="Normal">    t_root &#61; etree.Element(response_wrapper, xmlns&#61;xml_namespace)
</span><span title="LineNr "class="LineNr">140</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">141</span>  <span title="Normal "class="Normal">    </span><span title="pythonComment "class="pythonComment"># build metadata
</span><span title="LineNr "class="LineNr">142</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">143</span>  <span title="Normal "class="Normal">    t_metadata &#61; etree.Element(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">ResponseMetadata</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">)
</span><span title="LineNr "class="LineNr">144</span>  <span title="Normal "class="Normal">    t_request_id &#61; etree.Element(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">RequestId</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">)
</span><span title="LineNr "class="LineNr">145</span>  <span title="Normal "class="Normal">    t_request_id.text &#61; </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">1549581b-12b7-11e3-895e-1334aEXAMPLE</span><span title="pythonQuotes "class="pythonQuotes">&#39;
</span><span title="LineNr "class="LineNr">146</span>  <span title="Normal "class="Normal">    t_metadata.append(t_request_id)
</span><span title="LineNr "class="LineNr">147</span>  <span title="Normal "class="Normal">    t_root.append(t_metadata)
</span><span title="LineNr "class="LineNr">148</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">149</span>  <span title="Normal "class="Normal">    </span><span title="pythonComment "class="pythonComment"># build result
</span><span title="LineNr "class="LineNr">150</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">151</span>  <span title="Normal "class="Normal">    t_result &#61; etree.Element(result_wrapper)
</span><span title="LineNr "class="LineNr">152</span>  <span title="Normal "class="Normal">    outputs &#61; op_model.output_shape.members
</span><span title="LineNr "class="LineNr">153</span>  <span title="Normal "class="Normal">    replace_list &#61; []
</span><span title="LineNr "class="LineNr">154</span>  <span title="Normal "class="Normal">    </span><span title="pythonRepeat "class="pythonRepeat">for</span><span title="Normal "class="Normal"> (output_name, output_shape) </span><span title="pythonOperator "class="pythonOperator">in</span><span title="Normal "class="Normal"> outputs.items():
</span><span title="LineNr "class="LineNr">155</span>  <span title="Normal "class="Normal">        t_result.append(_get_subtree(output_name, output_shape,
</span><span title="LineNr "class="LineNr">156</span>  <span title="Normal "class="Normal">                        replace_list))
</span><span title="LineNr "class="LineNr">157</span>  <span title="Normal "class="Normal">    t_root.append(t_result)
</span><span title="LineNr "class="LineNr">158</span>  <span title="Normal "class="Normal">    xml_body &#61; etree.tostring(t_root, pretty_print&#61;</span><span title="pythonBuiltin "class="pythonBuiltin">True</span><span title="Normal "class="Normal">).decode(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">utf-8</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">)
</span><span title="LineNr "class="LineNr">159</span>  <span title="Normal "class="Normal">    xml_body_lines &#61; xml_body.splitlines()
</span><span title="LineNr "class="LineNr">160</span>  <span title="Normal "class="Normal">    </span><span title="pythonRepeat "class="pythonRepeat">for</span><span title="Normal "class="Normal"> replace </span><span title="pythonOperator "class="pythonOperator">in</span><span title="Normal "class="Normal"> replace_list:
</span><span title="LineNr "class="LineNr">161</span>  <span title="Normal "class="Normal">        name &#61; replace[</span><span title="pythonNumber "class="pythonNumber">0</span><span title="Normal "class="Normal">]
</span><span title="LineNr "class="LineNr">162</span>  <span title="Normal "class="Normal">        prefix &#61; replace[</span><span title="pythonNumber "class="pythonNumber">1</span><span title="Normal "class="Normal">]
</span><span title="LineNr "class="LineNr">163</span>  <span title="Normal "class="Normal">        singular_name &#61; singularize(name)
</span><span title="LineNr "class="LineNr">164</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">165</span>  <span title="Normal "class="Normal">        start_tag &#61; </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">&lt;%s&gt;</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal"> % name
</span><span title="LineNr "class="LineNr">166</span>  <span title="Normal "class="Normal">        iter_name &#61; (</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">{}.{}</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">.format(prefix[-</span><span title="pythonNumber "class="pythonNumber">1</span><span title="Normal "class="Normal">],
</span><span title="LineNr "class="LineNr">167</span>  <span title="Normal "class="Normal">                     name.lower()) </span><span title="pythonConditional "class="pythonConditional">if</span><span title="Normal "class="Normal"> prefix </span><span title="pythonConditional "class="pythonConditional">else</span><span title="Normal "class="Normal"> name.lower())
</span><span title="LineNr "class="LineNr">168</span>  <span title="Normal "class="Normal">        loop_start &#61; </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">{%% for %s in %s %%}</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal"> % (singular_name.lower(),
</span><span title="LineNr "class="LineNr">169</span>  <span title="Normal "class="Normal">                iter_name)
</span><span title="LineNr "class="LineNr">170</span>  <span title="Normal "class="Normal">        end_tag &#61; </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">&lt;/%s&gt;</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal"> % name
</span><span title="LineNr "class="LineNr">171</span>  <span title="Normal "class="Normal">        loop_end &#61; </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">{{ endfor }}</span><span title="pythonQuotes "class="pythonQuotes">&#39;
</span><span title="LineNr "class="LineNr">172</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">173</span>  <span title="Normal "class="Normal">        start_tag_indexes &#61; [i </span><span title="pythonRepeat "class="pythonRepeat">for</span><span title="Normal "class="Normal"> (i, l) </span><span title="pythonOperator "class="pythonOperator">in</span><span title="Normal "class="Normal"> </span><span title="pythonBuiltin "class="pythonBuiltin">enumerate</span><span title="Normal "class="Normal">(xml_body_lines)
</span><span title="LineNr "class="LineNr">174</span>  <span title="Normal "class="Normal">                             </span><span title="pythonConditional "class="pythonConditional">if</span><span title="Normal "class="Normal"> start_tag </span><span title="pythonOperator "class="pythonOperator">in</span><span title="Normal "class="Normal"> l]
</span><span title="LineNr "class="LineNr">175</span>  <span title="Normal "class="Normal">        </span><span title="pythonConditional "class="pythonConditional">if</span><span title="Normal "class="Normal"> </span><span title="pythonBuiltin "class="pythonBuiltin">len</span><span title="Normal "class="Normal">(start_tag_indexes) !&#61; </span><span title="pythonNumber "class="pythonNumber">1</span><span title="Normal "class="Normal">:
</span><span title="LineNr "class="LineNr">176</span>  <span title="Normal "class="Normal">            </span><span title="pythonException "class="pythonException">raise</span><span title="Normal "class="Normal"> </span><span title="pythonExceptions "class="pythonExceptions">Exception</span><span title="Normal "class="Normal">(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">tag %s not found in response body</span><span title="pythonQuotes "class="pythonQuotes">&#39;
</span><span title="LineNr "class="LineNr">177</span>  <span title="Normal "class="Normal">                            % start_tag)
</span><span title="LineNr "class="LineNr">178</span>  <span title="Normal "class="Normal">        start_tag_index &#61; start_tag_indexes[</span><span title="pythonNumber "class="pythonNumber">0</span><span title="Normal "class="Normal">]
</span><span title="LineNr "class="LineNr">179</span>  <span title="Normal "class="Normal">        xml_body_lines.insert(start_tag_index + </span><span title="pythonNumber "class="pythonNumber">1</span><span title="Normal "class="Normal">, loop_start)
</span><span title="LineNr "class="LineNr">180</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">181</span>  <span title="Normal "class="Normal">        end_tag_indexes &#61; [i </span><span title="pythonRepeat "class="pythonRepeat">for</span><span title="Normal "class="Normal"> (i, l) </span><span title="pythonOperator "class="pythonOperator">in</span><span title="Normal "class="Normal"> </span><span title="pythonBuiltin "class="pythonBuiltin">enumerate</span><span title="Normal "class="Normal">(xml_body_lines)
</span><span title="LineNr "class="LineNr">182</span>  <span title="Normal "class="Normal">                           </span><span title="pythonConditional "class="pythonConditional">if</span><span title="Normal "class="Normal"> end_tag </span><span title="pythonOperator "class="pythonOperator">in</span><span title="Normal "class="Normal"> l]
</span><span title="LineNr "class="LineNr">183</span>  <span title="Normal "class="Normal">        </span><span title="pythonConditional "class="pythonConditional">if</span><span title="Normal "class="Normal"> </span><span title="pythonBuiltin "class="pythonBuiltin">len</span><span title="Normal "class="Normal">(end_tag_indexes) !&#61; </span><span title="pythonNumber "class="pythonNumber">1</span><span title="Normal "class="Normal">:
</span><span title="LineNr "class="LineNr">184</span>  <span title="Normal "class="Normal">            </span><span title="pythonException "class="pythonException">raise</span><span title="Normal "class="Normal"> </span><span title="pythonExceptions "class="pythonExceptions">Exception</span><span title="Normal "class="Normal">(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">tag %s not found in response body</span><span title="pythonQuotes "class="pythonQuotes">&#39;
</span><span title="LineNr "class="LineNr">185</span>  <span title="Normal "class="Normal">                            % end_tag)
</span><span title="LineNr "class="LineNr">186</span>  <span title="Normal "class="Normal">        end_tag_index &#61; end_tag_indexes[</span><span title="pythonNumber "class="pythonNumber">0</span><span title="Normal "class="Normal">]
</span><span title="LineNr "class="LineNr">187</span>  <span title="Normal "class="Normal">        xml_body_lines.insert(end_tag_index, loop_end)
</span><span title="LineNr "class="LineNr">188</span>  <span title="Normal "class="Normal">    xml_body &#61; </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonEscape "class="pythonEscape">\n</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">.join(xml_body_lines)
</span><span title="LineNr "class="LineNr">189</span>  <span title="Normal "class="Normal">    body &#61; </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonEscape "class="pythonEscape">\n</span><span title="pythonString "class="pythonString">{}_TEMPLATE &#61; &quot;&quot;&quot;{}&quot;&quot;&quot;</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">.format(operation.upper(),
</span><span title="LineNr "class="LineNr">190</span>  <span title="Normal "class="Normal">            xml_body)
</span><span title="LineNr "class="LineNr">191</span>  <span title="Normal "class="Normal">    </span><span title="pythonStatement "class="pythonStatement">return</span><span title="Normal "class="Normal"> body
</span><span title="LineNr "class="LineNr">192</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">193</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">194</span>  <span title="pythonStatement "class="pythonStatement">def</span><span title="Normal "class="Normal"> </span><span title="pythonFunction "class="pythonFunction">get_escaped_service</span><span title="Normal "class="Normal">(service):
</span><span title="LineNr "class="LineNr">195</span>  <span title="Normal "class="Normal">    </span><span title="pythonStatement "class="pythonStatement">return</span><span title="Normal "class="Normal"> service.replace(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">-</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">, </span><span title="pythonQuotes "class="pythonQuotes">&#39;&#39;</span><span title="Normal "class="Normal">)
</span><span title="LineNr "class="LineNr">196</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">197</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">198</span>  <span title="pythonStatement "class="pythonStatement">def</span><span title="Normal "class="Normal"> </span><span title="pythonFunction "class="pythonFunction">get_lib_dir</span><span title="Normal "class="Normal">(service):
</span><span title="LineNr "class="LineNr">199</span>  <span title="Normal "class="Normal">    </span><span title="pythonStatement "class="pythonStatement">return</span><span title="Normal "class="Normal"> os.path.join(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">moto</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">, get_escaped_service(service))
</span><span title="LineNr "class="LineNr">200</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">201</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">202</span>  <span title="pythonStatement "class="pythonStatement">def</span><span title="Normal "class="Normal"> </span><span title="pythonFunction "class="pythonFunction">get_test_dir</span><span title="Normal "class="Normal">(service):
</span><span title="LineNr "class="LineNr">203</span>  <span title="Normal "class="Normal">    </span><span title="pythonStatement "class="pythonStatement">return</span><span title="Normal "class="Normal"> os.path.join(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">tests</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">,
</span><span title="LineNr "class="LineNr">204</span>  <span title="Normal "class="Normal">                        </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">test_{}</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">.format(get_escaped_service(service)))
</span><span title="LineNr "class="LineNr">205</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">206</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">207</span>  <span title="pythonDecorator "class="pythonDecorator">@</span><span title="pythonDecoratorName "class="pythonDecoratorName">click.command</span><span title="Normal "class="Normal">()
</span><span title="LineNr "class="LineNr">208</span>  <span title="pythonStatement "class="pythonStatement">def</span><span title="Normal "class="Normal"> </span><span title="pythonFunction "class="pythonFunction">main</span><span title="Normal "class="Normal">():
</span><span title="LineNr "class="LineNr">209</span>  <span title="Normal "class="Normal">    (service, operation) &#61; select_service_and_operation()
</span><span title="LineNr "class="LineNr">210</span>  <span title="Normal "class="Normal">    api_protocol &#61; </span><span title="pythonEscape "class="pythonEscape">\
</span><span title="LineNr "class="LineNr">211</span>  <span title="Normal "class="Normal">        boto3.client(service)._service_model.metadata[</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">protocol</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">]
</span><span title="LineNr "class="LineNr">212</span>  <span title="Normal "class="Normal">    initialize_service(service, operation, api_protocol)
</span><span title="LineNr "class="LineNr">213</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">214</span>  <span title="Normal "class="Normal">    </span><span title="pythonConditional "class="pythonConditional">if</span><span title="Normal "class="Normal"> api_protocol </span><span title="pythonOperator "class="pythonOperator">in</span><span title="Normal "class="Normal"> [</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">query</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">, </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">json</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">, </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">rest-json</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">]:
</span><span title="LineNr "class="LineNr">215</span>  <span title="Normal "class="Normal">        insert_codes(service, operation, api_protocol)
</span><span title="LineNr "class="LineNr">216</span>  <span title="Normal "class="Normal">    </span><span title="pythonConditional "class="pythonConditional">else</span><span title="Normal "class="Normal">:
</span><span title="LineNr "class="LineNr">217</span>  <span title="Normal "class="Normal">        print_progress(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">skip inserting code</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">,
</span><span title="LineNr "class="LineNr">218</span>  <span title="Normal "class="Normal">                       </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">api protocol &quot;{}&quot; is not supported</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">.format(api_protocol),
</span><span title="LineNr "class="LineNr">219</span>  <span title="Normal "class="Normal">                       </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">yellow</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">)
</span><span title="LineNr "class="LineNr">220</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">221</span>  <span title="Normal "class="Normal">    click.echo(</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">You will still need to add the mock into &quot;__init__.py&quot;</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">.format(service))
</span><span title="LineNr "class="LineNr">222</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">223</span>  <span title="pythonConditional "class="pythonConditional">if</span><span title="Normal "class="Normal"> __name__ &#61;&#61; </span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="pythonString "class="pythonString">__main__</span><span title="pythonQuotes "class="pythonQuotes">&#39;</span><span title="Normal "class="Normal">:
</span><span title="LineNr "class="LineNr last-LineNr">224</span>  <span title="Normal "class="Normal">    main()</span>