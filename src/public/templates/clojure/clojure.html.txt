<span title="LineNr "class="LineNr first-LineNr">1</span>  <span title="clojureParen "class="clojureParen">(</span><span title="clojureMacro "class="clojureMacro">ns</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">phlegmaticprogrammer.btree</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">2</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">3</span>  <span title="clojureParen "class="clojureParen">(</span><span title="clojureDefine "class="clojureDefine">defrecord</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">M-Node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">leaf</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureParen "class="clojureParen">])</span><span title="Normal "class="Normal"> </span><span title="clojureComment "class="clojureComment">; node in memory
</span><span title="LineNr "class="LineNr">4</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">5</span>  <span title="clojureParen "class="clojureParen">(</span><span title="clojureDefine "class="clojureDefine">defn</span><span title="clojureSymbol "class="clojureSymbol">-</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">violation</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">s</span><span title="clojureParen "class="clojureParen">]
</span><span title="LineNr "class="LineNr">6</span>  <span title="clojureSexp "class="clojureSexp">  </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureException "class="clojureException">throw</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">RuntimeException.</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">s</span><span title="clojureParen "class="clojureParen">)))
</span><span title="LineNr "class="LineNr">7</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">8</span>  <span title="clojureParen "class="clojureParen">(</span><span title="clojureDefine "class="clojureDefine">defn</span><span title="clojureSymbol "class="clojureSymbol">-</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">vec</span><span title="clojureSymbol "class="clojureSymbol">-concat</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureVarArg "class="clojureVarArg">&amp;</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">items</span><span title="clojureParen "class="clojureParen">]</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">vec</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">apply</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">concat</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">items</span><span title="clojureParen "class="clojureParen">)))
</span><span title="LineNr "class="LineNr">9</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">10</span>  <span title="clojureParen "class="clojureParen">(</span><span title="clojureDefine "class="clojureDefine">defn</span><span title="clojureSymbol "class="clojureSymbol">-</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">vec</span><span title="clojureSymbol "class="clojureSymbol">-replace</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">v</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">j</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">coll</span><span title="clojureParen "class="clojureParen">]</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">vec</span><span title="clojureSymbol "class="clojureSymbol">-concat</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">subvec</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">v</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">0</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">coll</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">subvec</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">v</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">j</span><span title="clojureParen "class="clojureParen">)))
</span><span title="LineNr "class="LineNr">11</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">12</span>  <span title="clojureParen "class="clojureParen">(</span><span title="clojureDefine "class="clojureDefine">defprotocol</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">BTreePool
</span><span title="LineNr "class="LineNr">13</span>  <span title="clojureSexp "class="clojureSexp">  </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-empty</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">this</span><span title="clojureParen "class="clojureParen">])
</span><span title="LineNr "class="LineNr">14</span>  <span title="clojureSexp "class="clojureSexp">  </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-insert</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">this</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">btree</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">x</span><span title="clojureParen "class="clojureParen">])
</span><span title="LineNr "class="LineNr">15</span>  <span title="clojureSexp "class="clojureSexp">  </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-delete</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">this</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">btree</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureParen "class="clojureParen">])
</span><span title="LineNr "class="LineNr">16</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">17</span>  <span title="clojureParen "class="clojureParen">(</span><span title="clojureDefine "class="clojureDefine">defn</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">btree-pool
</span><span title="LineNr "class="LineNr">18</span>  <span title="clojureSexp "class="clojureSexp">  </span><span title="clojureStringDelimiter "class="clojureStringDelimiter">&quot;</span><span title="clojureString "class="clojureString">Creates a BTreePool instance.
</span><span title="LineNr "class="LineNr">19</span>  <span title="clojureString "class="clojureString">   param-t        minimum degree of B-tree, &gt;&#61; 2
</span><span title="LineNr "class="LineNr">20</span>  <span title="clojureString "class="clojureString">   param-cmp      comparator (returning &lt; 0, &#61; 0 or &gt; 0), must be able to compare:
</span><span title="LineNr "class="LineNr">21</span>  <span title="clojureString "class="clojureString">                    content with content
</span><span title="LineNr "class="LineNr">22</span>  <span title="clojureString "class="clojureString">                    key with key
</span><span title="LineNr "class="LineNr">23</span>  <span title="clojureString "class="clojureString">                    content with key and vice versa
</span><span title="LineNr "class="LineNr">24</span>  <span title="clojureString "class="clojureString">   store-node     convert M-Node into an address
</span><span title="LineNr "class="LineNr">25</span>  <span title="clojureString "class="clojureString">   load-node      convert address into an M-Node</span><span title="clojureStringDelimiter "class="clojureStringDelimiter">&quot;
</span><span title="LineNr "class="LineNr">26</span>  <span title="clojureParen "class="clojureParen">[
</span><span title="LineNr "class="LineNr">27</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">28</span>  <span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">store-m-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">leaf</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureParen "class="clojureParen">]
</span><span title="LineNr "class="LineNr">29</span>  <span title="clojureSexp "class="clojureSexp">   </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">store-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">M-Node.</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">leaf</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureParen "class="clojureParen">)))
</span><span title="LineNr "class="LineNr">30</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">31</span>  <span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-empty-</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[]</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">store-m-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureBoolean "class="clojureBoolean">true</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[]))
</span><span title="LineNr "class="LineNr">32</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">33</span>  <span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-split-child</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">parent-content</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">child-index</span><span title="clojureParen "class="clojureParen">]
</span><span title="LineNr "class="LineNr">34</span>  <span title="clojureSexp "class="clojureSexp">   </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">let</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">t</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">param-t
</span><span title="LineNr "class="LineNr">35</span>  <span title="clojureVector "class="clojureVector">         </span><span title="clojureParen "class="clojureParen">{</span><span title="clojureSymbol "class="clojureSymbol">child-leaf</span><span title="clojureMap "class="clojureMap"> :</span><span title="clojureSymbol "class="clojureSymbol">leaf</span><span title="clojureMap "class="clojureMap"> </span><span title="clojureSymbol "class="clojureSymbol">child-content</span><span title="clojureMap "class="clojureMap"> :</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureParen "class="clojureParen">}</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">child
</span><span title="LineNr "class="LineNr">36</span>  <span title="clojureVector "class="clojureVector">         </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureSymbol "class="clojureSymbol">-index</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">if</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child-leaf</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">-</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">t</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">-</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">*</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">2</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">t</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">))
</span><span title="LineNr "class="LineNr">37</span>  <span title="clojureVector "class="clojureVector">         </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">child-content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureSymbol "class="clojureSymbol">-index</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">38</span>  <span title="clojureVector "class="clojureVector">         </span><span title="clojureSymbol "class="clojureSymbol">left-child-content</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">subvec</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child-content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">0</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureSymbol "class="clojureSymbol">-index</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">39</span>  <span title="clojureVector "class="clojureVector">         </span><span title="clojureSymbol "class="clojureSymbol">left-child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">M-Node.</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child-leaf</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">left-child-content</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">40</span>  <span title="clojureVector "class="clojureVector">         </span><span title="clojureSymbol "class="clojureSymbol">right-child-content</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">subvec</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child-content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">+</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureSymbol "class="clojureSymbol">-index</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">))
</span><span title="LineNr "class="LineNr">41</span>  <span title="clojureVector "class="clojureVector">         </span><span title="clojureSymbol "class="clojureSymbol">right-child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">M-Node.</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child-leaf</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">right-child-content</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">42</span>  <span title="clojureVector "class="clojureVector">         </span><span title="clojureParen "class="clojureParen">]
</span><span title="LineNr "class="LineNr">43</span>  <span title="clojureSexp "class="clojureSexp">     </span><span title="clojureParen "class="clojureParen">{</span><span title="clojureMap "class="clojureMap">:</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureMap "class="clojureMap"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">vec</span><span title="clojureSymbol "class="clojureSymbol">-concat
</span><span title="LineNr "class="LineNr">44</span>  <span title="clojureSexp "class="clojureSexp">                </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">subvec</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">parent-content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">0</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child-index</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">45</span>  <span title="clojureSexp "class="clojureSexp">                </span><span title="clojureParen "class="clojureParen">[(</span><span title="clojureSymbol "class="clojureSymbol">store-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">left-child</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">store-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">right-child</span><span title="clojureParen "class="clojureParen">)]
</span><span title="LineNr "class="LineNr">46</span>  <span title="clojureSexp "class="clojureSexp">                </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">subvec</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">parent-content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">+</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child-index</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">)))
</span><span title="LineNr "class="LineNr">47</span>  <span title="clojureMap "class="clojureMap">      :</span><span title="clojureSymbol "class="clojureSymbol">left-child</span><span title="clojureMap "class="clojureMap"> </span><span title="clojureSymbol "class="clojureSymbol">left-child
</span><span title="LineNr "class="LineNr">48</span>  <span title="clojureMap "class="clojureMap">      :</span><span title="clojureSymbol "class="clojureSymbol">right-child</span><span title="clojureMap "class="clojureMap"> </span><span title="clojureSymbol "class="clojureSymbol">right-child</span><span title="clojureParen "class="clojureParen">}))
</span><span title="LineNr "class="LineNr">49</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">50</span>  <span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-is-full</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[{</span><span title="clojureSymbol "class="clojureSymbol">btree-leaf</span><span title="clojureMap "class="clojureMap"> :</span><span title="clojureSymbol "class="clojureSymbol">leaf</span><span title="clojureMap "class="clojureMap"> </span><span title="clojureSymbol "class="clojureSymbol">btree-content</span><span title="clojureMap "class="clojureMap"> :</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureParen "class="clojureParen">}]
</span><span title="LineNr "class="LineNr">51</span>  <span title="clojureSexp "class="clojureSexp">   </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">if</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">btree-leaf
</span><span title="LineNr "class="LineNr">52</span>  <span title="clojureSexp "class="clojureSexp">     </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">&#61;</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">count</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">btree-content</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">-</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">*</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">2</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">param-t</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">))
</span><span title="LineNr "class="LineNr">53</span>  <span title="clojureSexp "class="clojureSexp">     </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">&#61;</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">count</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">btree-content</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">-</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">*</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">4</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">param-t</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">))))
</span><span title="LineNr "class="LineNr">54</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">55</span>  <span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-insert-nonfull</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">m-node</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureParen "class="clojureParen">]
</span><span title="LineNr "class="LineNr">56</span>  <span title="clojureSexp "class="clojureSexp">   </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">let</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSexp "class="clojureSexp">:</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">m-node</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">57</span>  <span title="clojureVector "class="clojureVector">         </span><span title="clojureFunc "class="clojureFunc">count</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">count</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureParen "class="clojureParen">)]
</span><span title="LineNr "class="LineNr">58</span>  <span title="clojureSexp "class="clojureSexp">     </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">if</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSexp "class="clojureSexp">:</span><span title="clojureSymbol "class="clojureSymbol">leaf</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">m-node</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">59</span>  <span title="clojureSexp "class="clojureSexp">       </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">loop</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureNumber "class="clojureNumber">0</span><span title="clojureParen "class="clojureParen">]
</span><span title="LineNr "class="LineNr">60</span>  <span title="clojureSexp "class="clojureSexp">         </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">if</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">&lt;</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">count</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">61</span>  <span title="clojureSexp "class="clojureSexp">           </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">let</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">c</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">param-cmp</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureParen "class="clojureParen">))]
</span><span title="LineNr "class="LineNr">62</span>  <span title="clojureSexp "class="clojureSexp">             </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureCond "class="clojureCond">cond
</span><span title="LineNr "class="LineNr">63</span>  <span title="clojureSexp "class="clojureSexp">               </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">&#61;</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">c</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">0</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">store-m-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureBoolean "class="clojureBoolean">true</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">assoc</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureParen "class="clojureParen">))
</span><span title="LineNr "class="LineNr">64</span>  <span title="clojureSexp "class="clojureSexp">               </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">&lt;</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">c</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">0</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">store-m-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureBoolean "class="clojureBoolean">true</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">vec</span><span title="clojureSymbol "class="clojureSymbol">-replace</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureParen "class="clojureParen">]))
</span><span title="LineNr "class="LineNr">65</span>  <span title="clojureSexp "class="clojureSexp">               </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">&gt;</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">c</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">0</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">recur</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">+</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">))))
</span><span title="LineNr "class="LineNr">66</span>  <span title="clojureSexp "class="clojureSexp">           </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">store-m-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureBoolean "class="clojureBoolean">true</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">vec</span><span title="clojureSymbol "class="clojureSymbol">-concat</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureParen "class="clojureParen">]))))
</span><span title="LineNr "class="LineNr">67</span>  <span title="clojureSexp "class="clojureSexp">       </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">loop</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">]
</span><span title="LineNr "class="LineNr">68</span>  <span title="clojureSexp "class="clojureSexp">         </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">if</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">&lt;</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">count</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">69</span>  <span title="clojureSexp "class="clojureSexp">           </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">let</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">c</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">param-cmp</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureParen "class="clojureParen">))]
</span><span title="LineNr "class="LineNr">70</span>  <span title="clojureSexp "class="clojureSexp">             </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureCond "class="clojureCond">cond
</span><span title="LineNr "class="LineNr">71</span>  <span title="clojureSexp "class="clojureSexp">               </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">&#61;</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">c</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">0</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">store-m-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureBoolean "class="clojureBoolean">false</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">assoc</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureParen "class="clojureParen">))
</span><span title="LineNr "class="LineNr">72</span>  <span title="clojureSexp "class="clojureSexp">               </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">&lt;</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">c</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">0</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">store-m-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureBoolean "class="clojureBoolean">false</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-insert-into-child</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">-</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureParen "class="clojureParen">))
</span><span title="LineNr "class="LineNr">73</span>  <span title="clojureSexp "class="clojureSexp">               </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">&gt;</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">c</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">0</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">recur</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">+</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">2</span><span title="clojureParen "class="clojureParen">))))
</span><span title="LineNr "class="LineNr">74</span>  <span title="clojureSexp "class="clojureSexp">           </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">store-m-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureBoolean "class="clojureBoolean">false</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-insert-into-child</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">-</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">count</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureParen "class="clojureParen">)))))))
</span><span title="LineNr "class="LineNr">75</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">76</span>  <span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-insert-into-child</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">pos</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureParen "class="clojureParen">]
</span><span title="LineNr "class="LineNr">77</span>  <span title="clojureSexp "class="clojureSexp">   </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">let</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">load</span><span title="clojureSymbol "class="clojureSymbol">-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">pos</span><span title="clojureParen "class="clojureParen">))]
</span><span title="LineNr "class="LineNr">78</span>  <span title="clojureSexp "class="clojureSexp">     </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">if</span><span title="clojureSymbol "class="clojureSymbol">-not</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-is-full</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">79</span>  <span title="clojureSexp "class="clojureSexp">       </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">vec</span><span title="clojureSymbol "class="clojureSymbol">-replace</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">pos</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">+</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">pos</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[(</span><span title="clojureSymbol "class="clojureSymbol">btree-insert-nonfull</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureParen "class="clojureParen">)])
</span><span title="LineNr "class="LineNr">80</span>  <span title="clojureSexp "class="clojureSexp">       </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">let</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[{</span><span title="clojureSpecial "class="clojureSpecial">new</span><span title="clojureSymbol "class="clojureSymbol">-content</span><span title="clojureMap "class="clojureMap"> :</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureMap "class="clojureMap"> </span><span title="clojureSymbol "class="clojureSymbol">left-child</span><span title="clojureMap "class="clojureMap"> :</span><span title="clojureSymbol "class="clojureSymbol">left-child</span><span title="clojureMap "class="clojureMap"> </span><span title="clojureSymbol "class="clojureSymbol">right-child</span><span title="clojureMap "class="clojureMap"> :</span><span title="clojureSymbol "class="clojureSymbol">right-child</span><span title="clojureParen "class="clojureParen">}
</span><span title="LineNr "class="LineNr">81</span>  <span title="clojureVector "class="clojureVector">             </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-split-child</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">pos</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">82</span>  <span title="clojureVector "class="clojureVector">             </span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">+</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">pos</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">83</span>  <span title="clojureVector "class="clojureVector">             </span><span title="clojureSymbol "class="clojureSymbol">c</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">param-cmp</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">new</span><span title="clojureSymbol "class="clojureSymbol">-content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureParen "class="clojureParen">))]
</span><span title="LineNr "class="LineNr">84</span>  <span title="clojureSexp "class="clojureSexp">         </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">if</span><span title="clojureSymbol "class="clojureSymbol">-not</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">&#61;</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">c</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">0</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">85</span>  <span title="clojureSexp "class="clojureSexp">           </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">assoc</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSpecial "class="clojureSpecial">new</span><span title="clojureSymbol "class="clojureSymbol">-content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureParen "class="clojureParen">))))))
</span><span title="LineNr "class="LineNr">86</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">87</span>  <span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-insert-</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">s-node</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureParen "class="clojureParen">]
</span><span title="LineNr "class="LineNr">88</span>  <span title="clojureSexp "class="clojureSexp">   </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">let</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">m-node</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">load</span><span title="clojureSymbol "class="clojureSymbol">-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">s-node</span><span title="clojureParen "class="clojureParen">)]
</span><span title="LineNr "class="LineNr">89</span>  <span title="clojureSexp "class="clojureSexp">     </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">if</span><span title="clojureSymbol "class="clojureSymbol">-not</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-is-full</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">m-node</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">90</span>  <span title="clojureSexp "class="clojureSexp">       </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-insert-nonfull</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">m-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">91</span>  <span title="clojureSexp "class="clojureSexp">       </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">let</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[{[</span><span title="clojureSymbol "class="clojureSymbol">left</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">middle</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">right</span><span title="clojureParen "class="clojureParen">]</span><span title="clojureMap "class="clojureMap"> :</span><span title="clojureSymbol "class="clojureSymbol">content
</span><span title="LineNr "class="LineNr">92</span>  <span title="clojureMap "class="clojureMap">              </span><span title="clojureSymbol "class="clojureSymbol">left-child</span><span title="clojureMap "class="clojureMap"> :</span><span title="clojureSymbol "class="clojureSymbol">left-child
</span><span title="LineNr "class="LineNr">93</span>  <span title="clojureMap "class="clojureMap">              </span><span title="clojureSymbol "class="clojureSymbol">right-child</span><span title="clojureMap "class="clojureMap"> :</span><span title="clojureSymbol "class="clojureSymbol">right-child</span><span title="clojureMap "class="clojureMap"> </span><span title="clojureParen "class="clojureParen">}
</span><span title="LineNr "class="LineNr">94</span>  <span title="clojureVector "class="clojureVector">             </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-split-child</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">s-node</span><span title="clojureParen "class="clojureParen">]</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">m-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">0</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">95</span>  <span title="clojureVector "class="clojureVector">             </span><span title="clojureSymbol "class="clojureSymbol">c</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">param-cmp</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">middle</span><span title="clojureParen "class="clojureParen">)]
</span><span title="LineNr "class="LineNr">96</span>  <span title="clojureSexp "class="clojureSexp">         </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">store-m-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureBoolean "class="clojureBoolean">false
</span><span title="LineNr "class="LineNr">97</span>  <span title="clojureSexp "class="clojureSexp">                       </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureCond "class="clojureCond">cond
</span><span title="LineNr "class="LineNr">98</span>  <span title="clojureSexp "class="clojureSexp">                         </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">&#61;</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">c</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">0</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">left</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">right</span><span title="clojureParen "class="clojureParen">]
</span><span title="LineNr "class="LineNr">99</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">100</span>  <span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-is-thin</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[{</span><span title="clojureSymbol "class="clojureSymbol">leaf</span><span title="clojureMap "class="clojureMap"> :</span><span title="clojureSymbol "class="clojureSymbol">leaf</span><span title="clojureMap "class="clojureMap"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureMap "class="clojureMap"> :</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureParen "class="clojureParen">}]
</span><span title="LineNr "class="LineNr">101</span>  <span title="clojureSexp "class="clojureSexp">   </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">if</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">leaf
</span><span title="LineNr "class="LineNr">102</span>  <span title="clojureSexp "class="clojureSexp">     </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">&#61;</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">count</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">-</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">param-t</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">))
</span><span title="LineNr "class="LineNr">103</span>  <span title="clojureSexp "class="clojureSexp">     </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">&#61;</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">count</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">-</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">*</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">2</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">param-t</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">))))
</span><span title="LineNr "class="LineNr">104</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">105</span>  <span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">find</span><span title="clojureSymbol "class="clojureSymbol">-key-in-content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">start</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">step</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureParen "class="clojureParen">]
</span><span title="LineNr "class="LineNr">106</span>  <span title="clojureSexp "class="clojureSexp">   </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">let</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">len</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">count</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureParen "class="clojureParen">)]
</span><span title="LineNr "class="LineNr">107</span>  <span title="clojureSexp "class="clojureSexp">     </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">loop</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">start</span><span title="clojureParen "class="clojureParen">]
</span><span title="LineNr "class="LineNr">108</span>  <span title="clojureSexp "class="clojureSexp">       </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">if</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">&gt;&#61;</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">len</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">109</span>  <span title="clojureSexp "class="clojureSexp">         </span><span title="clojureParen "class="clojureParen">{</span><span title="clojureMap "class="clojureMap">:</span><span title="clojureFunc "class="clojureFunc">not</span><span title="clojureSymbol "class="clojureSymbol">-found</span><span title="clojureMap "class="clojureMap"> </span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureParen "class="clojureParen">}
</span><span title="LineNr "class="LineNr">110</span>  <span title="clojureSexp "class="clojureSexp">         </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">let</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">c</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">param-cmp</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureParen "class="clojureParen">))]
</span><span title="LineNr "class="LineNr">111</span>  <span title="clojureSexp "class="clojureSexp">           </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureCond "class="clojureCond">cond
</span><span title="LineNr "class="LineNr">112</span>  <span title="clojureSexp "class="clojureSexp">             </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">&#61;</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">c</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">0</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">{</span><span title="clojureMap "class="clojureMap">:</span><span title="clojureSymbol "class="clojureSymbol">found</span><span title="clojureMap "class="clojureMap"> </span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureParen "class="clojureParen">}
</span><span title="LineNr "class="LineNr">113</span>  <span title="clojureSexp "class="clojureSexp">             </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">&lt;</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">c</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">0</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">{</span><span title="clojureMap "class="clojureMap">:</span><span title="clojureFunc "class="clojureFunc">not</span><span title="clojureSymbol "class="clojureSymbol">-found</span><span title="clojureMap "class="clojureMap"> </span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureParen "class="clojureParen">}
</span><span title="LineNr "class="LineNr">114</span>  <span title="clojureSexp "class="clojureSexp">             </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">&gt;</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">c</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">0</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">recur</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">+</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">i</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">step</span><span title="clojureParen "class="clojureParen">))))))))
</span><span title="LineNr "class="LineNr">115</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">116</span>  <span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">find</span><span title="clojureSymbol "class="clojureSymbol">-max-key</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[{</span><span title="clojureSymbol "class="clojureSymbol">leaf</span><span title="clojureMap "class="clojureMap"> :</span><span title="clojureSymbol "class="clojureSymbol">leaf</span><span title="clojureMap "class="clojureMap"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureMap "class="clojureMap"> :</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureParen "class="clojureParen">}]
</span><span title="LineNr "class="LineNr">117</span>  <span title="clojureSexp "class="clojureSexp">   </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">let</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">c</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">-</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">count</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">))]
</span><span title="LineNr "class="LineNr">118</span>  <span title="clojureSexp "class="clojureSexp">     </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">if</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">leaf</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">c</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">find</span><span title="clojureSymbol "class="clojureSymbol">-max-key</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">load</span><span title="clojureSymbol "class="clojureSymbol">-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">c</span><span title="clojureParen "class="clojureParen">)))))
</span><span title="LineNr "class="LineNr">119</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">120</span>  <span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">find</span><span title="clojureSymbol "class="clojureSymbol">-min-key</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[{</span><span title="clojureSymbol "class="clojureSymbol">leaf</span><span title="clojureMap "class="clojureMap"> :</span><span title="clojureSymbol "class="clojureSymbol">leaf</span><span title="clojureMap "class="clojureMap"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureMap "class="clojureMap"> :</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureParen "class="clojureParen">}]
</span><span title="LineNr "class="LineNr">121</span>  <span title="clojureSexp "class="clojureSexp">   </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">let</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">c</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">0</span><span title="clojureParen "class="clojureParen">)]
</span><span title="LineNr "class="LineNr">122</span>  <span title="clojureSexp "class="clojureSexp">     </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">if</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">leaf</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">c</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">find</span><span title="clojureSymbol "class="clojureSymbol">-min-key</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">load</span><span title="clojureSymbol "class="clojureSymbol">-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">c</span><span title="clojureParen "class="clojureParen">)))))
</span><span title="LineNr "class="LineNr">123</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">124</span>  <span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">delete-max-key</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">m-node</span><span title="clojureParen "class="clojureParen">]
</span><span title="LineNr "class="LineNr">125</span>  <span title="clojureSexp "class="clojureSexp">   </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">let</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">k</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">find</span><span title="clojureSymbol "class="clojureSymbol">-max-key</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">m-node</span><span title="clojureParen "class="clojureParen">)]
</span><span title="LineNr "class="LineNr">126</span>  <span title="clojureSexp "class="clojureSexp">     </span><span title="clojureParen "class="clojureParen">[(</span><span title="clojureSymbol "class="clojureSymbol">btree-delete-not-thin</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">m-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">k</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">k</span><span title="clojureParen "class="clojureParen">]))
</span><span title="LineNr "class="LineNr">127</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">128</span>  <span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">delete-min-key</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">m-node</span><span title="clojureParen "class="clojureParen">]
</span><span title="LineNr "class="LineNr">129</span>  <span title="clojureSexp "class="clojureSexp">   </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">let</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">k</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">find</span><span title="clojureSymbol "class="clojureSymbol">-min-key</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">m-node</span><span title="clojureParen "class="clojureParen">)]
</span><span title="LineNr "class="LineNr">130</span>  <span title="clojureSexp "class="clojureSexp">     </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">k</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-delete-not-thin</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">m-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">k</span><span title="clojureParen "class="clojureParen">)]))
</span><span title="LineNr "class="LineNr">131</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">132</span>  <span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-rotate-right-delete</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">child-index</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">left-child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureParen "class="clojureParen">]
</span><span title="LineNr "class="LineNr">133</span>  <span title="clojureSexp "class="clojureSexp">   </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">if</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSexp "class="clojureSexp">:</span><span title="clojureSymbol "class="clojureSymbol">leaf</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">134</span>  <span title="clojureSexp "class="clojureSexp">     </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">let</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">k</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">-</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child-index</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">))
</span><span title="LineNr "class="LineNr">135</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureSymbol "class="clojureSymbol">lc</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSexp "class="clojureSexp">:</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">left-child</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">136</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureSymbol "class="clojureSymbol">lcc</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">count</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">lc</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">137</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureSpecial "class="clojureSpecial">new</span><span title="clojureSymbol "class="clojureSymbol">-left-child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">store-m-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureBoolean "class="clojureBoolean">true</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">subvec</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">lc</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">0</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">-</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">lcc</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">)))
</span><span title="LineNr "class="LineNr">138</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureSpecial "class="clojureSpecial">new</span><span title="clojureSymbol "class="clojureSymbol">-child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">{</span><span title="clojureMap "class="clojureMap">:</span><span title="clojureSymbol "class="clojureSymbol">leaf</span><span title="clojureMap "class="clojureMap"> </span><span title="clojureBoolean "class="clojureBoolean">true</span><span title="clojureMap "class="clojureMap"> :</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureMap "class="clojureMap"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">vec</span><span title="clojureSymbol "class="clojureSymbol">-concat</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">k</span><span title="clojureParen "class="clojureParen">]</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSexp "class="clojureSexp">:</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child</span><span title="clojureParen "class="clojureParen">))}
</span><span title="LineNr "class="LineNr">139</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureSymbol "class="clojureSymbol">result-child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-delete-not-thin</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSpecial "class="clojureSpecial">new</span><span title="clojureSymbol "class="clojureSymbol">-child</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">140</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureParen "class="clojureParen">]
</span><span title="LineNr "class="LineNr">141</span>  <span title="clojureSexp "class="clojureSexp">       </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">store-m-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureBoolean "class="clojureBoolean">false</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">vec</span><span title="clojureSymbol "class="clojureSymbol">-replace</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">-</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child-index</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">2</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">+</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child-index</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">142</span>  <span title="clojureSexp "class="clojureSexp">                                        </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSpecial "class="clojureSpecial">new</span><span title="clojureSymbol "class="clojureSymbol">-left-child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">lc</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">-</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">lcc</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">))</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">result-child</span><span title="clojureParen "class="clojureParen">])))
</span><span title="LineNr "class="LineNr">143</span>  <span title="clojureSexp "class="clojureSexp">     </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">let</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">k</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">-</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child-index</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">))
</span><span title="LineNr "class="LineNr">144</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureSymbol "class="clojureSymbol">lc</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSexp "class="clojureSexp">:</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">left-child</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">145</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureSymbol "class="clojureSymbol">lcc</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">count</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">lc</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">146</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureSpecial "class="clojureSpecial">new</span><span title="clojureSymbol "class="clojureSymbol">-left-child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">store-m-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureBoolean "class="clojureBoolean">false</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">subvec</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">lc</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">0</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">-</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">lcc</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">2</span><span title="clojureParen "class="clojureParen">)))
</span><span title="LineNr "class="LineNr">147</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureSpecial "class="clojureSpecial">new</span><span title="clojureSymbol "class="clojureSymbol">-child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">{</span><span title="clojureMap "class="clojureMap">:</span><span title="clojureSymbol "class="clojureSymbol">leaf</span><span title="clojureMap "class="clojureMap"> </span><span title="clojureBoolean "class="clojureBoolean">false</span><span title="clojureMap "class="clojureMap"> :</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureMap "class="clojureMap"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">vec</span><span title="clojureSymbol "class="clojureSymbol">-concat</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[(</span><span title="clojureSymbol "class="clojureSymbol">lc</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">-</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">lcc</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">))</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">k</span><span title="clojureParen "class="clojureParen">]</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSexp "class="clojureSexp">:</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child</span><span title="clojureParen "class="clojureParen">))}
</span><span title="LineNr "class="LineNr">148</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureSymbol "class="clojureSymbol">result-child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-delete-not-thin</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSpecial "class="clojureSpecial">new</span><span title="clojureSymbol "class="clojureSymbol">-child</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">149</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureParen "class="clojureParen">]
</span><span title="LineNr "class="LineNr">150</span>  <span title="clojureSexp "class="clojureSexp">       </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">store-m-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureBoolean "class="clojureBoolean">false</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">vec</span><span title="clojureSymbol "class="clojureSymbol">-replace</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">-</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child-index</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">2</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">+</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child-index</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">151</span>  <span title="clojureSexp "class="clojureSexp">                                        </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSpecial "class="clojureSpecial">new</span><span title="clojureSymbol "class="clojureSymbol">-left-child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">lc</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">-</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">lcc</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">2</span><span title="clojureParen "class="clojureParen">))</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">result-child</span><span title="clojureParen "class="clojureParen">])))))
</span><span title="LineNr "class="LineNr">152</span>  <span title="Normal "class="Normal">
</span><span title="LineNr "class="LineNr">153</span>  <span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-rotate-left-delete</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">child-index</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSymbol "class="clojureSymbol">right-child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureParen "class="clojureParen">]
</span><span title="LineNr "class="LineNr">154</span>  <span title="clojureSexp "class="clojureSexp">   </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">if</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSexp "class="clojureSexp">:</span><span title="clojureSymbol "class="clojureSymbol">leaf</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">155</span>  <span title="clojureSexp "class="clojureSexp">     </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">let</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">k</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">+</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child-index</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">))
</span><span title="LineNr "class="LineNr">156</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureSymbol "class="clojureSymbol">rc</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSexp "class="clojureSexp">:</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">right-child</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">157</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureSymbol "class="clojureSymbol">rcc</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">count</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">rc</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">158</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureSpecial "class="clojureSpecial">new</span><span title="clojureSymbol "class="clojureSymbol">-right-child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">store-m-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureBoolean "class="clojureBoolean">true</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">subvec</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">rc</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">))
</span><span title="LineNr "class="LineNr">159</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureSpecial "class="clojureSpecial">new</span><span title="clojureSymbol "class="clojureSymbol">-child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">{</span><span title="clojureMap "class="clojureMap">:</span><span title="clojureSymbol "class="clojureSymbol">leaf</span><span title="clojureMap "class="clojureMap"> </span><span title="clojureBoolean "class="clojureBoolean">true</span><span title="clojureMap "class="clojureMap"> :</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureMap "class="clojureMap"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">vec</span><span title="clojureSymbol "class="clojureSymbol">-concat</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSexp "class="clojureSexp">:</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">k</span><span title="clojureParen "class="clojureParen">])}
</span><span title="LineNr "class="LineNr">160</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureSymbol "class="clojureSymbol">result-child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-delete-not-thin</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSpecial "class="clojureSpecial">new</span><span title="clojureSymbol "class="clojureSymbol">-child</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">161</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureParen "class="clojureParen">]
</span><span title="LineNr "class="LineNr">162</span>  <span title="clojureSexp "class="clojureSexp">       </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">store-m-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureBoolean "class="clojureBoolean">false</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">vec</span><span title="clojureSymbol "class="clojureSymbol">-replace</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child-index</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">+</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child-index</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">3</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">163</span>  <span title="clojureSexp "class="clojureSexp">                                        </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">result-child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">rc</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">0</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSpecial "class="clojureSpecial">new</span><span title="clojureSymbol "class="clojureSymbol">-right-child</span><span title="clojureParen "class="clojureParen">])))
</span><span title="LineNr "class="LineNr">164</span>  <span title="clojureSexp "class="clojureSexp">     </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSpecial "class="clojureSpecial">let</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">k</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">+</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child-index</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">))
</span><span title="LineNr "class="LineNr">165</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureSymbol "class="clojureSymbol">rc</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSexp "class="clojureSexp">:</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">right-child</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">166</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureSymbol "class="clojureSymbol">rcc</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">count</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">rc</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">167</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureSpecial "class="clojureSpecial">new</span><span title="clojureSymbol "class="clojureSymbol">-right-child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">store-m-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureBoolean "class="clojureBoolean">false</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">subvec</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">rc</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">2</span><span title="clojureParen "class="clojureParen">))
</span><span title="LineNr "class="LineNr">168</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureSpecial "class="clojureSpecial">new</span><span title="clojureSymbol "class="clojureSymbol">-child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">{</span><span title="clojureMap "class="clojureMap">:</span><span title="clojureSymbol "class="clojureSymbol">leaf</span><span title="clojureMap "class="clojureMap"> </span><span title="clojureBoolean "class="clojureBoolean">false</span><span title="clojureMap "class="clojureMap"> :</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureMap "class="clojureMap"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">vec</span><span title="clojureSymbol "class="clojureSymbol">-concat</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSexp "class="clojureSexp">:</span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">k</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">rc</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">0</span><span title="clojureParen "class="clojureParen">)])}
</span><span title="LineNr "class="LineNr">169</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureSymbol "class="clojureSymbol">result-child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">btree-delete-not-thin</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSpecial "class="clojureSpecial">new</span><span title="clojureSymbol "class="clojureSymbol">-child</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureFunc "class="clojureFunc">key</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr">170</span>  <span title="clojureVector "class="clojureVector">           </span><span title="clojureParen "class="clojureParen">]
</span><span title="LineNr "class="LineNr">171</span>  <span title="clojureSexp "class="clojureSexp">       </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">store-m-node</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureBoolean "class="clojureBoolean">false</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureFunc "class="clojureFunc">vec</span><span title="clojureSymbol "class="clojureSymbol">-replace</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">content</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child-index</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">+</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureSymbol "class="clojureSymbol">child-index</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">3</span><span title="clojureParen "class="clojureParen">)
</span><span title="LineNr "class="LineNr last-LineNr">172</span>  <span title="clojureSexp "class="clojureSexp">                                        </span><span title="clojureParen "class="clojureParen">[</span><span title="clojureSymbol "class="clojureSymbol">result-child</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureParen "class="clojureParen">(</span><span title="clojureSymbol "class="clojureSymbol">rc</span><span title="clojureSexp "class="clojureSexp"> </span><span title="clojureNumber "class="clojureNumber">1</span><span title="clojureParen "class="clojureParen">)</span><span title="clojureVector "class="clojureVector"> </span><span title="clojureSpecial "class="clojureSpecial">new</span><span title="clojureSymbol "class="clojureSymbol">-right-child</span><span title="clojureParen "class="clojureParen">])))))</span>